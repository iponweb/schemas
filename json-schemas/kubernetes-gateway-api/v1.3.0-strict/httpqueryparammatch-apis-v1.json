{
  "description": "HTTPQueryParamMatch describes how to select a HTTP route by matching HTTP query parameters.",
  "type": "object",
  "required": [
    "name",
    "value"
  ],
  "properties": {
    "name": {
      "description": "Name is the name of the HTTP query param to be matched. This must be an exact string match. (See https://tools.ietf.org/html/rfc7230#section-2.7.3).\n\nIf multiple entries specify equivalent query param names, only the first entry with an equivalent name MUST be considered for a match. Subsequent entries with an equivalent query param name MUST be ignored.\n\nIf a query param is repeated in an HTTP request, the behavior is purposely left undefined, since different data planes have different capabilities. However, it is *recommended* that implementations should match against the first value of the param if the data plane supports it, as this behavior is expected in other load balancing contexts outside of the Gateway API.\n\nUsers SHOULD NOT route traffic based on repeated query params to guard themselves against potential differences in the implementations.",
      "type": [
        "string",
        "null"
      ],
      "default": ""
    },
    "type": {
      "description": "Type specifies how to match against the value of the query parameter.\n\nSupport: Extended (Exact)\n\nSupport: Implementation-specific (RegularExpression)\n\nSince RegularExpression QueryParamMatchType has Implementation-specific conformance, implementations can support POSIX, PCRE or any other dialects of regular expressions. Please read the implementation's documentation to determine the supported dialect.",
      "type": [
        "string",
        "null"
      ]
    },
    "value": {
      "description": "Value is the value of HTTP query param to be matched.",
      "type": [
        "string",
        "null"
      ],
      "default": ""
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}
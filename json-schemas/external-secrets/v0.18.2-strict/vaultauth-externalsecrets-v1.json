{
  "description": "VaultAuth is the configuration used to authenticate with a Vault server. Only one of `tokenSecretRef`, `appRole`,  `kubernetes`, `ldap`, `userPass`, `jwt` or `cert` can be specified. A namespace to authenticate against can optionally be specified.",
  "type": "object",
  "properties": {
    "appRole": {
      "description": "AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.",
      "$ref": "_definitions.json#/definitions/io.external-secrets.apis.externalsecrets.v1.VaultAppRole"
    },
    "cert": {
      "description": "Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate Cert authentication method",
      "$ref": "_definitions.json#/definitions/io.external-secrets.apis.externalsecrets.v1.VaultCertAuth"
    },
    "iam": {
      "description": "Iam authenticates with vault by passing a special AWS request signed with AWS IAM credentials AWS IAM authentication method",
      "$ref": "_definitions.json#/definitions/io.external-secrets.apis.externalsecrets.v1.VaultIamAuth"
    },
    "jwt": {
      "description": "Jwt authenticates with Vault by passing role and JWT token using the JWT/OIDC authentication method",
      "$ref": "_definitions.json#/definitions/io.external-secrets.apis.externalsecrets.v1.VaultJwtAuth"
    },
    "kubernetes": {
      "description": "Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.",
      "$ref": "_definitions.json#/definitions/io.external-secrets.apis.externalsecrets.v1.VaultKubernetesAuth"
    },
    "ldap": {
      "description": "Ldap authenticates with Vault by passing username/password pair using the LDAP authentication method",
      "$ref": "_definitions.json#/definitions/io.external-secrets.apis.externalsecrets.v1.VaultLdapAuth"
    },
    "namespace": {
      "description": "Name of the vault namespace to authenticate to. This can be different than the namespace your secret is in. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: \"ns1\". More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces This will default to Vault.Namespace field if set, or empty otherwise",
      "type": [
        "string",
        "null"
      ]
    },
    "tokenSecretRef": {
      "description": "TokenSecretRef authenticates with Vault by presenting a token.",
      "$ref": "_definitions.json#/definitions/io.external-secrets.apis.meta.v1.SecretKeySelector"
    },
    "userPass": {
      "description": "UserPass authenticates with Vault by passing username/password pair",
      "$ref": "_definitions.json#/definitions/io.external-secrets.apis.externalsecrets.v1.VaultUserPassAuth"
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}
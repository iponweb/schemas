{
  "description": "WebTLSConfig defines the TLS parameters for HTTPS.",
  "type": "object",
  "required": [
    "keySecret",
    "cert"
  ],
  "properties": {
    "cert": {
      "description": "Contains the TLS certificate for the server.",
      "default": {},
      "$ref": "_definitions.json#/definitions/com.coreos.monitoring.pkg.apis.monitoring.v1.SecretOrConfigMap"
    },
    "cipherSuites": {
      "description": "List of supported cipher suites for TLS versions up to TLS 1.2. If empty, Go default cipher suites are used. Available cipher suites are documented in the go documentation: https://golang.org/pkg/crypto/tls/#pkg-constants",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ],
        "default": ""
      }
    },
    "clientAuthType": {
      "description": "Server policy for client authentication. Maps to ClientAuth Policies. For more detail on clientAuth options: https://golang.org/pkg/crypto/tls/#ClientAuthType",
      "type": [
        "string",
        "null"
      ]
    },
    "client_ca": {
      "description": "Contains the CA certificate for client certificate authentication to the server.",
      "default": {},
      "$ref": "_definitions.json#/definitions/com.coreos.monitoring.pkg.apis.monitoring.v1.SecretOrConfigMap"
    },
    "curvePreferences": {
      "description": "Elliptic curves that will be used in an ECDHE handshake, in preference order. Available curves are documented in the go documentation: https://golang.org/pkg/crypto/tls/#CurveID",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ],
        "default": ""
      }
    },
    "keySecret": {
      "description": "Secret containing the TLS key for the server.",
      "default": {},
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.SecretKeySelector"
    },
    "maxVersion": {
      "description": "Maximum TLS version that is acceptable. Defaults to TLS13.",
      "type": [
        "string",
        "null"
      ]
    },
    "minVersion": {
      "description": "Minimum TLS version that is acceptable. Defaults to TLS12.",
      "type": [
        "string",
        "null"
      ]
    },
    "preferServerCipherSuites": {
      "description": "Controls whether the server selects the client's most preferred cipher suite, or the server's most preferred cipher suite. If true then the server's preference, as expressed in the order of elements in cipherSuites, is used.",
      "type": [
        "boolean",
        "null"
      ]
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}
{
  "description": "ThanosRulerSpec is a specification of the desired behavior of the ThanosRuler. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
  "type": "object",
  "properties": {
    "affinity": {
      "description": "If specified, the pod's scheduling constraints.",
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.Affinity"
    },
    "alertDropLabels": {
      "description": "AlertDropLabels configure the label names which should be dropped in ThanosRuler alerts. The replica label `thanos_ruler_replica` will always be dropped in alerts.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ],
        "default": ""
      }
    },
    "alertQueryUrl": {
      "description": "The external Query URL the Thanos Ruler will set in the 'Source' field of all alerts. Maps to the '--alert.query-url' CLI arg.",
      "type": [
        "string",
        "null"
      ]
    },
    "alertRelabelConfigFile": {
      "description": "AlertRelabelConfigFile specifies the path of the alert relabeling configuration file. When used alongside with AlertRelabelConfigs, alertRelabelConfigFile takes precedence.",
      "type": [
        "string",
        "null"
      ]
    },
    "alertRelabelConfigs": {
      "description": "AlertRelabelConfigs configures alert relabeling in ThanosRuler. Alert relabel configurations must have the form as specified in the official Prometheus documentation: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#alert_relabel_configs Alternative to AlertRelabelConfigFile, and lower order priority.",
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.SecretKeySelector"
    },
    "alertmanagersConfig": {
      "description": "Define configuration for connecting to alertmanager.  Only available with thanos v0.10.0 and higher.  Maps to the `alertmanagers.config` arg.",
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.SecretKeySelector"
    },
    "alertmanagersUrl": {
      "description": "Define URLs to send alerts to Alertmanager.  For Thanos v0.10.0 and higher, AlertManagersConfig should be used instead.  Note: this field will be ignored if AlertManagersConfig is specified. Maps to the `alertmanagers.url` arg.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ],
        "default": ""
      }
    },
    "containers": {
      "description": "Containers allows injecting additional containers or modifying operator generated containers. This can be used to allow adding an authentication proxy to a ThanosRuler pod or to change the behavior of an operator generated container. Containers described here modify an operator generated container if they share the same name and modifications are done via a strategic merge patch. The current container names are: `thanos-ruler` and `config-reloader`. Overriding containers is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "default": {},
        "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.Container"
      }
    },
    "enforcedNamespaceLabel": {
      "description": "EnforcedNamespaceLabel enforces adding a namespace label of origin for each alert and metric that is user created. The label value will always be the namespace of the object that is being created.",
      "type": [
        "string",
        "null"
      ]
    },
    "evaluationInterval": {
      "description": "Interval between consecutive evaluations.",
      "type": [
        "string",
        "null"
      ]
    },
    "excludedFromEnforcement": {
      "description": "List of references to PrometheusRule objects to be excluded from enforcing a namespace label of origin. Applies only if enforcedNamespaceLabel set to true.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "default": {},
        "$ref": "_definitions.json#/definitions/com.coreos.monitoring.pkg.apis.monitoring.v1.ObjectReference"
      }
    },
    "externalPrefix": {
      "description": "The external URL the Thanos Ruler instances will be available under. This is necessary to generate correct URLs. This is necessary if Thanos Ruler is not served from root of a DNS name.",
      "type": [
        "string",
        "null"
      ]
    },
    "grpcServerTlsConfig": {
      "description": "GRPCServerTLSConfig configures the gRPC server from which Thanos Querier reads recorded rule data. Note: Currently only the CAFile, CertFile, and KeyFile fields are supported. Maps to the '--grpc-server-tls-*' CLI args.",
      "$ref": "_definitions.json#/definitions/com.coreos.monitoring.pkg.apis.monitoring.v1.TLSConfig"
    },
    "hostAliases": {
      "description": "Pods' hostAliases configuration",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "default": {},
        "$ref": "_definitions.json#/definitions/com.coreos.monitoring.pkg.apis.monitoring.v1.HostAlias"
      },
      "x-kubernetes-list-map-keys": [
        "ip"
      ],
      "x-kubernetes-list-type": "map"
    },
    "image": {
      "description": "Thanos container image URL.",
      "type": [
        "string",
        "null"
      ]
    },
    "imagePullSecrets": {
      "description": "An optional list of references to secrets in the same namespace to use for pulling thanos images from registries see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "default": {},
        "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.LocalObjectReference"
      }
    },
    "initContainers": {
      "description": "InitContainers allows adding initContainers to the pod definition. Those can be used to e.g. fetch secrets for injection into the ThanosRuler configuration from external sources. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ Using initContainers for any use case other then secret fetching is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "default": {},
        "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.Container"
      }
    },
    "labels": {
      "description": "Labels configure the external label pairs to ThanosRuler. A default replica label `thanos_ruler_replica` will be always added  as a label with the value of the pod's name and it will be dropped in the alerts.",
      "type": [
        "object",
        "null"
      ],
      "additionalProperties": {
        "type": [
          "string",
          "null"
        ],
        "default": ""
      }
    },
    "listenLocal": {
      "description": "ListenLocal makes the Thanos ruler listen on loopback, so that it does not bind against the Pod IP.",
      "type": [
        "boolean",
        "null"
      ]
    },
    "logFormat": {
      "description": "Log format for ThanosRuler to be configured with.",
      "type": [
        "string",
        "null"
      ]
    },
    "logLevel": {
      "description": "Log level for ThanosRuler to be configured with.",
      "type": [
        "string",
        "null"
      ]
    },
    "minReadySeconds": {
      "description": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready) This is an alpha field and requires enabling StatefulSetMinReadySeconds feature gate.",
      "type": [
        "integer",
        "null"
      ],
      "format": "int64"
    },
    "nodeSelector": {
      "description": "Define which Nodes the Pods are scheduled on.",
      "type": [
        "object",
        "null"
      ],
      "additionalProperties": {
        "type": [
          "string",
          "null"
        ],
        "default": ""
      }
    },
    "objectStorageConfig": {
      "description": "ObjectStorageConfig configures object storage in Thanos. Alternative to ObjectStorageConfigFile, and lower order priority.",
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.SecretKeySelector"
    },
    "objectStorageConfigFile": {
      "description": "ObjectStorageConfigFile specifies the path of the object storage configuration file. When used alongside with ObjectStorageConfig, ObjectStorageConfigFile takes precedence.",
      "type": [
        "string",
        "null"
      ]
    },
    "paused": {
      "description": "When a ThanosRuler deployment is paused, no actions except for deletion will be performed on the underlying objects.",
      "type": [
        "boolean",
        "null"
      ]
    },
    "podMetadata": {
      "description": "PodMetadata contains Labels and Annotations gets propagated to the thanos ruler pods.",
      "$ref": "_definitions.json#/definitions/com.coreos.monitoring.pkg.apis.monitoring.v1.EmbeddedObjectMetadata"
    },
    "portName": {
      "description": "Port name used for the pods and governing service. This defaults to web",
      "type": [
        "string",
        "null"
      ]
    },
    "priorityClassName": {
      "description": "Priority class assigned to the Pods",
      "type": [
        "string",
        "null"
      ]
    },
    "prometheusRulesExcludedFromEnforce": {
      "description": "PrometheusRulesExcludedFromEnforce - list of Prometheus rules to be excluded from enforcing of adding namespace labels. Works only if enforcedNamespaceLabel set to true. Make sure both ruleNamespace and ruleName are set for each pair Deprecated: use excludedFromEnforcement instead.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "default": {},
        "$ref": "_definitions.json#/definitions/com.coreos.monitoring.pkg.apis.monitoring.v1.PrometheusRuleExcludeConfig"
      }
    },
    "queryConfig": {
      "description": "Define configuration for connecting to thanos query instances. If this is defined, the QueryEndpoints field will be ignored. Maps to the `query.config` CLI argument. Only available with thanos v0.11.0 and higher.",
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.SecretKeySelector"
    },
    "queryEndpoints": {
      "description": "QueryEndpoints defines Thanos querier endpoints from which to query metrics. Maps to the --query flag of thanos ruler.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ],
        "default": ""
      }
    },
    "replicas": {
      "description": "Number of thanos ruler instances to deploy.",
      "type": [
        "integer",
        "null"
      ],
      "format": "int32"
    },
    "resources": {
      "description": "Resources defines the resource requirements for single Pods. If not provided, no requests/limits will be set",
      "default": {},
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.ResourceRequirements"
    },
    "retention": {
      "description": "Time duration ThanosRuler shall retain data for. Default is '24h', and must match the regular expression `[0-9]+(ms|s|m|h|d|w|y)` (milliseconds seconds minutes hours days weeks years).",
      "type": [
        "string",
        "null"
      ]
    },
    "routePrefix": {
      "description": "The route prefix ThanosRuler registers HTTP handlers for. This allows thanos UI to be served on a sub-path.",
      "type": [
        "string",
        "null"
      ]
    },
    "ruleNamespaceSelector": {
      "description": "Namespaces to be selected for Rules discovery. If unspecified, only the same namespace as the ThanosRuler object is in is used.",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
    },
    "ruleSelector": {
      "description": "A label selector to select which PrometheusRules to mount for alerting and recording.",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
    },
    "securityContext": {
      "description": "SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.",
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.PodSecurityContext"
    },
    "serviceAccountName": {
      "description": "ServiceAccountName is the name of the ServiceAccount to use to run the Thanos Ruler Pods.",
      "type": [
        "string",
        "null"
      ]
    },
    "storage": {
      "description": "Storage spec to specify how storage shall be used.",
      "$ref": "_definitions.json#/definitions/com.coreos.monitoring.pkg.apis.monitoring.v1.StorageSpec"
    },
    "tolerations": {
      "description": "If specified, the pod's tolerations.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "default": {},
        "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.Toleration"
      }
    },
    "topologySpreadConstraints": {
      "description": "If specified, the pod's topology spread constraints.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "default": {},
        "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
      }
    },
    "tracingConfig": {
      "description": "TracingConfig configures tracing in Thanos. This is an experimental feature, it may change in any upcoming release in a breaking way.",
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.SecretKeySelector"
    },
    "tracingConfigFile": {
      "description": "TracingConfig specifies the path of the tracing configuration file. When used alongside with TracingConfig, TracingConfigFile takes precedence.",
      "type": [
        "string",
        "null"
      ]
    },
    "volumes": {
      "description": "Volumes allows configuration of additional volumes on the output StatefulSet definition. Volumes specified will be appended to other volumes that are generated as a result of StorageSpec objects.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "default": {},
        "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.Volume"
      }
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}
{
  "definitions": {
    "com.victoriametrics.operator.api.operator.v1.OAuth2": {
      "description": "OAuth2 defines OAuth2 configuration parameters with optional references to secrets with corresponding sensitive values",
      "type": "object",
      "required": [
        "tokenURL"
      ],
      "properties": {
        "clientIDFile": {
          "description": "ClientIDFile defines path to pre-mounted OAuth2 client id",
          "type": "string"
        },
        "clientIDSecret": {
          "description": "ClientIDSecret defines secret or configmap containing the OAuth2 client id",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "clientSecret": {
          "description": "The secret containing the OAuth2 client secret",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "clientSecretFile": {
          "description": "ClientSecretFile defines path to pre-mounted OAuth2 client secret",
          "type": "string"
        },
        "endpointParams": {
          "description": "EndpointParams to append to the token URL",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "scopes": {
          "description": "Scopes used for the token request",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "tokenURL": {
          "description": "TokenURL defines URL to fetch the token from",
          "type": "string",
          "default": ""
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.SyslogServerSpec": {
      "description": "SyslogServerSpec defines syslog servers configuration",
      "type": "object",
      "properties": {
        "tcpListeners": {
          "description": "TCPListeners defines syslog server TCP listener configuration",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.SyslogTCPListener"
          }
        },
        "udpListeners": {
          "description": "UDPListeners defines syslog server UDP listener configuration",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.SyslogUDPListener"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.SyslogTCPListener": {
      "description": "SyslogTCPListener defines configuration for TCP syslog server listen",
      "type": "object",
      "required": [
        "listenPort"
      ],
      "properties": {
        "compressMethod": {
          "description": "CompressMethod for syslog messages see https://docs.victoriametrics.com/victorialogs/data-ingestion/syslog/#compression",
          "type": "string"
        },
        "decolorizeFields": {
          "description": "DecolorizeFields to remove ANSI color codes across logs see https://docs.victoriametrics.com/victorialogs/data-ingestion/syslog/#decolorizing-fields",
          "type": "string"
        },
        "ignoreFields": {
          "description": "IgnoreFields to ignore at logs see https://docs.victoriametrics.com/victorialogs/data-ingestion/syslog/#dropping-fields",
          "type": "string"
        },
        "listenPort": {
          "description": "ListenPort defines listen port",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "streamFields": {
          "description": "StreamFields to use as log stream labels see https://docs.victoriametrics.com/victorialogs/data-ingestion/syslog/#stream-fields",
          "type": "string"
        },
        "tenantID": {
          "description": "TenantID for logs ingested in form of accountID:projectID see https://docs.victoriametrics.com/victorialogs/data-ingestion/syslog/#multiple-configs",
          "type": "string"
        },
        "tlsConfig": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.TLSServerConfig"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.SyslogUDPListener": {
      "description": "SyslogUDPListener defines configuration for UDP syslog server listen",
      "type": "object",
      "required": [
        "listenPort"
      ],
      "properties": {
        "compressMethod": {
          "description": "CompressMethod for syslog messages see https://docs.victoriametrics.com/victorialogs/data-ingestion/syslog/#compression",
          "type": "string"
        },
        "decolorizeFields": {
          "description": "DecolorizeFields to remove ANSI color codes across logs see https://docs.victoriametrics.com/victorialogs/data-ingestion/syslog/#decolorizing-fields",
          "type": "string"
        },
        "ignoreFields": {
          "description": "IgnoreFields to ignore at logs see https://docs.victoriametrics.com/victorialogs/data-ingestion/syslog/#dropping-fields",
          "type": "string"
        },
        "listenPort": {
          "description": "ListenPort defines listen port",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "streamFields": {
          "description": "StreamFields to use as log stream labels see https://docs.victoriametrics.com/victorialogs/data-ingestion/syslog/#stream-fields",
          "type": "string"
        },
        "tenantID": {
          "description": "TenantID for logs ingested in form of accountID:projectID see https://docs.victoriametrics.com/victorialogs/data-ingestion/syslog/#multiple-configs",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.TLSConfig": {
      "description": "TLSConfig specifies TLS configuration parameters with optional references to secrets with corresponding sensitive values",
      "type": "object",
      "properties": {
        "caFile": {
          "description": "CAFile defines path to the pre-mounted file with TLS ca certificate",
          "type": "string"
        },
        "caSecretKeyRef": {
          "description": "CASecret defines secret reference with tls CA key by given key",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "certFile": {
          "description": "CertFile defines path to the pre-mounted file with TLS certificate mutually exclusive with CertSecret",
          "type": "string"
        },
        "certSecretKeyRef": {
          "description": "CertSecret defines secret reference with TLS cert by given key mutually exclusive with CASecret",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "insecureSkipVerify": {
          "description": "Disable target certificate validation.",
          "type": "boolean"
        },
        "keyFile": {
          "description": "KeyFile defines path to the pre-mounted file with TLS cert key mutually exclusive with CertSecret",
          "type": "string"
        },
        "keySecretKeyRef": {
          "description": "CertSecret defines secret reference with TLS key by given key",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "serverName": {
          "description": "Used to verify the hostname for the targets.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.TLSServerConfig": {
      "description": "TLSServerConfig defines VictoriaMetrics TLS configuration for the application's server",
      "type": "object",
      "properties": {
        "certFile": {
          "description": "CertFile defines path to the pre-mounted file with certificate mutually exclusive with CertSecret",
          "type": "string"
        },
        "certSecret": {
          "description": "CertSecretRef defines reference for secret with certificate content under given key mutually exclusive with CertFile",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "keyFile": {
          "description": "KeyFile defines path to the pre-mounted file with certificate key mutually exclusive with KeySecretRef",
          "type": "string"
        },
        "keySecret": {
          "description": "Key defines reference for secret with certificate key content under given key mutually exclusive with KeyFile",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VLAgent": {
      "description": "VLAgent - is a tiny but brave agent, which helps you collect logs from various sources and stores them in VictoriaLogs.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VLAgentSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VLAgentStatus"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VLAgentRemoteWriteSettings": {
      "description": "VLAgentRemoteWriteSettings - defines global settings for all remoteWrite urls.",
      "type": "object",
      "properties": {
        "flushInterval": {
          "description": "Interval for flushing the data to remote storage. (default 1s)",
          "type": "string"
        },
        "maxBlockSize": {
          "description": "The maximum size of unpacked request to send to remote storage",
          "type": "string"
        },
        "maxDiskUsagePerURL": {
          "description": "The maximum file-based buffer size in bytes at -remoteWrite.tmpDataPath",
          "type": "string"
        },
        "queues": {
          "description": "The number of concurrent queues",
          "type": "integer",
          "format": "int32"
        },
        "showURL": {
          "description": "Whether to show -remoteWrite.url in the exported metrics. It is hidden by default, since it can contain sensitive auth info",
          "type": "boolean"
        },
        "tmpDataPath": {
          "description": "Path to directory where temporary data for remote write component is stored (default /vlagent_pq/vlagent-remotewrite-data) If defined, operator ignores spec.storage field and skips adding volume and volumeMount for pq",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VLAgentRemoteWriteSpec": {
      "description": "VLAgentRemoteWriteSpec defines the remote storage configuration for VmAgent",
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "bearerTokenPath": {
          "description": "Optional bearer auth token to use for -remoteWrite.url",
          "type": "string"
        },
        "bearerTokenSecret": {
          "description": "Optional bearer auth token to use for -remoteWrite.url",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "headers": {
          "description": "Headers allow configuring custom http headers Must be in form of semicolon separated header with value e.g. headerName: headerValue",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "maxDiskUsage": {
          "description": "MaxDiskUsage defines the maximum file-based buffer size in bytes for the given remoteWrite It overrides global configuration defined at remoteWriteSettings.maxDiskUsagePerURL",
          "type": "string"
        },
        "oauth2": {
          "description": "OAuth2 defines auth configuration",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.OAuth2"
        },
        "proxyURL": {
          "description": "ProxyURL for -remoteWrite.url. Supported proxies: http, https, socks5. Example: socks5://proxy:1234",
          "type": "string"
        },
        "sendTimeout": {
          "description": "Timeout for sending a single block of data to -remoteWrite.url (default 1m0s)",
          "type": "string"
        },
        "tlsConfig": {
          "description": "TLSConfig describes tls configuration for remote write target",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.TLSConfig"
        },
        "url": {
          "description": "URL of the endpoint to send samples to.",
          "type": "string",
          "default": ""
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VLAgentSpec": {
      "description": "VLAgentSpec defines the desired state of VLAgent",
      "type": "object",
      "required": [
        "remoteWrite"
      ],
      "properties": {
        "affinity": {
          "description": "Affinity If specified, the pod's scheduling constraints.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "claimTemplates": {
          "description": "ClaimTemplates allows adding additional VolumeClaimTemplates for VLAgent in Mode: StatefulSet",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaim"
          }
        },
        "configMaps": {
          "description": "ConfigMaps is a list of ConfigMaps in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/configs/CONFIGMAP_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "containers": {
          "description": "Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "disableAutomountServiceAccountToken": {
          "description": "DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0). Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access. For example, vmagent and vm-config-reloader requires k8s API access. Operator creates volumes with name: \"kube-api-access\", which can be used as volumeMount for extraContainers if needed. And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.",
          "type": "boolean"
        },
        "disableSelfServiceScrape": {
          "description": "DisableSelfServiceScrape controls creation of VMServiceScrape by operator for the application. Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable",
          "type": "boolean"
        },
        "dnsConfig": {
          "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "description": "DNSPolicy sets DNS policy for the pod",
          "type": "string"
        },
        "extraArgs": {
          "description": "ExtraArgs that will be passed to the application container for example remoteWrite.tmpDataPath: /tmp",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "extraEnvs": {
          "description": "ExtraEnvs that will be passed to the application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "extraEnvsFrom": {
          "description": "ExtraEnvsFrom defines source of env variables for the application container could either be secret or configmap",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "hostAliases": {
          "description": "HostAliases provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hostNetwork": {
          "description": "HostNetwork controls whether the pod may use the node network namespace",
          "type": "boolean"
        },
        "host_aliases": {
          "description": "HostAliasesUnderScore provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork. Has Priority over hostAliases field",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "image": {
          "description": "Image - docker image settings if no specified operator uses default version from operator config",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Image"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "initContainers": {
          "description": "InitContainers allows adding initContainers to the pod definition. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "livenessProbe": {
          "description": "LivenessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "logFormat": {
          "description": "LogFormat for VLAgent to be configured with.",
          "type": "string"
        },
        "logLevel": {
          "description": "LogLevel for VLAgent to be configured with. INFO, WARN, ERROR, FATAL, PANIC",
          "type": "string"
        },
        "managedMetadata": {
          "description": "ManagedMetadata defines metadata that will be added to the all objects created by operator for the given CustomResource",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ManagedObjectsMetadata"
        },
        "minReadySeconds": {
          "description": "MinReadySeconds defines a minimum number of seconds to wait before starting update next pod if previous in healthy state Has no effect for VLogs and VMSingle",
          "type": "integer",
          "format": "int32"
        },
        "nodeSelector": {
          "description": "NodeSelector Define which Nodes the Pods are scheduled on.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "paused": {
          "description": "Paused If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.",
          "type": "boolean"
        },
        "persistentVolumeClaimRetentionPolicy": {
          "description": "PersistentVolumeClaimRetentionPolicy allows configuration of PVC retention policy",
          "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy"
        },
        "podDisruptionBudget": {
          "description": "PodDisruptionBudget created by operator",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedPodDisruptionBudgetSpec"
        },
        "podMetadata": {
          "description": "PodMetadata configures Labels and Annotations which are propagated to the vlagent pods.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "port": {
          "description": "Port listen address",
          "type": "string"
        },
        "priorityClassName": {
          "description": "PriorityClassName class assigned to the Pods",
          "type": "string"
        },
        "readinessGates": {
          "description": "ReadinessGates defines pod readiness gates",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
          }
        },
        "readinessProbe": {
          "description": "ReadinessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "remoteWrite": {
          "description": "RemoteWrite list of victoria logs endpoints for victorialogs it must looks like: http://victoria-logs-single:9428/ or for cluster different url https://docs.victoriametrics.com/victorialogs/vlagent/#replication-and-high-availability",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VLAgentRemoteWriteSpec"
          }
        },
        "remoteWriteSettings": {
          "description": "RemoteWriteSettings defines global settings for all remoteWrite urls.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VLAgentRemoteWriteSettings"
        },
        "replicaCount": {
          "description": "ReplicaCount is the expected size of the Application.",
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "revisionHistoryLimitCount": {
          "description": "The number of old ReplicaSets to retain to allow rollback in deployment or maximum number of revisions that will be maintained in the Deployment revision history. Has no effect at StatefulSets Defaults to 10.",
          "type": "integer",
          "format": "int32"
        },
        "rollingUpdateStrategy": {
          "description": "StatefulRollingUpdateStrategy allows configuration for strategyType set it to RollingUpdate for disabling operator statefulSet rollingUpdate",
          "type": "string"
        },
        "runtimeClassName": {
          "description": "RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/",
          "type": "string"
        },
        "schedulerName": {
          "description": "SchedulerName - defines kubernetes scheduler name",
          "type": "string"
        },
        "secrets": {
          "description": "Secrets is a list of Secrets in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/secrets/SECRET_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SecurityContext"
        },
        "serviceAccountName": {
          "description": "ServiceAccountName is the name of the ServiceAccount to use to run the pods",
          "type": "string"
        },
        "serviceScrapeSpec": {
          "description": "ServiceScrapeSpec that will be added to vlagent VMServiceScrape spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMServiceScrapeSpec"
        },
        "serviceSpec": {
          "description": "ServiceSpec that will be added to vlagent service spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AdditionalServiceSpec"
        },
        "startupProbe": {
          "description": "StartupProbe that will be added to CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "storage": {
          "description": "StatefulStorage configures storage for StatefulSet",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.StorageSpec"
        },
        "syslogSpec": {
          "description": "SyslogSpec defines syslog listener configuration",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.SyslogServerSpec"
        },
        "terminationGracePeriodSeconds": {
          "description": "TerminationGracePeriodSeconds period for container graceful termination",
          "type": "integer",
          "format": "int64"
        },
        "tolerations": {
          "description": "Tolerations If specified, the pod's tolerations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          }
        },
        "topologySpreadConstraints": {
          "description": "TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
          }
        },
        "useDefaultResources": {
          "description": "UseDefaultResources controls resource settings By default, operator sets built-in resource requirements",
          "type": "boolean"
        },
        "useStrictSecurity": {
          "description": "UseStrictSecurity enables strict security mode for component it restricts disk writes access uses non-root user out of the box drops not needed security permissions",
          "type": "boolean"
        },
        "volumeMounts": {
          "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the Application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          }
        },
        "volumes": {
          "description": "Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition. Volumes specified will be appended to other volumes that are generated. / +optional",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VLAgentStatus": {
      "description": "VLAgentStatus defines the observed state of VLAgent",
      "type": "object",
      "properties": {
        "observedGeneration": {
          "description": "ObservedGeneration defines current generation picked by operator for the reconcile",
          "type": "integer",
          "format": "int64"
        },
        "reason": {
          "description": "Reason defines human readable error reason",
          "type": "string"
        },
        "replicas": {
          "description": "ReplicaCount Total number of pods targeted by this VLAgent",
          "type": "integer",
          "format": "int32"
        },
        "selector": {
          "description": "Selector string form of label value set for autoscaling",
          "type": "string"
        },
        "updateStatus": {
          "description": "UpdateStatus defines a status for update rollout",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VLCluster": {
      "description": "VLCluster is fast, cost-effective and scalable logs database.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VLClusterSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VLClusterStatus"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VLClusterSpec": {
      "description": "VLClusterSpec defines the desired state of VLCluster",
      "type": "object",
      "properties": {
        "clusterDomainName": {
          "description": "ClusterDomainName defines domain name suffix for in-cluster dns addresses aka .cluster.local used by vlinsert and vlselect to build vlstorage address",
          "type": "string"
        },
        "clusterVersion": {
          "description": "ClusterVersion defines default images tag for all components. it can be overwritten with component specific image.tag value.",
          "type": "string"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "managedMetadata": {
          "description": "ManagedMetadata defines metadata that will be added to the all objects created by operator for the given CustomResource",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ManagedObjectsMetadata"
        },
        "paused": {
          "description": "Paused If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.",
          "type": "boolean"
        },
        "requestsLoadBalancer": {
          "description": "RequestsLoadBalancer configures load-balancing for vlinsert and vlselect requests. It helps to evenly spread load across pods. Usually it's not possible with Kubernetes TCP-based services.",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMAuthLoadBalancer"
        },
        "serviceAccountName": {
          "description": "ServiceAccountName is the name of the ServiceAccount to use to run the VLSelect, VLInsert and VLStorage Pods.",
          "type": "string"
        },
        "useStrictSecurity": {
          "description": "UseStrictSecurity enables strict security mode for component it restricts disk writes access uses non-root user out of the box drops not needed security permissions",
          "type": "boolean"
        },
        "vlinsert": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VLInsert"
        },
        "vlselect": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VLSelect"
        },
        "vlstorage": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VLStorage"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VLClusterStatus": {
      "description": "VLClusterStatus defines the observed state of VLCluster",
      "type": "object",
      "properties": {
        "observedGeneration": {
          "description": "ObservedGeneration defines current generation picked by operator for the reconcile",
          "type": "integer",
          "format": "int64"
        },
        "reason": {
          "description": "Reason defines human readable error reason",
          "type": "string"
        },
        "updateStatus": {
          "description": "UpdateStatus defines a status for update rollout",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VLInsert": {
      "description": "VLInsert defines vlinsert component configuration at victoria-logs cluster",
      "type": "object",
      "properties": {
        "affinity": {
          "description": "Affinity If specified, the pod's scheduling constraints.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "configMaps": {
          "description": "ConfigMaps is a list of ConfigMaps in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/configs/CONFIGMAP_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "containers": {
          "description": "Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "disableAutomountServiceAccountToken": {
          "description": "DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0). Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access. For example, vmagent and vm-config-reloader requires k8s API access. Operator creates volumes with name: \"kube-api-access\", which can be used as volumeMount for extraContainers if needed. And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.",
          "type": "boolean"
        },
        "disableSelfServiceScrape": {
          "description": "DisableSelfServiceScrape controls creation of VMServiceScrape by operator for the application. Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable",
          "type": "boolean"
        },
        "dnsConfig": {
          "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "description": "DNSPolicy sets DNS policy for the pod",
          "type": "string"
        },
        "extraArgs": {
          "description": "ExtraArgs that will be passed to the application container for example remoteWrite.tmpDataPath: /tmp",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "extraEnvs": {
          "description": "ExtraEnvs that will be passed to the application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "extraEnvsFrom": {
          "description": "ExtraEnvsFrom defines source of env variables for the application container could either be secret or configmap",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "hostAliases": {
          "description": "HostAliases provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hostNetwork": {
          "description": "HostNetwork controls whether the pod may use the node network namespace",
          "type": "boolean"
        },
        "host_aliases": {
          "description": "HostAliasesUnderScore provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork. Has Priority over hostAliases field",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hpa": {
          "description": "Configures horizontal pod autoscaling.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedHPA"
        },
        "image": {
          "description": "Image - docker image settings if no specified operator uses default version from operator config",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Image"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "initContainers": {
          "description": "InitContainers allows adding initContainers to the pod definition. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "livenessProbe": {
          "description": "LivenessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "logFormat": {
          "description": "LogFormat for VLSelect to be configured with. default or json",
          "type": "string"
        },
        "logLevel": {
          "description": "LogLevel for VLSelect to be configured with.",
          "type": "string"
        },
        "minReadySeconds": {
          "description": "MinReadySeconds defines a minimum number of seconds to wait before starting update next pod if previous in healthy state Has no effect for VLogs and VMSingle",
          "type": "integer",
          "format": "int32"
        },
        "nodeSelector": {
          "description": "NodeSelector Define which Nodes the Pods are scheduled on.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "paused": {
          "description": "Paused If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.",
          "type": "boolean"
        },
        "podDisruptionBudget": {
          "description": "PodDisruptionBudget created by operator",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedPodDisruptionBudgetSpec"
        },
        "podMetadata": {
          "description": "PodMetadata configures Labels and Annotations which are propagated to the VLSelect pods.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "port": {
          "description": "Port listen address",
          "type": "string"
        },
        "priorityClassName": {
          "description": "PriorityClassName class assigned to the Pods",
          "type": "string"
        },
        "readinessGates": {
          "description": "ReadinessGates defines pod readiness gates",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
          }
        },
        "readinessProbe": {
          "description": "ReadinessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "replicaCount": {
          "description": "ReplicaCount is the expected size of the Application.",
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "revisionHistoryLimitCount": {
          "description": "The number of old ReplicaSets to retain to allow rollback in deployment or maximum number of revisions that will be maintained in the Deployment revision history. Has no effect at StatefulSets Defaults to 10.",
          "type": "integer",
          "format": "int32"
        },
        "rollingUpdate": {
          "description": "RollingUpdate - overrides deployment update params.",
          "$ref": "#/definitions/io.k8s.api.apps.v1.RollingUpdateDeployment"
        },
        "runtimeClassName": {
          "description": "RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/",
          "type": "string"
        },
        "schedulerName": {
          "description": "SchedulerName - defines kubernetes scheduler name",
          "type": "string"
        },
        "secrets": {
          "description": "Secrets is a list of Secrets in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/secrets/SECRET_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SecurityContext"
        },
        "serviceScrapeSpec": {
          "description": "ServiceScrapeSpec that will be added to vlselect VMServiceScrape spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMServiceScrapeSpec"
        },
        "serviceSpec": {
          "description": "ServiceSpec that will be added to vlselect service spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AdditionalServiceSpec"
        },
        "startupProbe": {
          "description": "StartupProbe that will be added to CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "syslogSpec": {
          "description": "SyslogSpec defines syslog listener configuration",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.SyslogServerSpec"
        },
        "terminationGracePeriodSeconds": {
          "description": "TerminationGracePeriodSeconds period for container graceful termination",
          "type": "integer",
          "format": "int64"
        },
        "tolerations": {
          "description": "Tolerations If specified, the pod's tolerations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          }
        },
        "topologySpreadConstraints": {
          "description": "TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
          }
        },
        "updateStrategy": {
          "description": "UpdateStrategy - overrides default update strategy.",
          "type": "string"
        },
        "useDefaultResources": {
          "description": "UseDefaultResources controls resource settings By default, operator sets built-in resource requirements",
          "type": "boolean"
        },
        "useStrictSecurity": {
          "description": "UseStrictSecurity enables strict security mode for component it restricts disk writes access uses non-root user out of the box drops not needed security permissions",
          "type": "boolean"
        },
        "volumeMounts": {
          "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the Application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          }
        },
        "volumes": {
          "description": "Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition. Volumes specified will be appended to other volumes that are generated. / +optional",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VLSelect": {
      "description": "VLSelect defines vlselect component configuration at victoria-logs cluster",
      "type": "object",
      "properties": {
        "affinity": {
          "description": "Affinity If specified, the pod's scheduling constraints.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "configMaps": {
          "description": "ConfigMaps is a list of ConfigMaps in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/configs/CONFIGMAP_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "containers": {
          "description": "Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "disableAutomountServiceAccountToken": {
          "description": "DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0). Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access. For example, vmagent and vm-config-reloader requires k8s API access. Operator creates volumes with name: \"kube-api-access\", which can be used as volumeMount for extraContainers if needed. And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.",
          "type": "boolean"
        },
        "disableSelfServiceScrape": {
          "description": "DisableSelfServiceScrape controls creation of VMServiceScrape by operator for the application. Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable",
          "type": "boolean"
        },
        "dnsConfig": {
          "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "description": "DNSPolicy sets DNS policy for the pod",
          "type": "string"
        },
        "extraArgs": {
          "description": "ExtraArgs that will be passed to the application container for example remoteWrite.tmpDataPath: /tmp",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "extraEnvs": {
          "description": "ExtraEnvs that will be passed to the application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "extraEnvsFrom": {
          "description": "ExtraEnvsFrom defines source of env variables for the application container could either be secret or configmap",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "hostAliases": {
          "description": "HostAliases provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hostNetwork": {
          "description": "HostNetwork controls whether the pod may use the node network namespace",
          "type": "boolean"
        },
        "host_aliases": {
          "description": "HostAliasesUnderScore provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork. Has Priority over hostAliases field",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hpa": {
          "description": "Configures horizontal pod autoscaling.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedHPA"
        },
        "image": {
          "description": "Image - docker image settings if no specified operator uses default version from operator config",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Image"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "initContainers": {
          "description": "InitContainers allows adding initContainers to the pod definition. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "livenessProbe": {
          "description": "LivenessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "logFormat": {
          "description": "LogFormat for VLSelect to be configured with. default or json",
          "type": "string"
        },
        "logLevel": {
          "description": "LogLevel for VLSelect to be configured with.",
          "type": "string"
        },
        "minReadySeconds": {
          "description": "MinReadySeconds defines a minimum number of seconds to wait before starting update next pod if previous in healthy state Has no effect for VLogs and VMSingle",
          "type": "integer",
          "format": "int32"
        },
        "nodeSelector": {
          "description": "NodeSelector Define which Nodes the Pods are scheduled on.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "paused": {
          "description": "Paused If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.",
          "type": "boolean"
        },
        "podDisruptionBudget": {
          "description": "PodDisruptionBudget created by operator",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedPodDisruptionBudgetSpec"
        },
        "podMetadata": {
          "description": "PodMetadata configures Labels and Annotations which are propagated to the VLSelect pods.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "port": {
          "description": "Port listen address",
          "type": "string"
        },
        "priorityClassName": {
          "description": "PriorityClassName class assigned to the Pods",
          "type": "string"
        },
        "readinessGates": {
          "description": "ReadinessGates defines pod readiness gates",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
          }
        },
        "readinessProbe": {
          "description": "ReadinessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "replicaCount": {
          "description": "ReplicaCount is the expected size of the Application.",
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "revisionHistoryLimitCount": {
          "description": "The number of old ReplicaSets to retain to allow rollback in deployment or maximum number of revisions that will be maintained in the Deployment revision history. Has no effect at StatefulSets Defaults to 10.",
          "type": "integer",
          "format": "int32"
        },
        "rollingUpdate": {
          "description": "RollingUpdate - overrides deployment update params.",
          "$ref": "#/definitions/io.k8s.api.apps.v1.RollingUpdateDeployment"
        },
        "runtimeClassName": {
          "description": "RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/",
          "type": "string"
        },
        "schedulerName": {
          "description": "SchedulerName - defines kubernetes scheduler name",
          "type": "string"
        },
        "secrets": {
          "description": "Secrets is a list of Secrets in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/secrets/SECRET_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SecurityContext"
        },
        "serviceScrapeSpec": {
          "description": "ServiceScrapeSpec that will be added to vlselect VMServiceScrape spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMServiceScrapeSpec"
        },
        "serviceSpec": {
          "description": "ServiceSpec that will be added to vlselect service spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AdditionalServiceSpec"
        },
        "startupProbe": {
          "description": "StartupProbe that will be added to CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "terminationGracePeriodSeconds": {
          "description": "TerminationGracePeriodSeconds period for container graceful termination",
          "type": "integer",
          "format": "int64"
        },
        "tolerations": {
          "description": "Tolerations If specified, the pod's tolerations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          }
        },
        "topologySpreadConstraints": {
          "description": "TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
          }
        },
        "updateStrategy": {
          "description": "UpdateStrategy - overrides default update strategy.",
          "type": "string"
        },
        "useDefaultResources": {
          "description": "UseDefaultResources controls resource settings By default, operator sets built-in resource requirements",
          "type": "boolean"
        },
        "useStrictSecurity": {
          "description": "UseStrictSecurity enables strict security mode for component it restricts disk writes access uses non-root user out of the box drops not needed security permissions",
          "type": "boolean"
        },
        "volumeMounts": {
          "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the Application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          }
        },
        "volumes": {
          "description": "Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition. Volumes specified will be appended to other volumes that are generated. / +optional",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VLSingle": {
      "description": "VLSingle is fast, cost-effective and scalable logs database. VLSingle is the Schema for the API",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VLSingleSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VLSingleStatus"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VLSingleSpec": {
      "description": "VLSingleSpec defines the desired state of VLSingle",
      "type": "object",
      "properties": {
        "affinity": {
          "description": "Affinity If specified, the pod's scheduling constraints.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "configMaps": {
          "description": "ConfigMaps is a list of ConfigMaps in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/configs/CONFIGMAP_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "containers": {
          "description": "Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "disableAutomountServiceAccountToken": {
          "description": "DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0). Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access. For example, vmagent and vm-config-reloader requires k8s API access. Operator creates volumes with name: \"kube-api-access\", which can be used as volumeMount for extraContainers if needed. And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.",
          "type": "boolean"
        },
        "disableSelfServiceScrape": {
          "description": "DisableSelfServiceScrape controls creation of VMServiceScrape by operator for the application. Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable",
          "type": "boolean"
        },
        "dnsConfig": {
          "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "description": "DNSPolicy sets DNS policy for the pod",
          "type": "string"
        },
        "extraArgs": {
          "description": "ExtraArgs that will be passed to the application container for example remoteWrite.tmpDataPath: /tmp",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "extraEnvs": {
          "description": "ExtraEnvs that will be passed to the application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "extraEnvsFrom": {
          "description": "ExtraEnvsFrom defines source of env variables for the application container could either be secret or configmap",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "futureRetention": {
          "description": "FutureRetention for the stored logs Log entries with timestamps bigger than now+futureRetention are rejected during data ingestion; see https://docs.victoriametrics.com/victorialogs/#retention",
          "type": "string"
        },
        "hostAliases": {
          "description": "HostAliases provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hostNetwork": {
          "description": "HostNetwork controls whether the pod may use the node network namespace",
          "type": "boolean"
        },
        "host_aliases": {
          "description": "HostAliasesUnderScore provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork. Has Priority over hostAliases field",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "image": {
          "description": "Image - docker image settings if no specified operator uses default version from operator config",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Image"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "initContainers": {
          "description": "InitContainers allows adding initContainers to the pod definition. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "livenessProbe": {
          "description": "LivenessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "logFormat": {
          "description": "LogFormat for VLSingle to be configured with.",
          "type": "string"
        },
        "logIngestedRows": {
          "description": "Whether to log all the ingested log entries; this can be useful for debugging of data ingestion; see https://docs.victoriametrics.com/victorialogs/data-ingestion/",
          "type": "boolean"
        },
        "logLevel": {
          "description": "LogLevel for VictoriaLogs to be configured with.",
          "type": "string"
        },
        "logNewStreams": {
          "description": "LogNewStreams Whether to log creation of new streams; this can be useful for debugging of high cardinality issues with log streams; see https://docs.victoriametrics.com/victorialogs/keyconcepts/#stream-fields",
          "type": "boolean"
        },
        "managedMetadata": {
          "description": "ManagedMetadata defines metadata that will be added to the all objects created by operator for the given CustomResource",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ManagedObjectsMetadata"
        },
        "minReadySeconds": {
          "description": "MinReadySeconds defines a minimum number of seconds to wait before starting update next pod if previous in healthy state Has no effect for VLogs and VMSingle",
          "type": "integer",
          "format": "int32"
        },
        "nodeSelector": {
          "description": "NodeSelector Define which Nodes the Pods are scheduled on.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "paused": {
          "description": "Paused If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.",
          "type": "boolean"
        },
        "podMetadata": {
          "description": "PodMetadata configures Labels and Annotations which are propagated to the VLSingle pods.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "port": {
          "description": "Port listen address",
          "type": "string"
        },
        "priorityClassName": {
          "description": "PriorityClassName class assigned to the Pods",
          "type": "string"
        },
        "readinessGates": {
          "description": "ReadinessGates defines pod readiness gates",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
          }
        },
        "readinessProbe": {
          "description": "ReadinessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "replicaCount": {
          "description": "ReplicaCount is the expected size of the Application.",
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "retentionMaxDiskSpaceUsageBytes": {
          "description": "RetentionMaxDiskSpaceUsageBytes for the stored logs VictoriaLogs keeps at least two last days of data in order to guarantee that the logs for the last day can be returned in queries. This means that the total disk space usage may exceed the -retention.maxDiskSpaceUsageBytes, if the size of the last two days of data exceeds the -retention.maxDiskSpaceUsageBytes. https://docs.victoriametrics.com/victorialogs/#retention-by-disk-space-usage",
          "type": "string"
        },
        "retentionPeriod": {
          "description": "RetentionPeriod for the stored logs https://docs.victoriametrics.com/victorialogs/#retention",
          "type": "string"
        },
        "revisionHistoryLimitCount": {
          "description": "The number of old ReplicaSets to retain to allow rollback in deployment or maximum number of revisions that will be maintained in the Deployment revision history. Has no effect at StatefulSets Defaults to 10.",
          "type": "integer",
          "format": "int32"
        },
        "runtimeClassName": {
          "description": "RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/",
          "type": "string"
        },
        "schedulerName": {
          "description": "SchedulerName - defines kubernetes scheduler name",
          "type": "string"
        },
        "secrets": {
          "description": "Secrets is a list of Secrets in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/secrets/SECRET_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SecurityContext"
        },
        "serviceAccountName": {
          "description": "ServiceAccountName is the name of the ServiceAccount to use to run the pods",
          "type": "string"
        },
        "serviceScrapeSpec": {
          "description": "ServiceScrapeSpec that will be added to vlsingle VMServiceScrape spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMServiceScrapeSpec"
        },
        "serviceSpec": {
          "description": "ServiceSpec that will be added to vlsingle service spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AdditionalServiceSpec"
        },
        "startupProbe": {
          "description": "StartupProbe that will be added to CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "storage": {
          "description": "Storage is the definition of how storage will be used by the VLSingle by default it`s empty dir",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        },
        "storageDataPath": {
          "description": "StorageDataPath disables spec.storage option and overrides arg for victoria-logs binary --storageDataPath, its users responsibility to mount proper device into given path.",
          "type": "string"
        },
        "storageMetadata": {
          "description": "StorageMeta defines annotations and labels attached to PVC for given vlsingle CR",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "syslogSpec": {
          "description": "SyslogSpec defines syslog listener configuration",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.SyslogServerSpec"
        },
        "terminationGracePeriodSeconds": {
          "description": "TerminationGracePeriodSeconds period for container graceful termination",
          "type": "integer",
          "format": "int64"
        },
        "tolerations": {
          "description": "Tolerations If specified, the pod's tolerations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          }
        },
        "topologySpreadConstraints": {
          "description": "TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
          }
        },
        "useDefaultResources": {
          "description": "UseDefaultResources controls resource settings By default, operator sets built-in resource requirements",
          "type": "boolean"
        },
        "useStrictSecurity": {
          "description": "UseStrictSecurity enables strict security mode for component it restricts disk writes access uses non-root user out of the box drops not needed security permissions",
          "type": "boolean"
        },
        "volumeMounts": {
          "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the Application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          }
        },
        "volumes": {
          "description": "Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition. Volumes specified will be appended to other volumes that are generated. / +optional",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VLSingleStatus": {
      "description": "VLSingleStatus defines the observed state of VLSingle",
      "type": "object",
      "properties": {
        "observedGeneration": {
          "description": "ObservedGeneration defines current generation picked by operator for the reconcile",
          "type": "integer",
          "format": "int64"
        },
        "reason": {
          "description": "Reason defines human readable error reason",
          "type": "string"
        },
        "updateStatus": {
          "description": "UpdateStatus defines a status for update rollout",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VLStorage": {
      "description": "VLStorage defines vlstorage component configuration at victoria-logs cluster",
      "type": "object",
      "properties": {
        "affinity": {
          "description": "Affinity If specified, the pod's scheduling constraints.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "claimTemplates": {
          "description": "ClaimTemplates allows adding additional VolumeClaimTemplates for StatefulSet",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaim"
          }
        },
        "configMaps": {
          "description": "ConfigMaps is a list of ConfigMaps in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/configs/CONFIGMAP_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "containers": {
          "description": "Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "disableAutomountServiceAccountToken": {
          "description": "DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0). Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access. For example, vmagent and vm-config-reloader requires k8s API access. Operator creates volumes with name: \"kube-api-access\", which can be used as volumeMount for extraContainers if needed. And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.",
          "type": "boolean"
        },
        "disableSelfServiceScrape": {
          "description": "DisableSelfServiceScrape controls creation of VMServiceScrape by operator for the application. Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable",
          "type": "boolean"
        },
        "dnsConfig": {
          "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "description": "DNSPolicy sets DNS policy for the pod",
          "type": "string"
        },
        "extraArgs": {
          "description": "ExtraArgs that will be passed to the application container for example remoteWrite.tmpDataPath: /tmp",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "extraEnvs": {
          "description": "ExtraEnvs that will be passed to the application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "extraEnvsFrom": {
          "description": "ExtraEnvsFrom defines source of env variables for the application container could either be secret or configmap",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "futureRetention": {
          "description": "FutureRetention for the stored logs Log entries with timestamps bigger than now+futureRetention are rejected during data ingestion; see https://docs.victoriametrics.com/victorialogs/#retention",
          "type": "string"
        },
        "hostAliases": {
          "description": "HostAliases provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hostNetwork": {
          "description": "HostNetwork controls whether the pod may use the node network namespace",
          "type": "boolean"
        },
        "host_aliases": {
          "description": "HostAliasesUnderScore provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork. Has Priority over hostAliases field",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "image": {
          "description": "Image - docker image settings if no specified operator uses default version from operator config",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Image"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "initContainers": {
          "description": "InitContainers allows adding initContainers to the pod definition. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "livenessProbe": {
          "description": "LivenessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "logFormat": {
          "description": "LogFormat for VLStorage to be configured with. default or json",
          "type": "string"
        },
        "logIngestedRows": {
          "description": "Whether to log all the ingested log entries; this can be useful for debugging of data ingestion; see https://docs.victoriametrics.com/victorialogs/data-ingestion/",
          "type": "boolean"
        },
        "logLevel": {
          "description": "LogLevel for VLStorage to be configured with.",
          "type": "string"
        },
        "logNewStreams": {
          "description": "LogNewStreams Whether to log creation of new streams; this can be useful for debugging of high cardinality issues with log streams; see https://docs.victoriametrics.com/victorialogs/keyconcepts/#stream-fields",
          "type": "boolean"
        },
        "maintenanceInsertNodeIDs": {
          "description": "MaintenanceInsertNodeIDs - excludes given node ids from insert requests routing, must contain pod suffixes - for pod-0, id will be 0 and etc. lets say, you have pod-0, pod-1, pod-2, pod-3. to exclude pod-0 and pod-3 from insert routing, define nodeIDs: [0,3]. Useful at storage expanding, when you want to rebalance some data at cluster.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        },
        "maintenanceSelectNodeIDs": {
          "description": "MaintenanceInsertNodeIDs - excludes given node ids from select requests routing, must contain pod suffixes - for pod-0, id will be 0 and etc.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        },
        "minReadySeconds": {
          "description": "MinReadySeconds defines a minimum number of seconds to wait before starting update next pod if previous in healthy state Has no effect for VLogs and VMSingle",
          "type": "integer",
          "format": "int32"
        },
        "nodeSelector": {
          "description": "NodeSelector Define which Nodes the Pods are scheduled on.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "paused": {
          "description": "Paused If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.",
          "type": "boolean"
        },
        "persistentVolumeClaimRetentionPolicy": {
          "description": "PersistentVolumeClaimRetentionPolicy allows configuration of PVC retention policy",
          "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy"
        },
        "podDisruptionBudget": {
          "description": "PodDisruptionBudget created by operator",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedPodDisruptionBudgetSpec"
        },
        "podMetadata": {
          "description": "PodMetadata configures Labels and Annotations which are propagated to the VLStorage pods.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "port": {
          "description": "Port listen address",
          "type": "string"
        },
        "priorityClassName": {
          "description": "PriorityClassName class assigned to the Pods",
          "type": "string"
        },
        "readinessGates": {
          "description": "ReadinessGates defines pod readiness gates",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
          }
        },
        "readinessProbe": {
          "description": "ReadinessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "replicaCount": {
          "description": "ReplicaCount is the expected size of the Application.",
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "retentionMaxDiskSpaceUsageBytes": {
          "description": "RetentionMaxDiskSpaceUsageBytes for the stored logs VictoriaLogs keeps at least two last days of data in order to guarantee that the logs for the last day can be returned in queries. This means that the total disk space usage may exceed the -retention.maxDiskSpaceUsageBytes, if the size of the last two days of data exceeds the -retention.maxDiskSpaceUsageBytes. https://docs.victoriametrics.com/victorialogs/#retention-by-disk-space-usage",
          "type": "string"
        },
        "retentionPeriod": {
          "description": "RetentionPeriod for the stored logs https://docs.victoriametrics.com/victorialogs/#retention",
          "type": "string"
        },
        "revisionHistoryLimitCount": {
          "description": "The number of old ReplicaSets to retain to allow rollback in deployment or maximum number of revisions that will be maintained in the Deployment revision history. Has no effect at StatefulSets Defaults to 10.",
          "type": "integer",
          "format": "int32"
        },
        "rollingUpdateStrategy": {
          "description": "RollingUpdateStrategy defines strategy for application updates Default is OnDelete, in this case operator handles update process Can be changed for RollingUpdate",
          "type": "string"
        },
        "rollingUpdateStrategyBehavior": {
          "description": "RollingUpdateStrategyBehavior defines customized behavior for rolling updates. It applies if the RollingUpdateStrategy is set to OnDelete, which is the default.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.StatefulSetUpdateStrategyBehavior"
        },
        "runtimeClassName": {
          "description": "RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/",
          "type": "string"
        },
        "schedulerName": {
          "description": "SchedulerName - defines kubernetes scheduler name",
          "type": "string"
        },
        "secrets": {
          "description": "Secrets is a list of Secrets in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/secrets/SECRET_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SecurityContext"
        },
        "serviceScrapeSpec": {
          "description": "ServiceScrapeSpec that will be added to vlselect VMServiceScrape spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMServiceScrapeSpec"
        },
        "serviceSpec": {
          "description": "ServiceSpec that will be added to vlselect service spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AdditionalServiceSpec"
        },
        "startupProbe": {
          "description": "StartupProbe that will be added to CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "storage": {
          "description": "Storage configures persistent volume for VLStorage",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.StorageSpec"
        },
        "storageDataPath": {
          "description": "StorageDataPath - path to storage data",
          "type": "string"
        },
        "terminationGracePeriodSeconds": {
          "description": "TerminationGracePeriodSeconds period for container graceful termination",
          "type": "integer",
          "format": "int64"
        },
        "tolerations": {
          "description": "Tolerations If specified, the pod's tolerations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          }
        },
        "topologySpreadConstraints": {
          "description": "TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
          }
        },
        "useDefaultResources": {
          "description": "UseDefaultResources controls resource settings By default, operator sets built-in resource requirements",
          "type": "boolean"
        },
        "useStrictSecurity": {
          "description": "UseStrictSecurity enables strict security mode for component it restricts disk writes access uses non-root user out of the box drops not needed security permissions",
          "type": "boolean"
        },
        "volumeMounts": {
          "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the Application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          }
        },
        "volumes": {
          "description": "Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition. Volumes specified will be appended to other volumes that are generated. / +optional",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VMAnomaly": {
      "description": "VMAnomaly is the Schema for the vmanomalies API.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VMAnomalySpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VMAnomalyStatus"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VMAnomalyMonitoringPullSpec": {
      "description": "VMAnomalyMonitoringPullSpec defines pull monitoring configuration which is enabled by default and served at POD_IP:8490/metrics",
      "type": "object",
      "required": [
        "port"
      ],
      "properties": {
        "addr": {
          "description": "Addr changes listen addr, default is 0.0.0.0",
          "type": "string"
        },
        "port": {
          "description": "Port defines a port for metrics scrape",
          "type": "string",
          "default": ""
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VMAnomalyMonitoringPushSpec": {
      "description": "VMAnomalyMonitoringPushSpec defines metrics push configuration\n\nVMAnomaly uses prometheus text exposition format",
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "basicAuth": {
          "description": "Basic auth defines basic authorization configuration",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.BasicAuth"
        },
        "bearer": {
          "description": "BearerAuth defines authorization with Authorization: Bearer header",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.BearerAuth"
        },
        "extraLabels": {
          "description": "ExtraLabels defines a set of labels to attach to the pushed metrics",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "healthPath": {
          "description": "HealthPath defines absolute or relative URL address where to check availability of the remote webserver",
          "type": "string"
        },
        "pushFrequency": {
          "description": "PushFrequency defines push interval",
          "type": "string"
        },
        "tenantID": {
          "description": "TenantID defines for VictoriaMetrics Cluster version only, tenants are identified by accountID, accountID:projectID or multitenant.",
          "type": "string"
        },
        "timeout": {
          "description": "Timeout for the requests, passed as a string",
          "type": "string"
        },
        "tlsConfig": {
          "description": "TLSConfig defines tls connection configuration",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        },
        "url": {
          "description": "defines target url for push requests",
          "type": "string",
          "default": ""
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VMAnomalyMonitoringSpec": {
      "description": "VMAnomalyMonitoringSpec defines configuration for VMAnomaly monitoring See https://docs.victoriametrics.com/anomaly-detection/components/monitoring/",
      "type": "object",
      "properties": {
        "pull": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VMAnomalyMonitoringPullSpec"
        },
        "push": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VMAnomalyMonitoringPushSpec"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VMAnomalyReadersSpec": {
      "description": "VMAnomalyReadersSpec defines reader configuration for VMAnomaly",
      "type": "object",
      "required": [
        "datasourceURL",
        "samplingPeriod"
      ],
      "properties": {
        "basicAuth": {
          "description": "Basic auth defines basic authorization configuration",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.BasicAuth"
        },
        "bearer": {
          "description": "BearerAuth defines authorization with Authorization: Bearer header",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.BearerAuth"
        },
        "dataRange": {
          "description": "Optional argumentallows defining valid data ranges for input of all the queries in queries",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "datasourceURL": {
          "description": "DatasourceURL address datasource must serve /api/v1/query and /api/v1/query_range APIs",
          "type": "string",
          "default": ""
        },
        "extraFilters": {
          "description": "List of strings with series selector.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "healthPath": {
          "description": "HealthPath defines absolute or relative URL address where to check availability of the remote webserver",
          "type": "string"
        },
        "latencyOffset": {
          "description": "It allows overriding the default -search.latencyOffsetflag of VictoriaMetrics",
          "type": "string"
        },
        "maxPointsPerQuery": {
          "description": "Optional argoverrides how search.maxPointsPerTimeseries flagimpacts vmanomaly on splitting long fitWindow queries into smaller sub-intervals",
          "type": "integer",
          "format": "int32"
        },
        "queryFromLastSeenTimestamp": {
          "description": "If True, then query will be performed from the last seen timestamp for a given series.",
          "type": "boolean"
        },
        "queryRangePath": {
          "description": "Performs PromQL/MetricsQL range query",
          "type": "string"
        },
        "samplingPeriod": {
          "description": "Frequency of the points returned",
          "type": "string",
          "default": ""
        },
        "tenantID": {
          "description": "TenantID defines for VictoriaMetrics Cluster version only, tenants are identified by accountID, accountID:projectID or multitenant.",
          "type": "string"
        },
        "timeout": {
          "description": "Timeout for the requests, passed as a string",
          "type": "string"
        },
        "tlsConfig": {
          "description": "TLSConfig defines tls connection configuration",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        },
        "tz": {
          "description": "Optional argumentspecifies the IANA timezone to account for local shifts, like DST, in models sensitive to seasonal patterns",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VMAnomalySpec": {
      "description": "VMAnomalySpec defines the desired state of VMAnomaly.",
      "type": "object",
      "required": [
        "reader",
        "writer"
      ],
      "properties": {
        "affinity": {
          "description": "Affinity If specified, the pod's scheduling constraints.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "claimTemplates": {
          "description": "ClaimTemplates allows adding additional VolumeClaimTemplates for VMAnomaly",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaim"
          }
        },
        "configMaps": {
          "description": "ConfigMaps is a list of ConfigMaps in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/configs/CONFIGMAP_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "configRawYaml": {
          "description": "ConfigRawYaml - raw configuration for anomaly, it helps it to start without secret. priority -> hardcoded ConfigRaw -> ConfigRaw, provided by user -> ConfigSecret.",
          "type": "string"
        },
        "configSecret": {
          "description": "ConfigSecret is the name of a Kubernetes Secret in the same namespace as the VMAnomaly object, which contains configuration for this VMAnomaly, configuration must be inside secret key: anomaly.yaml. It must be created by user. instance. Defaults to 'vmanomaly-<anomaly-name>' The secret is mounted into /etc/anomaly/config.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "containers": {
          "description": "Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "disableAutomountServiceAccountToken": {
          "description": "DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0). Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access. For example, vmagent and vm-config-reloader requires k8s API access. Operator creates volumes with name: \"kube-api-access\", which can be used as volumeMount for extraContainers if needed. And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.",
          "type": "boolean"
        },
        "disableSelfServiceScrape": {
          "description": "DisableSelfServiceScrape controls creation of VMServiceScrape by operator for the application. Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable",
          "type": "boolean"
        },
        "dnsConfig": {
          "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "description": "DNSPolicy sets DNS policy for the pod",
          "type": "string"
        },
        "extraArgs": {
          "description": "ExtraArgs that will be passed to the application container for example remoteWrite.tmpDataPath: /tmp",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "extraEnvs": {
          "description": "ExtraEnvs that will be passed to the application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "extraEnvsFrom": {
          "description": "ExtraEnvsFrom defines source of env variables for the application container could either be secret or configmap",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "hostAliases": {
          "description": "HostAliases provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hostNetwork": {
          "description": "HostNetwork controls whether the pod may use the node network namespace",
          "type": "boolean"
        },
        "host_aliases": {
          "description": "HostAliasesUnderScore provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork. Has Priority over hostAliases field",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "image": {
          "description": "Image - docker image settings if no specified operator uses default version from operator config",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Image"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "initContainers": {
          "description": "InitContainers allows adding initContainers to the pod definition. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "license": {
          "description": "License allows to configure license key to be used for enterprise features. Using license key is supported starting from VictoriaMetrics v1.94.0. See [here](https://docs.victoriametrics.com/victoriametrics/enterprise/)",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.License"
        },
        "livenessProbe": {
          "description": "LivenessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "logLevel": {
          "description": "LogLevel for VMAnomaly to be configured with. INFO, WARN, ERROR, FATAL, PANIC",
          "type": "string"
        },
        "managedMetadata": {
          "description": "ManagedMetadata defines metadata that will be added to the all objects created by operator for the given CustomResource",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ManagedObjectsMetadata"
        },
        "minReadySeconds": {
          "description": "MinReadySeconds defines a minimum number of seconds to wait before starting update next pod if previous in healthy state Has no effect for VLogs and VMSingle",
          "type": "integer",
          "format": "int32"
        },
        "monitoring": {
          "description": "Monitoring configures how expose anomaly metrics See https://docs.victoriametrics.com/anomaly-detection/components/monitoring/",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VMAnomalyMonitoringSpec"
        },
        "nodeSelector": {
          "description": "NodeSelector Define which Nodes the Pods are scheduled on.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "paused": {
          "description": "Paused If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.",
          "type": "boolean"
        },
        "persistentVolumeClaimRetentionPolicy": {
          "description": "PersistentVolumeClaimRetentionPolicy allows configuration of PVC retention policy",
          "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy"
        },
        "podDisruptionBudget": {
          "description": "PodDisruptionBudget created by operator",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedPodDisruptionBudgetSpec"
        },
        "podMetadata": {
          "description": "PodMetadata configures Labels and Annotations which are propagated to the vmanomaly pods.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "port": {
          "description": "Port listen address",
          "type": "string"
        },
        "priorityClassName": {
          "description": "PriorityClassName class assigned to the Pods",
          "type": "string"
        },
        "reader": {
          "description": "Metrics source for VMAnomaly See https://docs.victoriametrics.com/anomaly-detection/components/reader/",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VMAnomalyReadersSpec"
        },
        "readinessGates": {
          "description": "ReadinessGates defines pod readiness gates",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
          }
        },
        "readinessProbe": {
          "description": "ReadinessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "replicaCount": {
          "description": "ReplicaCount is the expected size of the Application.",
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "revisionHistoryLimitCount": {
          "description": "The number of old ReplicaSets to retain to allow rollback in deployment or maximum number of revisions that will be maintained in the Deployment revision history. Has no effect at StatefulSets Defaults to 10.",
          "type": "integer",
          "format": "int32"
        },
        "rollingUpdateStrategy": {
          "description": "RollingUpdateStrategy allows configuration for strategyType set it to RollingUpdate for disabling operator statefulSet rollingUpdate",
          "type": "string"
        },
        "runtimeClassName": {
          "description": "RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/",
          "type": "string"
        },
        "schedulerName": {
          "description": "SchedulerName - defines kubernetes scheduler name",
          "type": "string"
        },
        "secrets": {
          "description": "Secrets is a list of Secrets in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/secrets/SECRET_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SecurityContext"
        },
        "serviceAccountName": {
          "description": "ServiceAccountName is the name of the ServiceAccount to use to run the pods",
          "type": "string"
        },
        "serviceScrapeSpec": {
          "description": "ServiceScrapeSpec that will be added to vmanomaly VMPodScrape spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMServiceScrapeSpec"
        },
        "shardCount": {
          "description": "ShardCount - numbers of shards of VMAnomaly in this case operator will use 1 sts per shard with replicas count according to spec.replicas.",
          "type": "integer",
          "format": "int32"
        },
        "startupProbe": {
          "description": "StartupProbe that will be added to CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "storage": {
          "description": "Storage configures storage for StatefulSet",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.StorageSpec"
        },
        "terminationGracePeriodSeconds": {
          "description": "TerminationGracePeriodSeconds period for container graceful termination",
          "type": "integer",
          "format": "int64"
        },
        "tolerations": {
          "description": "Tolerations If specified, the pod's tolerations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          }
        },
        "topologySpreadConstraints": {
          "description": "TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
          }
        },
        "useDefaultResources": {
          "description": "UseDefaultResources controls resource settings By default, operator sets built-in resource requirements",
          "type": "boolean"
        },
        "useStrictSecurity": {
          "description": "UseStrictSecurity enables strict security mode for component it restricts disk writes access uses non-root user out of the box drops not needed security permissions",
          "type": "boolean"
        },
        "volumeMounts": {
          "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the Application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          }
        },
        "volumes": {
          "description": "Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition. Volumes specified will be appended to other volumes that are generated. / +optional",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          }
        },
        "writer": {
          "description": "Metrics destination for VMAnomaly See https://docs.victoriametrics.com/anomaly-detection/components/writer/",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VMAnomalyWritersSpec"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VMAnomalyStatus": {
      "description": "VMAnomalyStatus defines the observed state of VMAnomaly.",
      "type": "object",
      "properties": {
        "observedGeneration": {
          "description": "ObservedGeneration defines current generation picked by operator for the reconcile",
          "type": "integer",
          "format": "int64"
        },
        "reason": {
          "description": "Reason defines human readable error reason",
          "type": "string"
        },
        "shards": {
          "description": "Shards represents total number of vmanomaly statefulsets with uniq scrape targets",
          "type": "integer",
          "format": "int32"
        },
        "updateStatus": {
          "description": "UpdateStatus defines a status for update rollout",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VMAnomalyVMWriterMetricFormatSpec": {
      "description": "VMAnomalyVMWriterMetricFormatSpec defines the desired state of VMAnomalyVMWriterMetricFormat",
      "type": "object",
      "required": [
        "__name__",
        "for"
      ],
      "properties": {
        "__name__": {
          "description": "Name of result metric Must have a value with $VAR placeholder in it to distinguish between resulting metrics",
          "type": "string",
          "default": ""
        },
        "extraLabels": {
          "description": "ExtraLabels defines additional labels to be added to the resulting metrics",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "for": {
          "description": "For is a special label with $QUERY_KEY placeholder",
          "type": "string",
          "default": ""
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VMAnomalyWritersSpec": {
      "description": "VMAnomalyWritersSpec defines writer configuration for VMAnomaly",
      "type": "object",
      "required": [
        "datasourceURL"
      ],
      "properties": {
        "basicAuth": {
          "description": "Basic auth defines basic authorization configuration",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.BasicAuth"
        },
        "bearer": {
          "description": "BearerAuth defines authorization with Authorization: Bearer header",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.BearerAuth"
        },
        "datasourceURL": {
          "description": "DatasourceURL defines remote write url for write requests provided endpoint must serve /api/v1/import path vmanomaly joins datasourceURL + \"/api/v1/import\"",
          "type": "string",
          "default": ""
        },
        "healthPath": {
          "description": "HealthPath defines absolute or relative URL address where to check availability of the remote webserver",
          "type": "string"
        },
        "metricFormat": {
          "description": "Metrics to save the output (in metric names or labels)",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VMAnomalyVMWriterMetricFormatSpec"
        },
        "tenantID": {
          "description": "TenantID defines for VictoriaMetrics Cluster version only, tenants are identified by accountID, accountID:projectID or multitenant.",
          "type": "string"
        },
        "timeout": {
          "description": "Timeout for the requests, passed as a string",
          "type": "string"
        },
        "tlsConfig": {
          "description": "TLSConfig defines tls connection configuration",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VTCluster": {
      "description": "VTCluster is fast, cost-effective and scalable traces database.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VTClusterSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VTClusterStatus"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VTClusterSpec": {
      "description": "VTClusterSpec defines the desired state of VTCluster",
      "type": "object",
      "properties": {
        "clusterDomainName": {
          "description": "ClusterDomainName defines domain name suffix for in-cluster dns addresses aka .cluster.local used by vtinsert and vtselect to build vtstorage address",
          "type": "string"
        },
        "clusterVersion": {
          "description": "ClusterVersion defines default images tag for all components. it can be overwritten with component specific image.tag value.",
          "type": "string"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "insert": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VTInsert"
        },
        "managedMetadata": {
          "description": "ManagedMetadata defines metadata that will be added to the all objects created by operator for the given CustomResource",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ManagedObjectsMetadata"
        },
        "paused": {
          "description": "Paused If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.",
          "type": "boolean"
        },
        "requestsLoadBalancer": {
          "description": "RequestsLoadBalancer configures load-balancing for vtinsert and vtselect requests. It helps to evenly spread load across pods. Usually it's not possible with Kubernetes TCP-based services.",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMAuthLoadBalancer"
        },
        "select": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VTSelect"
        },
        "serviceAccountName": {
          "description": "ServiceAccountName is the name of the ServiceAccount to use to run the VTSelect, VTInsert and VTStorage Pods.",
          "type": "string"
        },
        "storage": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VTStorage"
        },
        "useStrictSecurity": {
          "description": "UseStrictSecurity enables strict security mode for component it restricts disk writes access uses non-root user out of the box drops not needed security permissions",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VTClusterStatus": {
      "description": "VTClusterStatus defines the observed state of VTCluster",
      "type": "object",
      "properties": {
        "observedGeneration": {
          "description": "ObservedGeneration defines current generation picked by operator for the reconcile",
          "type": "integer",
          "format": "int64"
        },
        "reason": {
          "description": "Reason defines human readable error reason",
          "type": "string"
        },
        "updateStatus": {
          "description": "UpdateStatus defines a status for update rollout",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VTInsert": {
      "description": "VTInsert defines vtinsert component configuration at victoria-traces cluster",
      "type": "object",
      "properties": {
        "affinity": {
          "description": "Affinity If specified, the pod's scheduling constraints.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "configMaps": {
          "description": "ConfigMaps is a list of ConfigMaps in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/configs/CONFIGMAP_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "containers": {
          "description": "Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "disableAutomountServiceAccountToken": {
          "description": "DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0). Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access. For example, vmagent and vm-config-reloader requires k8s API access. Operator creates volumes with name: \"kube-api-access\", which can be used as volumeMount for extraContainers if needed. And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.",
          "type": "boolean"
        },
        "disableSelfServiceScrape": {
          "description": "DisableSelfServiceScrape controls creation of VMServiceScrape by operator for the application. Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable",
          "type": "boolean"
        },
        "dnsConfig": {
          "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "description": "DNSPolicy sets DNS policy for the pod",
          "type": "string"
        },
        "extraArgs": {
          "description": "ExtraArgs that will be passed to the application container for example remoteWrite.tmpDataPath: /tmp",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "extraEnvs": {
          "description": "ExtraEnvs that will be passed to the application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "extraEnvsFrom": {
          "description": "ExtraEnvsFrom defines source of env variables for the application container could either be secret or configmap",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "hostAliases": {
          "description": "HostAliases provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hostNetwork": {
          "description": "HostNetwork controls whether the pod may use the node network namespace",
          "type": "boolean"
        },
        "host_aliases": {
          "description": "HostAliasesUnderScore provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork. Has Priority over hostAliases field",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hpa": {
          "description": "Configures horizontal pod autoscaling.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedHPA"
        },
        "image": {
          "description": "Image - docker image settings if no specified operator uses default version from operator config",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Image"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "initContainers": {
          "description": "InitContainers allows adding initContainers to the pod definition. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "livenessProbe": {
          "description": "LivenessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "logFormat": {
          "description": "LogFormat for VTSelect to be configured with. default or json",
          "type": "string"
        },
        "logLevel": {
          "description": "LogLevel for VTSelect to be configured with.",
          "type": "string"
        },
        "minReadySeconds": {
          "description": "MinReadySeconds defines a minimum number of seconds to wait before starting update next pod if previous in healthy state Has no effect for VLogs and VMSingle",
          "type": "integer",
          "format": "int32"
        },
        "nodeSelector": {
          "description": "NodeSelector Define which Nodes the Pods are scheduled on.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "paused": {
          "description": "Paused If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.",
          "type": "boolean"
        },
        "podDisruptionBudget": {
          "description": "PodDisruptionBudget created by operator",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedPodDisruptionBudgetSpec"
        },
        "podMetadata": {
          "description": "PodMetadata configures Labels and Annotations which are propagated to the VTSelect pods.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "port": {
          "description": "Port listen address",
          "type": "string"
        },
        "priorityClassName": {
          "description": "PriorityClassName class assigned to the Pods",
          "type": "string"
        },
        "readinessGates": {
          "description": "ReadinessGates defines pod readiness gates",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
          }
        },
        "readinessProbe": {
          "description": "ReadinessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "replicaCount": {
          "description": "ReplicaCount is the expected size of the Application.",
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "revisionHistoryLimitCount": {
          "description": "The number of old ReplicaSets to retain to allow rollback in deployment or maximum number of revisions that will be maintained in the Deployment revision history. Has no effect at StatefulSets Defaults to 10.",
          "type": "integer",
          "format": "int32"
        },
        "rollingUpdate": {
          "description": "RollingUpdate - overrides deployment update params.",
          "$ref": "#/definitions/io.k8s.api.apps.v1.RollingUpdateDeployment"
        },
        "runtimeClassName": {
          "description": "RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/",
          "type": "string"
        },
        "schedulerName": {
          "description": "SchedulerName - defines kubernetes scheduler name",
          "type": "string"
        },
        "secrets": {
          "description": "Secrets is a list of Secrets in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/secrets/SECRET_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SecurityContext"
        },
        "serviceScrapeSpec": {
          "description": "ServiceScrapeSpec that will be added to vtselect VMServiceScrape spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMServiceScrapeSpec"
        },
        "serviceSpec": {
          "description": "ServiceSpec that will be added to vtselect service spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AdditionalServiceSpec"
        },
        "startupProbe": {
          "description": "StartupProbe that will be added to CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "terminationGracePeriodSeconds": {
          "description": "TerminationGracePeriodSeconds period for container graceful termination",
          "type": "integer",
          "format": "int64"
        },
        "tolerations": {
          "description": "Tolerations If specified, the pod's tolerations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          }
        },
        "topologySpreadConstraints": {
          "description": "TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
          }
        },
        "updateStrategy": {
          "description": "UpdateStrategy - overrides default update strategy.",
          "type": "string"
        },
        "useDefaultResources": {
          "description": "UseDefaultResources controls resource settings By default, operator sets built-in resource requirements",
          "type": "boolean"
        },
        "useStrictSecurity": {
          "description": "UseStrictSecurity enables strict security mode for component it restricts disk writes access uses non-root user out of the box drops not needed security permissions",
          "type": "boolean"
        },
        "volumeMounts": {
          "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the Application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          }
        },
        "volumes": {
          "description": "Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition. Volumes specified will be appended to other volumes that are generated. / +optional",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VTSelect": {
      "description": "VTSelect defines vtselect component configuration at victoria-traces cluster",
      "type": "object",
      "properties": {
        "affinity": {
          "description": "Affinity If specified, the pod's scheduling constraints.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "configMaps": {
          "description": "ConfigMaps is a list of ConfigMaps in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/configs/CONFIGMAP_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "containers": {
          "description": "Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "disableAutomountServiceAccountToken": {
          "description": "DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0). Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access. For example, vmagent and vm-config-reloader requires k8s API access. Operator creates volumes with name: \"kube-api-access\", which can be used as volumeMount for extraContainers if needed. And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.",
          "type": "boolean"
        },
        "disableSelfServiceScrape": {
          "description": "DisableSelfServiceScrape controls creation of VMServiceScrape by operator for the application. Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable",
          "type": "boolean"
        },
        "dnsConfig": {
          "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "description": "DNSPolicy sets DNS policy for the pod",
          "type": "string"
        },
        "extraArgs": {
          "description": "ExtraArgs that will be passed to the application container for example remoteWrite.tmpDataPath: /tmp",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "extraEnvs": {
          "description": "ExtraEnvs that will be passed to the application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "extraEnvsFrom": {
          "description": "ExtraEnvsFrom defines source of env variables for the application container could either be secret or configmap",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "hostAliases": {
          "description": "HostAliases provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hostNetwork": {
          "description": "HostNetwork controls whether the pod may use the node network namespace",
          "type": "boolean"
        },
        "host_aliases": {
          "description": "HostAliasesUnderScore provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork. Has Priority over hostAliases field",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hpa": {
          "description": "Configures horizontal pod autoscaling.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedHPA"
        },
        "image": {
          "description": "Image - docker image settings if no specified operator uses default version from operator config",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Image"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "initContainers": {
          "description": "InitContainers allows adding initContainers to the pod definition. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "livenessProbe": {
          "description": "LivenessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "logFormat": {
          "description": "LogFormat for VTSelect to be configured with. default or json",
          "type": "string"
        },
        "logLevel": {
          "description": "LogLevel for VTSelect to be configured with.",
          "type": "string"
        },
        "minReadySeconds": {
          "description": "MinReadySeconds defines a minimum number of seconds to wait before starting update next pod if previous in healthy state Has no effect for VLogs and VMSingle",
          "type": "integer",
          "format": "int32"
        },
        "nodeSelector": {
          "description": "NodeSelector Define which Nodes the Pods are scheduled on.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "paused": {
          "description": "Paused If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.",
          "type": "boolean"
        },
        "podDisruptionBudget": {
          "description": "PodDisruptionBudget created by operator",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedPodDisruptionBudgetSpec"
        },
        "podMetadata": {
          "description": "PodMetadata configures Labels and Annotations which are propagated to the VTSelect pods.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "port": {
          "description": "Port listen address",
          "type": "string"
        },
        "priorityClassName": {
          "description": "PriorityClassName class assigned to the Pods",
          "type": "string"
        },
        "readinessGates": {
          "description": "ReadinessGates defines pod readiness gates",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
          }
        },
        "readinessProbe": {
          "description": "ReadinessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "replicaCount": {
          "description": "ReplicaCount is the expected size of the Application.",
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "revisionHistoryLimitCount": {
          "description": "The number of old ReplicaSets to retain to allow rollback in deployment or maximum number of revisions that will be maintained in the Deployment revision history. Has no effect at StatefulSets Defaults to 10.",
          "type": "integer",
          "format": "int32"
        },
        "rollingUpdate": {
          "description": "RollingUpdate - overrides deployment update params.",
          "$ref": "#/definitions/io.k8s.api.apps.v1.RollingUpdateDeployment"
        },
        "runtimeClassName": {
          "description": "RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/",
          "type": "string"
        },
        "schedulerName": {
          "description": "SchedulerName - defines kubernetes scheduler name",
          "type": "string"
        },
        "secrets": {
          "description": "Secrets is a list of Secrets in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/secrets/SECRET_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SecurityContext"
        },
        "serviceScrapeSpec": {
          "description": "ServiceScrapeSpec that will be added to vtselect VMServiceScrape spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMServiceScrapeSpec"
        },
        "serviceSpec": {
          "description": "ServiceSpec that will be added to vtselect service spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AdditionalServiceSpec"
        },
        "startupProbe": {
          "description": "StartupProbe that will be added to CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "terminationGracePeriodSeconds": {
          "description": "TerminationGracePeriodSeconds period for container graceful termination",
          "type": "integer",
          "format": "int64"
        },
        "tolerations": {
          "description": "Tolerations If specified, the pod's tolerations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          }
        },
        "topologySpreadConstraints": {
          "description": "TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
          }
        },
        "updateStrategy": {
          "description": "UpdateStrategy - overrides default update strategy.",
          "type": "string"
        },
        "useDefaultResources": {
          "description": "UseDefaultResources controls resource settings By default, operator sets built-in resource requirements",
          "type": "boolean"
        },
        "useStrictSecurity": {
          "description": "UseStrictSecurity enables strict security mode for component it restricts disk writes access uses non-root user out of the box drops not needed security permissions",
          "type": "boolean"
        },
        "volumeMounts": {
          "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the Application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          }
        },
        "volumes": {
          "description": "Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition. Volumes specified will be appended to other volumes that are generated. / +optional",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VTSingle": {
      "description": "VTSingle is fast, cost-effective and scalable traces database. VTSingle is the Schema for the API",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VTSingleSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1.VTSingleStatus"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VTSingleSpec": {
      "description": "VTSingleSpec defines the desired state of VTSingle",
      "type": "object",
      "properties": {
        "affinity": {
          "description": "Affinity If specified, the pod's scheduling constraints.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "configMaps": {
          "description": "ConfigMaps is a list of ConfigMaps in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/configs/CONFIGMAP_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "containers": {
          "description": "Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "disableAutomountServiceAccountToken": {
          "description": "DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0). Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access. For example, vmagent and vm-config-reloader requires k8s API access. Operator creates volumes with name: \"kube-api-access\", which can be used as volumeMount for extraContainers if needed. And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.",
          "type": "boolean"
        },
        "disableSelfServiceScrape": {
          "description": "DisableSelfServiceScrape controls creation of VMServiceScrape by operator for the application. Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable",
          "type": "boolean"
        },
        "dnsConfig": {
          "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "description": "DNSPolicy sets DNS policy for the pod",
          "type": "string"
        },
        "extraArgs": {
          "description": "ExtraArgs that will be passed to the application container for example remoteWrite.tmpDataPath: /tmp",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "extraEnvs": {
          "description": "ExtraEnvs that will be passed to the application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "extraEnvsFrom": {
          "description": "ExtraEnvsFrom defines source of env variables for the application container could either be secret or configmap",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "futureRetention": {
          "description": "FutureRetention for the stored traces Log entries with timestamps bigger than now+futureRetention are rejected during data ingestion; see https://docs.victoriametrics.com/victoriatraces/#configure-and-run-victoriatraces",
          "type": "string"
        },
        "hostAliases": {
          "description": "HostAliases provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hostNetwork": {
          "description": "HostNetwork controls whether the pod may use the node network namespace",
          "type": "boolean"
        },
        "host_aliases": {
          "description": "HostAliasesUnderScore provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork. Has Priority over hostAliases field",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "image": {
          "description": "Image - docker image settings if no specified operator uses default version from operator config",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Image"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "initContainers": {
          "description": "InitContainers allows adding initContainers to the pod definition. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "livenessProbe": {
          "description": "LivenessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "logFormat": {
          "description": "LogFormat for VTSingle to be configured with.",
          "type": "string"
        },
        "logIngestedRows": {
          "description": "Whether to log all the ingested log entries; this can be useful for debugging of data ingestion; see https://docs.victoriametrics.com/victoriatraces/#configure-and-run-victoriatraces",
          "type": "boolean"
        },
        "logLevel": {
          "description": "LogLevel for VictoriaTraces to be configured with.",
          "type": "string"
        },
        "logNewStreams": {
          "description": "LogNewStreams Whether to log creation of new streams; this can be useful for debugging of high cardinality issues with log streams; see https://docs.victoriametrics.com/victoriatraces/#configure-and-run-victoriatraces",
          "type": "boolean"
        },
        "managedMetadata": {
          "description": "ManagedMetadata defines metadata that will be added to the all objects created by operator for the given CustomResource",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ManagedObjectsMetadata"
        },
        "minReadySeconds": {
          "description": "MinReadySeconds defines a minimum number of seconds to wait before starting update next pod if previous in healthy state Has no effect for VLogs and VMSingle",
          "type": "integer",
          "format": "int32"
        },
        "nodeSelector": {
          "description": "NodeSelector Define which Nodes the Pods are scheduled on.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "paused": {
          "description": "Paused If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.",
          "type": "boolean"
        },
        "podMetadata": {
          "description": "PodMetadata configures Labels and Annotations which are propagated to the VTSingle pods.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "port": {
          "description": "Port listen address",
          "type": "string"
        },
        "priorityClassName": {
          "description": "PriorityClassName class assigned to the Pods",
          "type": "string"
        },
        "readinessGates": {
          "description": "ReadinessGates defines pod readiness gates",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
          }
        },
        "readinessProbe": {
          "description": "ReadinessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "replicaCount": {
          "description": "ReplicaCount is the expected size of the Application.",
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "retentionMaxDiskSpaceUsageBytes": {
          "description": "RetentionMaxDiskSpaceUsageBytes for the stored traces VictoriaTraces keeps at least two last days of data in order to guarantee that the traces for the last day can be returned in queries. This means that the total disk space usage may exceed the -retention.maxDiskSpaceUsageBytes, if the size of the last two days of data exceeds the -retention.maxDiskSpaceUsageBytes. https://docs.victoriametrics.com/victoriatraces/#configure-and-run-victoriatraces",
          "type": "string"
        },
        "retentionPeriod": {
          "description": "RetentionPeriod for the stored traces https://docs.victoriametrics.com/victoriatraces/#configure-and-run-victoriatraces",
          "type": "string"
        },
        "revisionHistoryLimitCount": {
          "description": "The number of old ReplicaSets to retain to allow rollback in deployment or maximum number of revisions that will be maintained in the Deployment revision history. Has no effect at StatefulSets Defaults to 10.",
          "type": "integer",
          "format": "int32"
        },
        "runtimeClassName": {
          "description": "RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/",
          "type": "string"
        },
        "schedulerName": {
          "description": "SchedulerName - defines kubernetes scheduler name",
          "type": "string"
        },
        "secrets": {
          "description": "Secrets is a list of Secrets in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/secrets/SECRET_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SecurityContext"
        },
        "serviceAccountName": {
          "description": "ServiceAccountName is the name of the ServiceAccount to use to run the pods",
          "type": "string"
        },
        "serviceScrapeSpec": {
          "description": "ServiceScrapeSpec that will be added to vtsingle VMServiceScrape spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMServiceScrapeSpec"
        },
        "serviceSpec": {
          "description": "ServiceSpec that will be added to vtsingle service spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AdditionalServiceSpec"
        },
        "startupProbe": {
          "description": "StartupProbe that will be added to CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "storage": {
          "description": "Storage is the definition of how storage will be used by the VTSingle by default it`s empty dir",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        },
        "storageDataPath": {
          "description": "StorageDataPath disables spec.storage option and overrides arg for victoria-traces binary --storageDataPath, its users responsibility to mount proper device into given path.",
          "type": "string"
        },
        "storageMetadata": {
          "description": "StorageMeta defines annotations and labels attached to PVC for given vtsingle CR",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "terminationGracePeriodSeconds": {
          "description": "TerminationGracePeriodSeconds period for container graceful termination",
          "type": "integer",
          "format": "int64"
        },
        "tolerations": {
          "description": "Tolerations If specified, the pod's tolerations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          }
        },
        "topologySpreadConstraints": {
          "description": "TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
          }
        },
        "useDefaultResources": {
          "description": "UseDefaultResources controls resource settings By default, operator sets built-in resource requirements",
          "type": "boolean"
        },
        "useStrictSecurity": {
          "description": "UseStrictSecurity enables strict security mode for component it restricts disk writes access uses non-root user out of the box drops not needed security permissions",
          "type": "boolean"
        },
        "volumeMounts": {
          "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the Application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          }
        },
        "volumes": {
          "description": "Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition. Volumes specified will be appended to other volumes that are generated. / +optional",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VTSingleStatus": {
      "description": "VTSingleStatus defines the observed state of VTSingle",
      "type": "object",
      "properties": {
        "observedGeneration": {
          "description": "ObservedGeneration defines current generation picked by operator for the reconcile",
          "type": "integer",
          "format": "int64"
        },
        "reason": {
          "description": "Reason defines human readable error reason",
          "type": "string"
        },
        "updateStatus": {
          "description": "UpdateStatus defines a status for update rollout",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1.VTStorage": {
      "description": "VTStorage defines vtstorage component configuration at victoria-traces cluster",
      "type": "object",
      "properties": {
        "affinity": {
          "description": "Affinity If specified, the pod's scheduling constraints.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "claimTemplates": {
          "description": "ClaimTemplates allows adding additional VolumeClaimTemplates for StatefulSet",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaim"
          }
        },
        "configMaps": {
          "description": "ConfigMaps is a list of ConfigMaps in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/configs/CONFIGMAP_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "containers": {
          "description": "Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "disableAutomountServiceAccountToken": {
          "description": "DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0). Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access. For example, vmagent and vm-config-reloader requires k8s API access. Operator creates volumes with name: \"kube-api-access\", which can be used as volumeMount for extraContainers if needed. And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.",
          "type": "boolean"
        },
        "disableSelfServiceScrape": {
          "description": "DisableSelfServiceScrape controls creation of VMServiceScrape by operator for the application. Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable",
          "type": "boolean"
        },
        "dnsConfig": {
          "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "description": "DNSPolicy sets DNS policy for the pod",
          "type": "string"
        },
        "extraArgs": {
          "description": "ExtraArgs that will be passed to the application container for example remoteWrite.tmpDataPath: /tmp",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "extraEnvs": {
          "description": "ExtraEnvs that will be passed to the application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "extraEnvsFrom": {
          "description": "ExtraEnvsFrom defines source of env variables for the application container could either be secret or configmap",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "futureRetention": {
          "description": "FutureRetention for the stored traces Log entries with timestamps bigger than now+futureRetention are rejected during data ingestion see https://docs.victoriametrics.com/victoriatraces/#configure-and-run-victoriatraces",
          "type": "string"
        },
        "hostAliases": {
          "description": "HostAliases provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hostNetwork": {
          "description": "HostNetwork controls whether the pod may use the node network namespace",
          "type": "boolean"
        },
        "host_aliases": {
          "description": "HostAliasesUnderScore provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork. Has Priority over hostAliases field",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "image": {
          "description": "Image - docker image settings if no specified operator uses default version from operator config",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Image"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "initContainers": {
          "description": "InitContainers allows adding initContainers to the pod definition. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "livenessProbe": {
          "description": "LivenessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "logFormat": {
          "description": "LogFormat for VTStorage to be configured with. default or json",
          "type": "string"
        },
        "logIngestedRows": {
          "description": "Whether to log all the ingested log entries; this can be useful for debugging of data ingestion see https://docs.victoriametrics.com/victoriatraces/#configure-and-run-victoriatraces",
          "type": "boolean"
        },
        "logLevel": {
          "description": "LogLevel for VTStorage to be configured with.",
          "type": "string"
        },
        "logNewStreams": {
          "description": "LogNewStreams Whether to log creation of new streams; this can be useful for debugging of high cardinality issues with log streams see https://docs.victoriametrics.com/victoriatraces/#configure-and-run-victoriatraces",
          "type": "boolean"
        },
        "maintenanceInsertNodeIDs": {
          "description": "MaintenanceInsertNodeIDs - excludes given node ids from insert requests routing, must contain pod suffixes - for pod-0, id will be 0 and etc. lets say, you have pod-0, pod-1, pod-2, pod-3. to exclude pod-0 and pod-3 from insert routing, define nodeIDs: [0,3]. Useful at storage expanding, when you want to rebalance some data at cluster.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        },
        "maintenanceSelectNodeIDs": {
          "description": "MaintenanceInsertNodeIDs - excludes given node ids from select requests routing, must contain pod suffixes - for pod-0, id will be 0 and etc.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        },
        "minReadySeconds": {
          "description": "MinReadySeconds defines a minimum number of seconds to wait before starting update next pod if previous in healthy state Has no effect for VLogs and VMSingle",
          "type": "integer",
          "format": "int32"
        },
        "nodeSelector": {
          "description": "NodeSelector Define which Nodes the Pods are scheduled on.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "paused": {
          "description": "Paused If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.",
          "type": "boolean"
        },
        "persistentVolumeClaimRetentionPolicy": {
          "description": "PersistentVolumeClaimRetentionPolicy allows configuration of PVC retention policy",
          "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy"
        },
        "podDisruptionBudget": {
          "description": "PodDisruptionBudget created by operator",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedPodDisruptionBudgetSpec"
        },
        "podMetadata": {
          "description": "PodMetadata configures Labels and Annotations which are propagated to the VTStorage pods.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "port": {
          "description": "Port listen address",
          "type": "string"
        },
        "priorityClassName": {
          "description": "PriorityClassName class assigned to the Pods",
          "type": "string"
        },
        "readinessGates": {
          "description": "ReadinessGates defines pod readiness gates",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
          }
        },
        "readinessProbe": {
          "description": "ReadinessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "replicaCount": {
          "description": "ReplicaCount is the expected size of the Application.",
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "retentionMaxDiskSpaceUsageBytes": {
          "description": "RetentionMaxDiskSpaceUsageBytes for the stored traces VictoriaTraces keeps at least two last days of data in order to guarantee that the traces for the last day can be returned in queries. This means that the total disk space usage may exceed the -retention.maxDiskSpaceUsageBytes, if the size of the last two days of data exceeds the -retention.maxDiskSpaceUsageBytes. https://docs.victoriametrics.com/victoriatraces/#configure-and-run-victoriatraces",
          "type": "string"
        },
        "retentionPeriod": {
          "description": "RetentionPeriod for the stored traces https://docs.victoriametrics.com/victoriatraces/#configure-and-run-victoriatraces",
          "type": "string"
        },
        "revisionHistoryLimitCount": {
          "description": "The number of old ReplicaSets to retain to allow rollback in deployment or maximum number of revisions that will be maintained in the Deployment revision history. Has no effect at StatefulSets Defaults to 10.",
          "type": "integer",
          "format": "int32"
        },
        "rollingUpdateStrategy": {
          "description": "RollingUpdateStrategy defines strategy for application updates Default is OnDelete, in this case operator handles update process Can be changed for RollingUpdate",
          "type": "string"
        },
        "rollingUpdateStrategyBehavior": {
          "description": "RollingUpdateStrategyBehavior defines customized behavior for rolling updates. It applies if the RollingUpdateStrategy is set to OnDelete, which is the default.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.StatefulSetUpdateStrategyBehavior"
        },
        "runtimeClassName": {
          "description": "RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/",
          "type": "string"
        },
        "schedulerName": {
          "description": "SchedulerName - defines kubernetes scheduler name",
          "type": "string"
        },
        "secrets": {
          "description": "Secrets is a list of Secrets in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/secrets/SECRET_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SecurityContext"
        },
        "serviceScrapeSpec": {
          "description": "ServiceScrapeSpec that will be added to vtselect VMServiceScrape spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMServiceScrapeSpec"
        },
        "serviceSpec": {
          "description": "ServiceSpec that will be added to vtselect service spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AdditionalServiceSpec"
        },
        "startupProbe": {
          "description": "StartupProbe that will be added to CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "storage": {
          "description": "Storage configures persistent volume for VTStorage",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.StorageSpec"
        },
        "storageDataPath": {
          "description": "StorageDataPath - path to storage data",
          "type": "string"
        },
        "terminationGracePeriodSeconds": {
          "description": "TerminationGracePeriodSeconds period for container graceful termination",
          "type": "integer",
          "format": "int64"
        },
        "tolerations": {
          "description": "Tolerations If specified, the pod's tolerations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          }
        },
        "topologySpreadConstraints": {
          "description": "TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
          }
        },
        "useDefaultResources": {
          "description": "UseDefaultResources controls resource settings By default, operator sets built-in resource requirements",
          "type": "boolean"
        },
        "useStrictSecurity": {
          "description": "UseStrictSecurity enables strict security mode for component it restricts disk writes access uses non-root user out of the box drops not needed security permissions",
          "type": "boolean"
        },
        "volumeMounts": {
          "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the Application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          }
        },
        "volumes": {
          "description": "Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition. Volumes specified will be appended to other volumes that are generated. / +optional",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.APIServerConfig": {
      "description": "APIServerConfig defines a host and auth methods to access apiserver.",
      "type": "object",
      "required": [
        "host"
      ],
      "properties": {
        "authorization": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Authorization"
        },
        "basicAuth": {
          "description": "BasicAuth allow an endpoint to authenticate over basic authentication",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.BasicAuth"
        },
        "bearerToken": {
          "description": "Bearer token for accessing apiserver.",
          "type": "string"
        },
        "bearerTokenFile": {
          "description": "File to read bearer token for accessing apiserver.",
          "type": "string"
        },
        "host": {
          "description": "Host of apiserver. A valid string consisting of a hostname or IP followed by an optional port number",
          "type": "string",
          "default": ""
        },
        "tlsConfig": {
          "description": "TLSConfig Config to use for accessing apiserver.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.AWS": {
      "description": "AWS defines AWS cloud auth specific params",
      "type": "object",
      "properties": {
        "ec2Endpoint": {
          "description": "EC2Endpoint is an optional AWS EC2 API endpoint to use for the corresponding -remoteWrite.url if -remoteWrite.aws.useSigv4 is set",
          "type": "string"
        },
        "region": {
          "description": "Region is an optional AWS region to use for the corresponding -remoteWrite.url if -remoteWrite.aws.useSigv4 is set",
          "type": "string"
        },
        "roleARN": {
          "description": "RoleARN is an optional AWS region to use for the corresponding -remoteWrite.url if -remoteWrite.aws.useSigv4 is set",
          "type": "string"
        },
        "service": {
          "description": "Service is an optional AWS Service to use for the corresponding -remoteWrite.url if -remoteWrite.aws.useSigv4 is set",
          "type": "string"
        },
        "stsEndpoint": {
          "description": "STSEndpoint is an optional AWS STS API endpoint to use for the corresponding -remoteWrite.url if -remoteWrite.aws.useSigv4 is set",
          "type": "string"
        },
        "useSigv4": {
          "description": "UseSigv4 enables SigV4 request signing for the corresponding -remoteWrite.url",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.AdditionalServiceSpec": {
      "description": "ServiceSpec defines additional service for CRD with user-defined params. by default, some of fields can be inherited from default service definition for the CRD: labels,selector, ports. if metadata.name is not defined, service will have format {{CRD_TYPE}}-{{CRD_NAME}}-additional-service. if UseAsDefault is set to true, changes applied to the main service without additional service creation",
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "metadata": {
          "description": "EmbeddedObjectMetadata defines objectMeta for additional service.",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "spec": {
          "description": "ServiceSpec describes the attributes that a user creates on a service. More info: https://kubernetes.io/docs/concepts/services-networking/service/",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ServiceSpec"
        },
        "useAsDefault": {
          "description": "UseAsDefault applies changes from given service definition to the main object Service Changing from headless service to clusterIP or loadbalancer may break cross-component communication",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.AlertmanagerGossipConfig": {
      "description": "AlertmanagerGossipConfig defines Gossip TLS configuration for alertmanager",
      "type": "object",
      "properties": {
        "tls_client_config": {
          "description": "TLSClientConfig defines client TLS configuration for alertmanager",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSClientConfig"
        },
        "tls_server_config": {
          "description": "TLSServerConfig defines server TLS configuration for alertmanager",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSServerConfig"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.AlertmanagerHTTPConfig": {
      "description": "AlertmanagerHTTPConfig defines http server configuration for alertmanager",
      "type": "object",
      "properties": {
        "headers": {
          "description": "Headers defines list of headers that can be added to HTTP responses.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "http2": {
          "description": "HTTP2 enables HTTP/2 support. Note that HTTP/2 is only supported with TLS. This can not be changed on the fly.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.AlertmanagerWebConfig": {
      "description": "AlertmanagerWebConfig defines web server configuration for alertmanager",
      "type": "object",
      "properties": {
        "basic_auth_users": {
          "description": "BasicAuthUsers Usernames and hashed passwords that have full access to the web server Passwords must be hashed with bcrypt",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "http_server_config": {
          "description": "HTTPServerConfig defines http server configuration for alertmanager web server",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AlertmanagerHTTPConfig"
        },
        "tls_server_config": {
          "description": "TLSServerConfig defines server TLS configuration for alertmanager",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSServerConfig"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.ArbitraryFSAccessThroughSMsConfig": {
      "description": "ArbitraryFSAccessThroughSMsConfig enables users to configure, whether a service scrape selected by the vmagent instance is allowed to use arbitrary files on the file system of the vmagent container. This is the case when e.g. a service scrape specifies a BearerTokenFile in an endpoint. A malicious user could create a service scrape selecting arbitrary secret files in the vmagent container. Those secrets would then be sent with a scrape request by vmagent to a malicious target. Denying the above would prevent the attack, users can instead use the BearerTokenSecret field.",
      "type": "object",
      "properties": {
        "deny": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.AttachMetadata": {
      "description": "AttachMetadata configures metadata attachment",
      "type": "object",
      "properties": {
        "node": {
          "description": "Node instructs vmagent to add node specific metadata from service discovery Valid for roles: pod, endpoints, endpointslice.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.Authorization": {
      "description": "Authorization configures generic authorization params",
      "type": "object",
      "properties": {
        "credentials": {
          "description": "Reference to the secret with value for authorization",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "credentialsFile": {
          "description": "File with value for authorization",
          "type": "string"
        },
        "type": {
          "description": "Type of authorization, default to bearer",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.AzureSDConfig": {
      "description": "AzureSDConfig allow retrieving scrape targets from Azure VMs. See [here](https://docs.victoriametrics.com/victoriametrics/sd_configs/#azure_sd_configs)",
      "type": "object",
      "required": [
        "subscriptionID"
      ],
      "properties": {
        "authenticationMethod": {
          "description": "# The authentication method, either OAuth or ManagedIdentity. See https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview",
          "type": "string"
        },
        "clientID": {
          "description": "Optional client ID. Only required with the OAuth authentication method.",
          "type": "string"
        },
        "clientSecret": {
          "description": "Optional client secret. Only required with the OAuth authentication method.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "environment": {
          "description": "The Azure environment.",
          "type": "string"
        },
        "port": {
          "description": "The port to scrape metrics from. If using the public IP address, this must instead be specified in the relabeling rule.",
          "type": "integer",
          "format": "int32"
        },
        "resourceGroup": {
          "description": "Optional resource group name. Limits discovery to this resource group.",
          "type": "string"
        },
        "subscriptionID": {
          "description": "The subscription ID. Always required.",
          "type": "string",
          "default": ""
        },
        "tenantID": {
          "description": "Optional tenant ID. Only required with the OAuth authentication method.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.BasicAuth": {
      "description": "BasicAuth allow an endpoint to authenticate over basic authentication",
      "type": "object",
      "properties": {
        "password": {
          "description": "Password defines reference for secret with password value The secret needs to be in the same namespace as scrape object",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "password_file": {
          "description": "PasswordFile defines path to password file at disk must be pre-mounted",
          "type": "string"
        },
        "username": {
          "description": "Username defines reference for secret with username value The secret needs to be in the same namespace as scrape object",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.BearerAuth": {
      "description": "BearerAuth defines auth with bearer token",
      "type": "object",
      "properties": {
        "bearerTokenFile": {
          "description": "Path to bearer token file",
          "type": "string"
        },
        "bearerTokenSecret": {
          "description": "Optional bearer auth token to use for -remoteWrite.url",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.CRDRef": {
      "description": "CRDRef describe CRD target reference.",
      "type": "object",
      "required": [
        "kind",
        "name",
        "namespace"
      ],
      "properties": {
        "kind": {
          "description": "Kind one of: VMAgent,VMAlert, VMSingle, VMCluster/vmselect, VMCluster/vmstorage,VMCluster/vminsert,VMAlertManager, VLSingle, VLCluster/vlinsert, VLCluster/vlselect, VLCluster/vlstorage, VTSingle, VTCluster/vtinsert, VTCluster/vtselect, VTCluster/vtstorage and VLAgent",
          "type": "string",
          "default": ""
        },
        "name": {
          "description": "Name target CRD object name",
          "type": "string",
          "default": ""
        },
        "namespace": {
          "description": "Namespace target CRD object namespace.",
          "type": "string",
          "default": ""
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.ConfigMapKeyReference": {
      "description": "ConfigMapKeyReference refers to a key in a ConfigMap.",
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "key": {
          "description": "The ConfigMap key to refer to.",
          "type": "string",
          "default": ""
        },
        "name": {
          "description": "Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string",
          "default": ""
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.ConsulSDConfig": {
      "description": "ConsulSDConfig defines a Consul service discovery configuration. See [here](https://docs.victoriametrics.com/victoriametrics/sd_configs/#consul_sd_configs)",
      "type": "object",
      "required": [
        "server"
      ],
      "properties": {
        "allowStale": {
          "description": "Allow stale Consul results (see https://developer.hashicorp.com/consul/api-docs/features/consistency ). Will reduce load on Consul. If unset, use its default value.",
          "type": "boolean"
        },
        "authorization": {
          "description": "Authorization header to use on every scrape request.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Authorization"
        },
        "basicAuth": {
          "description": "BasicAuth information to use on every scrape request.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.BasicAuth"
        },
        "datacenter": {
          "description": "Consul Datacenter name, if not provided it will use the local Consul Agent Datacenter.",
          "type": "string"
        },
        "filter": {
          "description": "Filter defines filter for /v1/catalog/services requests See https://developer.hashicorp.com/consul/api-docs/features/filtering",
          "type": "string"
        },
        "followRedirects": {
          "description": "Configure whether HTTP requests follow HTTP 3xx redirects. If unset, use its default value.",
          "type": "boolean"
        },
        "namespace": {
          "description": "Namespaces are only supported in Consul Enterprise.",
          "type": "string"
        },
        "nodeMeta": {
          "description": "Node metadata key/value pairs to filter nodes for a given service.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "oauth2": {
          "description": "OAuth2 defines auth configuration",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.OAuth2"
        },
        "partition": {
          "description": "Admin Partitions are only supported in Consul Enterprise.",
          "type": "string"
        },
        "proxyURL": {
          "description": "ProxyURL eg http://proxyserver:2195 Directs scrapes to proxy through this endpoint.",
          "type": "string"
        },
        "proxy_client_config": {
          "description": "ProxyClientConfig configures proxy auth settings for scraping See [feature description](https://docs.victoriametrics.com/victoriametrics/vmagent/#scraping-targets-via-a-proxy)",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ProxyAuth"
        },
        "scheme": {
          "description": "HTTP Scheme default \"http\"",
          "type": "string"
        },
        "server": {
          "description": "A valid string consisting of a hostname or IP followed by an optional port number.",
          "type": "string",
          "default": ""
        },
        "services": {
          "description": "A list of services for which targets are retrieved. If omitted, all services are scraped.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "tagSeparator": {
          "description": "The string by which Consul tags are joined into the tag label. If unset, use its default value.",
          "type": "string"
        },
        "tags": {
          "description": "An optional list of tags used to filter nodes for a given service. Services must contain all tags in the list.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "tlsConfig": {
          "description": "TLS configuration to use on every scrape request",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        },
        "tokenRef": {
          "description": "Consul ACL TokenRef, if not provided it will use the ACL from the local Consul Agent.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.DNSSDConfig": {
      "description": "DNSSDConfig allows specifying a set of DNS domain names which are periodically queried to discover a list of targets. The DNS servers to be contacted are read from /etc/resolv.conf. See [here](https://docs.victoriametrics.com/victoriametrics/sd_configs/#dns_sd_configs)",
      "type": "object",
      "required": [
        "names",
        "type"
      ],
      "properties": {
        "names": {
          "description": "A list of DNS domain names to be queried.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "port": {
          "description": "The port number used if the query type is not SRV Ignored for SRV records",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.DigitalOceanSDConfig": {
      "description": "DigitalOceanSDConfig allow retrieving scrape targets from DigitalOcean's Droplets API. This service discovery uses the public IPv4 address by default, by that can be changed with relabeling. See [here](https://docs.victoriametrics.com/victoriametrics/sd_configs/#digitalocean_sd_configs)",
      "type": "object",
      "properties": {
        "authorization": {
          "description": "Authorization header to use on every scrape request.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Authorization"
        },
        "followRedirects": {
          "description": "Configure whether HTTP requests follow HTTP 3xx redirects.",
          "type": "boolean"
        },
        "oauth2": {
          "description": "OAuth2 defines auth configuration",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.OAuth2"
        },
        "port": {
          "description": "The port to scrape metrics from.",
          "type": "integer",
          "format": "int32"
        },
        "proxyURL": {
          "description": "ProxyURL eg http://proxyserver:2195 Directs scrapes to proxy through this endpoint.",
          "type": "string"
        },
        "proxy_client_config": {
          "description": "ProxyClientConfig configures proxy auth settings for scraping See [feature description](https://docs.victoriametrics.com/victoriametrics/vmagent/#scraping-targets-via-a-proxy)",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ProxyAuth"
        },
        "tlsConfig": {
          "description": "TLS configuration to use on every scrape request",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.DiscordConfig": {
      "type": "object",
      "properties": {
        "avatar_url": {
          "description": "AvatarURL defines message avatar URL Available from operator v0.55.0 and alertmanager v0.28.0",
          "type": "string"
        },
        "content": {
          "description": "Content defines message content template Available from operator v0.55.0 and alertmanager v0.28.0",
          "type": "string"
        },
        "http_config": {
          "description": "HTTP client configuration.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.HTTPConfig"
        },
        "message": {
          "description": "The message body template",
          "type": "string"
        },
        "send_resolved": {
          "description": "SendResolved controls notify about resolved alerts.",
          "type": "boolean"
        },
        "title": {
          "description": "The message title template",
          "type": "string"
        },
        "username": {
          "description": "Username defines message username Available from operator v0.55.0 and alertmanager v0.28.0",
          "type": "string"
        },
        "webhook_url": {
          "description": "The discord webhook URL one of `urlSecret` and `url` must be defined.",
          "type": "string"
        },
        "webhook_url_secret": {
          "description": "URLSecret defines secret name and key at the CRD namespace. It must contain the webhook URL. one of `urlSecret` and `url` must be defined.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.DiscoverySelector": {
      "description": "DiscoverySelector can be used at CRD components discovery",
      "type": "object",
      "properties": {
        "labelSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "namespaceSelector": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.NamespaceSelector"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.EC2Filter": {
      "description": "EC2Filter is the configuration for filtering EC2 instances.",
      "type": "object",
      "required": [
        "name",
        "values"
      ],
      "properties": {
        "name": {
          "type": "string",
          "default": ""
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.EC2SDConfig": {
      "description": "EC2SDConfig allow retrieving scrape targets from AWS EC2 instances. The private IP address is used by default, but may be changed to the public IP address with relabeling. The IAM credentials used must have the ec2:DescribeInstances permission to discover scrape targets. See [here](https://docs.victoriametrics.com/victoriametrics/sd_configs/#ec2_sd_configs)",
      "type": "object",
      "properties": {
        "accessKey": {
          "description": "AccessKey is the AWS API key.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "filters": {
          "description": "Filters can be used optionally to filter the instance list by other criteria. Available filter criteria can be found here: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html Filter API documentation: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Filter.html",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EC2Filter"
          }
        },
        "port": {
          "description": "The port to scrape metrics from. If using the public IP address, this must instead be specified in the relabeling rule.",
          "type": "integer",
          "format": "int32"
        },
        "region": {
          "description": "The AWS region",
          "type": "string"
        },
        "roleARN": {
          "description": "AWS Role ARN, an alternative to using AWS API keys.",
          "type": "string"
        },
        "secretKey": {
          "description": "SecretKey is the AWS API secret.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.EmailConfig": {
      "description": "EmailConfig configures notifications via Email.",
      "type": "object",
      "properties": {
        "auth_identity": {
          "description": "The identity to use for authentication.",
          "type": "string"
        },
        "auth_password": {
          "description": "AuthPassword defines secret name and key at CRD namespace.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "auth_secret": {
          "description": "AuthSecret defines secret name and key at CRD namespace. It must contain the CRAM-MD5 secret.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "auth_username": {
          "description": "The username to use for authentication.",
          "type": "string"
        },
        "from": {
          "description": "The sender address. fallback to global setting if empty",
          "type": "string"
        },
        "headers": {
          "description": "Further headers email header key/value pairs. Overrides any headers previously set by the notification implementation.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "hello": {
          "description": "The hostname to identify to the SMTP server.",
          "type": "string"
        },
        "html": {
          "description": "The HTML body of the email notification.",
          "type": "string"
        },
        "require_tls": {
          "description": "The SMTP TLS requirement. Note that Go does not support unencrypted connections to remote SMTP endpoints.",
          "type": "boolean"
        },
        "send_resolved": {
          "description": "SendResolved controls notify about resolved alerts.",
          "type": "boolean"
        },
        "smarthost": {
          "description": "The SMTP host through which emails are sent. fallback to global setting if empty",
          "type": "string"
        },
        "text": {
          "description": "The text body of the email notification.",
          "type": "string"
        },
        "tls_config": {
          "description": "TLS configuration",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        },
        "to": {
          "description": "The email address to send notifications to.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.EmbeddedHPA": {
      "description": "EmbeddedHPA embeds HorizontalPodAutoScaler spec v2. https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/horizontal-pod-autoscaler-v2/",
      "type": "object",
      "properties": {
        "behaviour": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerBehavior"
        },
        "maxReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "metrics": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricSpec"
          }
        },
        "minReplicas": {
          "type": "integer",
          "format": "int32"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.EmbeddedIngress": {
      "description": "EmbeddedIngress describes ingress configuration options.",
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "class_name": {
          "description": "ClassName defines ingress class name for VMAuth",
          "type": "string"
        },
        "extraRules": {
          "description": "ExtraRules - additional rules for ingress, must be checked for correctness by user.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.networking.v1.IngressRule"
          }
        },
        "extraTls": {
          "description": "ExtraTLS - additional TLS configuration for ingress must be checked for correctness by user.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.networking.v1.IngressTLS"
          }
        },
        "host": {
          "description": "Host defines ingress host parameter for default rule It will be used, only if TlsHosts is empty",
          "type": "string"
        },
        "labels": {
          "description": "Labels Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
          "type": "string"
        },
        "tlsHosts": {
          "description": "TlsHosts configures TLS access for ingress, tlsSecretName must be defined for it.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "tlsSecretName": {
          "description": "TlsSecretName defines secretname at the VMAuth namespace with cert and key https://kubernetes.io/docs/concepts/services-networking/ingress/#tls",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata": {
      "description": "EmbeddedObjectMetadata contains a subset of the fields included in k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta Only fields which are relevant to embedded resources are included.",
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "labels": {
          "description": "Labels Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.EmbeddedPersistentVolumeClaim": {
      "description": "EmbeddedPersistentVolumeClaim is an embedded version of k8s.io/api/core/v1.PersistentVolumeClaim. It contains TypeMeta and a reduced ObjectMeta.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "description": "EmbeddedMetadata contains metadata relevant to an EmbeddedResource.",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "spec": {
          "description": "Spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        },
        "status": {
          "description": "Status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimStatus"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.EmbeddedPodDisruptionBudgetSpec": {
      "type": "object",
      "properties": {
        "maxUnavailable": {
          "description": "An eviction is allowed if at most \"maxUnavailable\" pods selected by \"selector\" are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. This is a mutually exclusive setting with \"minAvailable\".",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "minAvailable": {
          "description": "An eviction is allowed if at least \"minAvailable\" pods selected by \"selector\" will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying \"100%\".",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "selectorLabels": {
          "description": "replaces default labels selector generated by operator it's useful when you need to create custom budget",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.Endpoint": {
      "description": "Endpoint defines a scrapeable endpoint serving metrics.",
      "type": "object",
      "properties": {
        "attach_metadata": {
          "description": "AttachMetadata configures metadata attaching from service discovery",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AttachMetadata"
        },
        "authorization": {
          "description": "Authorization with http header Authorization",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Authorization"
        },
        "basicAuth": {
          "description": "BasicAuth allow an endpoint to authenticate over basic authentication",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.BasicAuth"
        },
        "bearerTokenFile": {
          "description": "File to read bearer token for scraping targets.",
          "type": "string"
        },
        "bearerTokenSecret": {
          "description": "Secret to mount to read bearer token for scraping targets. The secret needs to be in the same namespace as the scrape object and accessible by the victoria-metrics operator.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "follow_redirects": {
          "description": "FollowRedirects controls redirects for scraping.",
          "type": "boolean"
        },
        "honorLabels": {
          "description": "HonorLabels chooses the metric's labels on collisions with target labels.",
          "type": "boolean"
        },
        "honorTimestamps": {
          "description": "HonorTimestamps controls whether vmagent respects the timestamps present in scraped data.",
          "type": "boolean"
        },
        "interval": {
          "description": "Interval at which metrics should be scraped",
          "type": "string"
        },
        "max_scrape_size": {
          "description": "MaxScrapeSize defines a maximum size of scraped data for a job",
          "type": "string"
        },
        "metricRelabelConfigs": {
          "description": "MetricRelabelConfigs to apply to samples after scrapping.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
          }
        },
        "oauth2": {
          "description": "OAuth2 defines auth configuration",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.OAuth2"
        },
        "params": {
          "description": "Optional HTTP URL parameters",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            }
          }
        },
        "path": {
          "description": "HTTP path to scrape for metrics.",
          "type": "string"
        },
        "port": {
          "description": "Name of the port exposed at Service.",
          "type": "string"
        },
        "proxyURL": {
          "description": "ProxyURL eg http://proxyserver:2195 Directs scrapes to proxy through this endpoint.",
          "type": "string"
        },
        "relabelConfigs": {
          "description": "RelabelConfigs to apply to samples during service discovery.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
          }
        },
        "sampleLimit": {
          "description": "SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.",
          "type": "integer",
          "format": "int64"
        },
        "scheme": {
          "description": "HTTP scheme to use for scraping.",
          "type": "string"
        },
        "scrapeTimeout": {
          "description": "Timeout after which the scrape is ended",
          "type": "string"
        },
        "scrape_interval": {
          "description": "ScrapeInterval is the same as Interval and has priority over it. one of scrape_interval or interval can be used",
          "type": "string"
        },
        "seriesLimit": {
          "description": "SeriesLimit defines per-scrape limit on number of unique time series a single target can expose during all the scrapes on the time window of 24h.",
          "type": "integer",
          "format": "int64"
        },
        "targetPort": {
          "description": "TargetPort Name or number of the pod port this endpoint refers to. Mutually exclusive with port.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "tlsConfig": {
          "description": "TLSConfig configuration to use when scraping the endpoint",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        },
        "vm_scrape_params": {
          "description": "VMScrapeParams defines VictoriaMetrics specific scrape parameters",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMScrapeParams"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.ExternalConfig": {
      "description": "ExternalConfig defines external source of configuration",
      "type": "object",
      "properties": {
        "localPath": {
          "description": "LocalPath contains static path to a config, which is managed externally for cases when using secrets is not applicable, e.g.: Vault sidecar.",
          "type": "string"
        },
        "secretRef": {
          "description": "SecretRef defines selector for externally managed secret which contains configuration",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.FileSDConfig": {
      "description": "FileSDConfig defines a file service discovery configuration. See [here](https://docs.victoriametrics.com/victoriametrics/sd_configs/#file_sd_configs)",
      "type": "object",
      "required": [
        "files"
      ],
      "properties": {
        "files": {
          "description": "List of files to be used for file discovery.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.GCESDConfig": {
      "description": "GCESDConfig configures scrape targets from GCP GCE instances. The private IP address is used by default, but may be changed to the public IP address with relabeling. See [here](https://docs.victoriametrics.com/victoriametrics/sd_configs/#gce_sd_configs)\n\nThe GCE service discovery will load the Google Cloud credentials from the file specified by the GOOGLE_APPLICATION_CREDENTIALS environment variable. See https://cloud.google.com/kubernetes-engine/docs/tutorials/authenticating-to-cloud-platform",
      "type": "object",
      "required": [
        "project",
        "zone"
      ],
      "properties": {
        "filter": {
          "description": "Filter can be used optionally to filter the instance list by other criteria Syntax of this filter is described in the filter query parameter section: https://cloud.google.com/compute/docs/reference/latest/instances/list",
          "type": "string"
        },
        "port": {
          "description": "The port to scrape metrics from. If using the public IP address, this must instead be specified in the relabeling rule.",
          "type": "integer",
          "format": "int32"
        },
        "project": {
          "description": "The Google Cloud Project ID",
          "type": "string",
          "default": ""
        },
        "tagSeparator": {
          "description": "The tag separator is used to separate the tags on concatenation",
          "type": "string"
        },
        "zone": {
          "description": "The zone of the scrape targets. If you need multiple zones use multiple GCESDConfigs.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.HTTPConfig": {
      "description": "HTTPConfig defines a client HTTP configuration for VMAlertmanagerConfig objects See https://prometheus.io/docs/alerting/latest/configuration/#http_config",
      "type": "object",
      "properties": {
        "authorization": {
          "description": "Authorization header configuration for the client. This is mutually exclusive with BasicAuth and is only available starting from Alertmanager v0.22+.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Authorization"
        },
        "basic_auth": {
          "description": "BasicAuth for the client.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.BasicAuth"
        },
        "bearer_token_file": {
          "description": "BearerTokenFile defines filename for bearer token, it must be mounted to pod.",
          "type": "string"
        },
        "bearer_token_secret": {
          "description": "The secret's key that contains the bearer token It must be at them same namespace as CRD",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "oauth2": {
          "description": "OAuth2 client credentials used to fetch a token for the targets.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.OAuth2"
        },
        "proxyURL": {
          "description": "Optional proxy URL.",
          "type": "string"
        },
        "tls_config": {
          "description": "TLS configuration for the client.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.HTTPSDConfig": {
      "description": "HTTPSDConfig defines a HTTP service discovery configuration. See [here](https://docs.victoriametrics.com/victoriametrics/sd_configs/#http_sd_configs)",
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "authorization": {
          "description": "Authorization header to use on every scrape request.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Authorization"
        },
        "basicAuth": {
          "description": "BasicAuth information to use on every scrape request.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.BasicAuth"
        },
        "proxyURL": {
          "description": "ProxyURL eg http://proxyserver:2195 Directs scrapes to proxy through this endpoint.",
          "type": "string"
        },
        "proxy_client_config": {
          "description": "ProxyClientConfig configures proxy auth settings for scraping See [feature description](https://docs.victoriametrics.com/victoriametrics/vmagent/#scraping-targets-via-a-proxy)",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ProxyAuth"
        },
        "tlsConfig": {
          "description": "TLS configuration to use on every scrape request",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        },
        "url": {
          "description": "URL from which the targets are fetched.",
          "type": "string",
          "default": ""
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.Image": {
      "description": "Image defines docker image settings",
      "type": "object",
      "properties": {
        "pullPolicy": {
          "description": "PullPolicy describes how to pull docker image",
          "type": "string"
        },
        "repository": {
          "description": "Repository contains name of docker image + it's repository if needed",
          "type": "string"
        },
        "tag": {
          "description": "Tag contains desired docker image version",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.ImageConfig": {
      "description": "ImageConfig is used to attach images to the incident. See https://developer.pagerduty.com/docs/ZG9jOjExMDI5NTgx-send-an-alert-event#the-images-property for more information.",
      "type": "object",
      "required": [
        "source"
      ],
      "properties": {
        "alt": {
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "source": {
          "type": "string",
          "default": ""
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.InhibitRule": {
      "description": "InhibitRule defines an inhibition rule that allows to mute alerts when other alerts are already firing. Note, it doesn't support deprecated alertmanager config options. See https://prometheus.io/docs/alerting/latest/configuration/#inhibit_rule",
      "type": "object",
      "properties": {
        "equal": {
          "description": "Labels that must have an equal value in the source and target alert for the inhibition to take effect.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "source_matchers": {
          "description": "SourceMatchers defines a list of matchers for which one or more alerts have to exist for the inhibition to take effect.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "target_matchers": {
          "description": "TargetMatchers defines a list of matchers that have to be fulfilled by the target alerts to be muted.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.InsertPorts": {
      "type": "object",
      "properties": {
        "graphitePort": {
          "description": "GraphitePort listen port",
          "type": "string"
        },
        "influxPort": {
          "description": "InfluxPort listen port",
          "type": "string"
        },
        "openTSDBHTTPPort": {
          "description": "OpenTSDBHTTPPort for http connections.",
          "type": "string"
        },
        "openTSDBPort": {
          "description": "OpenTSDBPort for tcp and udp listen",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.JiraConfig": {
      "description": "JiraConfig represent alertmanager's jira_config entry https://prometheus.io/docs/alerting/latest/configuration/#jira_config available from v0.55.0 operator version and v0.28.0 alertmanager version",
      "type": "object",
      "required": [
        "project",
        "issue_type"
      ],
      "properties": {
        "api_url": {
          "description": "The URL to send API requests to. The full API path must be included. Example: https://company.atlassian.net/rest/api/2/",
          "type": "string"
        },
        "custom_fields": {
          "description": "Other issue and custom fields. Jira issue field can have multiple types. Depends on the field type, the values must be provided differently. See https://developer.atlassian.com/server/jira/platform/jira-rest-api-examples/#setting-custom-field-data-for-other-field-types for further examples.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON"
          }
        },
        "description": {
          "description": "Issue description template.",
          "type": "string"
        },
        "http_config": {
          "description": "The HTTP client's configuration. You must use this configuration to supply the personal access token (PAT) as part of the HTTP `Authorization` header. For Jira Cloud, use basic_auth with the email address as the username and the PAT as the password. For Jira Data Center, use the 'authorization' field with 'credentials: <PAT value>'.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.HTTPConfig"
        },
        "issue_type": {
          "description": "Type of the issue (e.g. Bug)",
          "type": "string",
          "default": ""
        },
        "labels": {
          "description": "Labels to be added to the issue",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "priority": {
          "description": "Priority of the issue",
          "type": "string"
        },
        "project": {
          "description": "The project key where issues are created",
          "type": "string",
          "default": ""
        },
        "reopen_duration": {
          "description": "If reopen_transition is defined, reopen the issue when it is not older than this value (rounded down to the nearest minute). The resolutiondate field is used to determine the age of the issue.",
          "type": "string"
        },
        "reopen_transition": {
          "description": "Name of the workflow transition to resolve an issue. The target status must have the category \"done\".",
          "type": "string"
        },
        "resolve_transition": {
          "description": "Name of the workflow transition to reopen an issue. The target status should not have the category \"done\".",
          "type": "string"
        },
        "send_resolved": {
          "description": "SendResolved controls notify about resolved alerts.",
          "type": "boolean"
        },
        "summary": {
          "description": "Issue summary template",
          "type": "string"
        },
        "wont_fix_resolution": {
          "description": "If reopen_transition is defined, ignore issues with that resolution.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.K8SSelectorConfig": {
      "description": "K8SSelectorConfig is Kubernetes Selector Config",
      "type": "object",
      "required": [
        "role"
      ],
      "properties": {
        "field": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "default": ""
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.KubernetesSDConfig": {
      "description": "KubernetesSDConfig allows retrieving scrape targets from Kubernetes' REST API. See [here](https://docs.victoriametrics.com/victoriametrics/sd_configs/#kubernetes_sd_configs)",
      "type": "object",
      "required": [
        "role"
      ],
      "properties": {
        "apiServer": {
          "description": "The API server address consisting of a hostname or IP address followed by an optional port number. If left empty, assuming process is running inside of the cluster. It will discover API servers automatically and use the pod's CA certificate and bearer token file at /var/run/secrets/kubernetes.io/serviceaccount/.",
          "type": "string"
        },
        "attach_metadata": {
          "description": "AttachMetadata configures metadata attaching from service discovery",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AttachMetadata"
        },
        "authorization": {
          "description": "Authorization header to use on every scrape request.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Authorization"
        },
        "basicAuth": {
          "description": "BasicAuth information to use on every scrape request.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.BasicAuth"
        },
        "followRedirects": {
          "description": "Configure whether HTTP requests follow HTTP 3xx redirects.",
          "type": "boolean"
        },
        "namespaces": {
          "description": "Optional namespace discovery. If omitted, discover targets across all namespaces.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.NamespaceDiscovery"
        },
        "oauth2": {
          "description": "OAuth2 defines auth configuration",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.OAuth2"
        },
        "proxyURL": {
          "description": "ProxyURL eg http://proxyserver:2195 Directs scrapes to proxy through this endpoint.",
          "type": "string"
        },
        "proxy_client_config": {
          "description": "ProxyClientConfig configures proxy auth settings for scraping See [feature description](https://docs.victoriametrics.com/victoriametrics/vmagent/#scraping-targets-via-a-proxy)",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ProxyAuth"
        },
        "role": {
          "description": "Role of the Kubernetes entities that should be discovered.",
          "type": "string",
          "default": ""
        },
        "selectors": {
          "description": "Selector to select objects.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.K8SSelectorConfig"
          },
          "x-kubernetes-list-map-keys": [
            "role"
          ],
          "x-kubernetes-list-type": "map"
        },
        "tlsConfig": {
          "description": "TLS configuration to use on every scrape request",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.License": {
      "description": "License holds license key for enterprise features. Using license key is supported starting from VictoriaMetrics corev1.94.0. See [here](https://docs.victoriametrics.com/victoriametrics/enterprise/)",
      "type": "object",
      "properties": {
        "forceOffline": {
          "description": "Enforce offline verification of the license key.",
          "type": "boolean"
        },
        "key": {
          "description": "Enterprise license key. This flag is available only in [VictoriaMetrics enterprise](https://docs.victoriametrics.com/victoriametrics/enterprise/). To request a trial license, [go to](https://victoriametrics.com/products/enterprise/trial)",
          "type": "string"
        },
        "keyRef": {
          "description": "KeyRef is reference to secret with license key for enterprise features.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "reloadInterval": {
          "description": "Interval to be used for checking for license key changes. Note that this is only applicable when using KeyRef.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.LinkConfig": {
      "description": "LinkConfig is used to attach text links to the incident. See https://developer.pagerduty.com/docs/ZG9jOjExMDI5NTgx-send-an-alert-event#the-links-property for more information.",
      "type": "object",
      "required": [
        "href"
      ],
      "properties": {
        "href": {
          "type": "string",
          "default": ""
        },
        "text": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.MSTeamsConfig": {
      "type": "object",
      "properties": {
        "http_config": {
          "description": "HTTP client configuration.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.HTTPConfig"
        },
        "send_resolved": {
          "description": "SendResolved controls notify about resolved alerts.",
          "type": "boolean"
        },
        "text": {
          "description": "The text body of the teams notification.",
          "type": "string"
        },
        "title": {
          "description": "The title of the teams notification.",
          "type": "string"
        },
        "webhook_url": {
          "description": "The incoming webhook URL one of `urlSecret` and `url` must be defined.",
          "type": "string"
        },
        "webhook_url_secret": {
          "description": "URLSecret defines secret name and key at the CRD namespace. It must contain the webhook URL. one of `urlSecret` and `url` must be defined.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.MSTeamsV2Config": {
      "description": "MSTeamsV2Config sends notifications using the new message format with adaptive cards as required by flows. https://support.microsoft.com/en-gb/office/create-incoming-webhooks-with-workflows-for-microsoft-teams-8ae491c7-0394-4861-ba59-055e33f75498 available from v0.55.0 operator version and v0.28.0 alertmanager version",
      "type": "object",
      "properties": {
        "http_config": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.HTTPConfig"
        },
        "send_resolved": {
          "description": "SendResolved controls notify about resolved alerts.",
          "type": "boolean"
        },
        "text": {
          "description": "Message body template.",
          "type": "string"
        },
        "title": {
          "description": "Message title template.",
          "type": "string"
        },
        "webhook_url": {
          "description": "The incoming webhook URL one of `urlSecret` and `url` must be defined.",
          "type": "string"
        },
        "webhook_url_secret": {
          "description": "URLSecret defines secret name and key at the CRD namespace. It must contain the webhook URL. one of `webhook_url` or `webhook_url_secret` must be defined.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.ManagedObjectsMetadata": {
      "description": "ManagedObjectsMetadata contains Labels and Annotations",
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "labels": {
          "description": "Labels Map of string keys and values that can be used to organize and categorize (scope and select) objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.NamespaceDiscovery": {
      "description": "NamespaceDiscovery is the configuration for discovering Kubernetes namespaces.",
      "type": "object",
      "properties": {
        "names": {
          "description": "List of namespaces where to watch for resources. If empty and `ownNamespace` isn't true, watch for resources in all namespaces.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "ownNamespace": {
          "description": "Includes the namespace in which the pod exists to the list of watched namespaces.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.NamespaceSelector": {
      "description": "NamespaceSelector is a selector for selecting either all namespaces or a list of namespaces.",
      "type": "object",
      "properties": {
        "any": {
          "description": "Boolean describing whether all namespaces are selected in contrast to a list restricting them.",
          "type": "boolean"
        },
        "matchNames": {
          "description": "List of namespace names.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.OAuth2": {
      "description": "OAuth2 defines OAuth2 configuration",
      "type": "object",
      "required": [
        "client_id",
        "token_url"
      ],
      "properties": {
        "client_id": {
          "description": "The secret or configmap containing the OAuth2 client id",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SecretOrConfigMap"
        },
        "client_secret": {
          "description": "The secret containing the OAuth2 client secret",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "client_secret_file": {
          "description": "ClientSecretFile defines path for client secret file.",
          "type": "string"
        },
        "endpoint_params": {
          "description": "Parameters to append to the token URL",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "proxy_url": {
          "description": "The proxy URL for token_url connection ( available from v0.55.0). Is only supported by Scrape objects family",
          "type": "string"
        },
        "scopes": {
          "description": "OAuth2 scopes used for the token request",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "tls_config": {
          "description": "TLSConfig for token_url connection ( available from v0.55.0). Is only supported by Scrape objects family",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        },
        "token_url": {
          "description": "The URL to fetch the token from",
          "type": "string",
          "default": ""
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.OpenStackSDConfig": {
      "description": "OpenStackSDConfig allow retrieving scrape targets from OpenStack Nova instances. See [here](https://docs.victoriametrics.com/victoriametrics/sd_configs/#openstack_sd_configs)",
      "type": "object",
      "required": [
        "role",
        "region"
      ],
      "properties": {
        "allTenants": {
          "description": "Whether the service discovery should list all instances for all projects. It is only relevant for the 'instance' role and usually requires admin permissions.",
          "type": "boolean"
        },
        "applicationCredentialId": {
          "description": "ApplicationCredentialID",
          "type": "string"
        },
        "applicationCredentialName": {
          "description": "The ApplicationCredentialID or ApplicationCredentialName fields are required if using an application credential to authenticate. Some providers allow you to create an application credential to authenticate rather than a password.",
          "type": "string"
        },
        "applicationCredentialSecret": {
          "description": "The applicationCredentialSecret field is required if using an application credential to authenticate.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "availability": {
          "description": "Availability of the endpoint to connect to.",
          "type": "string"
        },
        "domainID": {
          "description": "DomainID",
          "type": "string"
        },
        "domainName": {
          "description": "At most one of domainId and domainName must be provided if using username with Identity V3. Otherwise, either are optional.",
          "type": "string"
        },
        "identityEndpoint": {
          "description": "IdentityEndpoint specifies the HTTP endpoint that is required to work with the Identity API of the appropriate version.",
          "type": "string"
        },
        "password": {
          "description": "Password for the Identity V2 and V3 APIs. Consult with your provider's control panel to discover your account's preferred method of authentication.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "port": {
          "description": "The port to scrape metrics from. If using the public IP address, this must instead be specified in the relabeling rule.",
          "type": "integer",
          "format": "int32"
        },
        "projectID": {
          "description": "ProjectID",
          "type": "string"
        },
        "projectName": {
          "description": "The ProjectId and ProjectName fields are optional for the Identity V2 API. Some providers allow you to specify a ProjectName instead of the ProjectId. Some require both. Your provider's authentication policies will determine how these fields influence authentication.",
          "type": "string"
        },
        "region": {
          "description": "The OpenStack Region.",
          "type": "string",
          "default": ""
        },
        "role": {
          "description": "The OpenStack role of entities that should be discovered.",
          "type": "string",
          "default": ""
        },
        "tlsConfig": {
          "description": "TLS configuration to use on every scrape request",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        },
        "userid": {
          "description": "UserID",
          "type": "string"
        },
        "username": {
          "description": "Username is required if using Identity V2 API. Consult with your provider's control panel to discover your account's username. In Identity V3, either userid or a combination of username and domainId or domainName are needed",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.OpsGenieConfig": {
      "description": "OpsGenieConfig configures notifications via OpsGenie. See https://prometheus.io/docs/alerting/latest/configuration/#opsgenie_config",
      "type": "object",
      "properties": {
        "actions": {
          "description": "Comma separated list of actions that will be available for the alert.",
          "type": "string"
        },
        "apiURL": {
          "description": "The URL to send OpsGenie API requests to.",
          "type": "string"
        },
        "api_key": {
          "description": "The secret's key that contains the OpsGenie API key. It must be at them same namespace as CRD fallback to global setting if empty",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "description": {
          "description": "Description of the incident.",
          "type": "string"
        },
        "details": {
          "description": "A set of arbitrary key/value pairs that provide further detail about the incident.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "entity": {
          "description": "Optional field that can be used to specify which domain alert is related to.",
          "type": "string"
        },
        "http_config": {
          "description": "HTTP client configuration.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.HTTPConfig"
        },
        "message": {
          "description": "Alert text limited to 130 characters.",
          "type": "string"
        },
        "note": {
          "description": "Additional alert note.",
          "type": "string"
        },
        "priority": {
          "description": "Priority level of alert. Possible values are P1, P2, P3, P4, and P5.",
          "type": "string"
        },
        "responders": {
          "description": "List of responders responsible for notifications.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.OpsGenieConfigResponder"
          }
        },
        "send_resolved": {
          "description": "SendResolved controls notify about resolved alerts.",
          "type": "boolean"
        },
        "source": {
          "description": "Backlink to the sender of the notification.",
          "type": "string"
        },
        "tags": {
          "description": "Comma separated list of tags attached to the notifications.",
          "type": "string"
        },
        "update_alerts": {
          "description": "Whether to update message and description of the alert in OpsGenie if it already exists By default, the alert is never updated in OpsGenie, the new message only appears in activity log.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.OpsGenieConfigResponder": {
      "description": "OpsGenieConfigResponder defines a responder to an incident. One of `id`, `name` or `username` has to be defined.",
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "id": {
          "description": "ID of the responder.",
          "type": "string"
        },
        "name": {
          "description": "Name of the responder.",
          "type": "string"
        },
        "type": {
          "description": "Type of responder.",
          "type": "string",
          "default": ""
        },
        "username": {
          "description": "Username of the responder.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.PagerDutyConfig": {
      "description": "PagerDutyConfig configures notifications via PagerDuty. See https://prometheus.io/docs/alerting/latest/configuration/#pagerduty_config",
      "type": "object",
      "properties": {
        "class": {
          "description": "The class/type of the event.",
          "type": "string"
        },
        "client": {
          "description": "Client identification.",
          "type": "string"
        },
        "client_url": {
          "description": "Backlink to the sender of notification.",
          "type": "string"
        },
        "component": {
          "description": "The part or component of the affected system that is broken.",
          "type": "string"
        },
        "description": {
          "description": "Description of the incident.",
          "type": "string"
        },
        "details": {
          "description": "Arbitrary key/value pairs that provide further detail about the incident.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "group": {
          "description": "A cluster or grouping of sources.",
          "type": "string"
        },
        "http_config": {
          "description": "HTTP client configuration.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.HTTPConfig"
        },
        "images": {
          "description": "Images to attach to the incident.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ImageConfig"
          }
        },
        "links": {
          "description": "Links to attach to the incident.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.LinkConfig"
          }
        },
        "routing_key": {
          "description": "The secret's key that contains the PagerDuty integration key (when using Events API v2). Either this field or `serviceKey` needs to be defined. It must be at them same namespace as CRD",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "send_resolved": {
          "description": "SendResolved controls notify about resolved alerts.",
          "type": "boolean"
        },
        "service_key": {
          "description": "The secret's key that contains the PagerDuty service key (when using integration type \"Prometheus\"). Either this field or `routingKey` needs to be defined. It must be at them same namespace as CRD",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "severity": {
          "description": "Severity of the incident.",
          "type": "string"
        },
        "url": {
          "description": "The URL to send requests to.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.PodMetricsEndpoint": {
      "description": "PodMetricsEndpoint defines a scrapeable endpoint of a Kubernetes Pod serving metrics.",
      "type": "object",
      "properties": {
        "attach_metadata": {
          "description": "AttachMetadata configures metadata attaching from service discovery",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AttachMetadata"
        },
        "authorization": {
          "description": "Authorization with http header Authorization",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Authorization"
        },
        "basicAuth": {
          "description": "BasicAuth allow an endpoint to authenticate over basic authentication",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.BasicAuth"
        },
        "bearerTokenFile": {
          "description": "File to read bearer token for scraping targets.",
          "type": "string"
        },
        "bearerTokenSecret": {
          "description": "Secret to mount to read bearer token for scraping targets. The secret needs to be in the same namespace as the scrape object and accessible by the victoria-metrics operator.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "filterRunning": {
          "description": "FilterRunning applies filter with pod status == running it prevents from scrapping metrics at failed or succeed state pods. enabled by default",
          "type": "boolean"
        },
        "follow_redirects": {
          "description": "FollowRedirects controls redirects for scraping.",
          "type": "boolean"
        },
        "honorLabels": {
          "description": "HonorLabels chooses the metric's labels on collisions with target labels.",
          "type": "boolean"
        },
        "honorTimestamps": {
          "description": "HonorTimestamps controls whether vmagent respects the timestamps present in scraped data.",
          "type": "boolean"
        },
        "interval": {
          "description": "Interval at which metrics should be scraped",
          "type": "string"
        },
        "max_scrape_size": {
          "description": "MaxScrapeSize defines a maximum size of scraped data for a job",
          "type": "string"
        },
        "metricRelabelConfigs": {
          "description": "MetricRelabelConfigs to apply to samples after scrapping.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
          }
        },
        "oauth2": {
          "description": "OAuth2 defines auth configuration",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.OAuth2"
        },
        "params": {
          "description": "Optional HTTP URL parameters",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            }
          }
        },
        "path": {
          "description": "HTTP path to scrape for metrics.",
          "type": "string"
        },
        "port": {
          "description": "Name of the port exposed at Pod.",
          "type": "string"
        },
        "portNumber": {
          "description": "PortNumber defines the `Pod` port number which exposes the endpoint.",
          "type": "integer",
          "format": "int32"
        },
        "proxyURL": {
          "description": "ProxyURL eg http://proxyserver:2195 Directs scrapes to proxy through this endpoint.",
          "type": "string"
        },
        "relabelConfigs": {
          "description": "RelabelConfigs to apply to samples during service discovery.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
          }
        },
        "sampleLimit": {
          "description": "SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.",
          "type": "integer",
          "format": "int64"
        },
        "scheme": {
          "description": "HTTP scheme to use for scraping.",
          "type": "string"
        },
        "scrapeTimeout": {
          "description": "Timeout after which the scrape is ended",
          "type": "string"
        },
        "scrape_interval": {
          "description": "ScrapeInterval is the same as Interval and has priority over it. one of scrape_interval or interval can be used",
          "type": "string"
        },
        "seriesLimit": {
          "description": "SeriesLimit defines per-scrape limit on number of unique time series a single target can expose during all the scrapes on the time window of 24h.",
          "type": "integer",
          "format": "int64"
        },
        "targetPort": {
          "description": "TargetPort defines name or number of the pod port this endpoint refers to. Mutually exclusive with Port and PortNumber.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "tlsConfig": {
          "description": "TLSConfig configuration to use when scraping the endpoint",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        },
        "vm_scrape_params": {
          "description": "VMScrapeParams defines VictoriaMetrics specific scrape parameters",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMScrapeParams"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.ProbeTargetIngress": {
      "description": "ProbeTargetIngress defines the set of Ingress objects considered for probing.",
      "type": "object",
      "properties": {
        "namespaceSelector": {
          "description": "Select Ingress objects by namespace.",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.NamespaceSelector"
        },
        "relabelingConfigs": {
          "description": "RelabelConfigs to apply to samples during service discovery.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
          }
        },
        "selector": {
          "description": "Select Ingress objects by labels.",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.ProxyAuth": {
      "description": "ProxyAuth represent proxy auth config Only VictoriaMetrics scrapers supports it. See https://github.com/VictoriaMetrics/VictoriaMetrics/commit/a6a71ef861444eb11fe8ec6d2387f0fc0c4aea87",
      "type": "object",
      "properties": {
        "basic_auth": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.BasicAuth"
        },
        "bearer_token": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "bearer_token_file": {
          "type": "string"
        },
        "tls_config": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.PushoverConfig": {
      "description": "PushoverConfig configures notifications via Pushover. See https://prometheus.io/docs/alerting/latest/configuration/#pushover_config",
      "type": "object",
      "properties": {
        "expire": {
          "description": "How long your notification will continue to be retried for, unless the user acknowledges the notification.",
          "type": "string"
        },
        "html": {
          "description": "Whether notification message is HTML or plain text.",
          "type": "boolean"
        },
        "http_config": {
          "description": "HTTP client configuration.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.HTTPConfig"
        },
        "message": {
          "description": "Notification message.",
          "type": "string"
        },
        "priority": {
          "description": "Priority, see https://pushover.net/api#priority",
          "type": "string"
        },
        "retry": {
          "description": "How often the Pushover servers will send the same notification to the user. Must be at least 30 seconds.",
          "type": "string"
        },
        "send_resolved": {
          "description": "SendResolved controls notify about resolved alerts.",
          "type": "boolean"
        },
        "sound": {
          "description": "The name of one of the sounds supported by device clients to override the user's default sound choice",
          "type": "string"
        },
        "title": {
          "description": "Notification title.",
          "type": "string"
        },
        "token": {
          "description": "The secret's key that contains the registered application\u2019s API token, see https://pushover.net/apps. It must be at them same namespace as CRD",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "url": {
          "description": "A supplementary URL shown alongside the message.",
          "type": "string"
        },
        "url_title": {
          "description": "A title for supplementary URL, otherwise just the URL is shown",
          "type": "string"
        },
        "user_key": {
          "description": "The secret's key that contains the recipient user\u2019s user key. It must be at them same namespace as CRD",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.Receiver": {
      "description": "Receiver defines one or more notification integrations.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "discord_configs": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.DiscordConfig"
          }
        },
        "email_configs": {
          "description": "EmailConfigs defines email notification configurations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmailConfig"
          }
        },
        "jira_configs": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.JiraConfig"
          }
        },
        "msteams_configs": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.MSTeamsConfig"
          }
        },
        "msteamsv2_configs": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.MSTeamsV2Config"
          }
        },
        "name": {
          "description": "Name of the receiver. Must be unique across all items from the list.",
          "type": "string",
          "default": ""
        },
        "opsgenie_configs": {
          "description": "OpsGenieConfigs defines ops genie notification configurations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.OpsGenieConfig"
          }
        },
        "pagerduty_configs": {
          "description": "PagerDutyConfigs defines pager duty notification configurations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.PagerDutyConfig"
          }
        },
        "pushover_configs": {
          "description": "PushoverConfigs defines push over notification configurations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.PushoverConfig"
          }
        },
        "rocketchat_configs": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RocketchatConfig"
          }
        },
        "slack_configs": {
          "description": "SlackConfigs defines slack notification configurations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SlackConfig"
          }
        },
        "sns_configs": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SnsConfig"
          }
        },
        "telegram_configs": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TelegramConfig"
          }
        },
        "victorops_configs": {
          "description": "VictorOpsConfigs defines victor ops notification configurations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VictorOpsConfig"
          }
        },
        "webex_configs": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.WebexConfig"
          }
        },
        "webhook_configs": {
          "description": "WebhookConfigs defines webhook notification configurations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.WebhookConfig"
          }
        },
        "wechat_configs": {
          "description": "WeChatConfigs defines wechat notification configurations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.WeChatConfig"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig": {
      "description": "RelabelConfig allows dynamic rewriting of the label set More info: https://docs.victoriametrics.com/victoriametrics/#relabeling",
      "type": "object",
      "properties": {
        "action": {
          "description": "Action to perform based on regex matching. Default is 'replace'",
          "type": "string"
        },
        "if": {
          "description": "If represents metricsQL match expression (or list of expressions): '{__name__=~\"foo_.*\"}'",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "labels": {
          "description": "Labels is used together with Match for `action: graphite`",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "match": {
          "description": "Match is used together with Labels for `action: graphite`",
          "type": "string"
        },
        "modulus": {
          "description": "Modulus to take of the hash of the source label values.",
          "type": "integer",
          "format": "int64"
        },
        "regex": {
          "description": "Regular expression against which the extracted value is matched. Default is '(.*)' victoriaMetrics supports multiline regex joined with | https://docs.victoriametrics.com/victoriametrics/vmagent/#relabeling-enhancements",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "replacement": {
          "description": "Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'",
          "type": "string"
        },
        "separator": {
          "description": "Separator placed between concatenated source label values. default is ';'.",
          "type": "string"
        },
        "sourceLabels": {
          "description": "The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "source_labels": {
          "description": "UnderScoreSourceLabels - additional form of source labels source_labels for compatibility with original relabel config. if set  both sourceLabels and source_labels, sourceLabels has priority. for details https://github.com/VictoriaMetrics/operator/issues/131",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "targetLabel": {
          "description": "Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.",
          "type": "string"
        },
        "target_label": {
          "description": "UnderScoreTargetLabel - additional form of target label - target_label for compatibility with original relabel config. if set  both targetLabel and target_label, targetLabel has priority. for details https://github.com/VictoriaMetrics/operator/issues/131",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.RocketchatAttachmentAction": {
      "description": "RocketchatAttachmentAction defines message attachments https://github.com/RocketChat/Rocket.Chat.Go.SDK/blob/master/models/message.go",
      "type": "object",
      "properties": {
        "msg": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.RocketchatAttachmentField": {
      "description": "RocketchatAttachmentField defines API fields https://developer.rocket.chat/reference/api/rest-api/endpoints/messaging/chat-endpoints/postmessage#attachment-field-objects",
      "type": "object",
      "properties": {
        "short": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.RocketchatConfig": {
      "description": "RocketchatConfig configures notifications via Rocketchat. https://prometheus.io/docs/alerting/latest/configuration/#rocketchat_config available from v0.55.0 operator version and v0.28.0 alertmanager version",
      "type": "object",
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RocketchatAttachmentAction"
          }
        },
        "api_url": {
          "type": "string"
        },
        "channel": {
          "description": "RocketChat channel override, (like #other-channel or @username).",
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "emoji": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RocketchatAttachmentField"
          }
        },
        "http_config": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.HTTPConfig"
        },
        "icon_url": {
          "type": "string"
        },
        "image_url": {
          "type": "string"
        },
        "link_names": {
          "type": "boolean"
        },
        "send_resolved": {
          "description": "SendResolved controls notify about resolved alerts.",
          "type": "boolean"
        },
        "short_fields": {
          "type": "boolean"
        },
        "text": {
          "type": "string"
        },
        "thumb_url": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "title_link": {
          "type": "string"
        },
        "token": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "token_id": {
          "description": "The sender token and token_id See https://docs.rocket.chat/use-rocket.chat/user-guides/user-panel/my-account#personal-access-tokens",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.Route": {
      "description": "Route defines a node in the routing tree.",
      "type": "object",
      "required": [
        "receiver"
      ],
      "properties": {
        "active_time_intervals": {
          "description": "ActiveTimeIntervals Times when the route should be active These must match the name at time_intervals",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "continue": {
          "description": "Continue indicating whether an alert should continue matching subsequent sibling nodes. It will always be true for the first-level route if disableRouteContinueEnforce for vmalertmanager not set.",
          "type": "boolean"
        },
        "group_by": {
          "description": "List of labels to group by.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "group_interval": {
          "description": "How long to wait before sending an updated notification.",
          "type": "string"
        },
        "group_wait": {
          "description": "How long to wait before sending the initial notification.",
          "type": "string"
        },
        "matchers": {
          "description": "List of matchers that the alert\u2019s labels should match. For the first level route, the operator adds a namespace: \"CRD_NS\" matcher. https://prometheus.io/docs/alerting/latest/configuration/#matcher",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "mute_time_intervals": {
          "description": "MuteTimeIntervals is a list of interval names that will mute matched alert",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "receiver": {
          "description": "Name of the receiver for this route.",
          "type": "string",
          "default": ""
        },
        "repeat_interval": {
          "description": "How long to wait before repeating the last notification.",
          "type": "string"
        },
        "routes": {
          "description": "Child routes. https://prometheus.io/docs/alerting/latest/configuration/#route",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.Rule": {
      "description": "Rule describes an alerting or recording rule.",
      "type": "object",
      "properties": {
        "alert": {
          "description": "Alert is a name for alert",
          "type": "string"
        },
        "annotations": {
          "description": "Annotations will be added to rule configuration",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "debug": {
          "description": "Debug enables logging for rule it useful for tracking",
          "type": "boolean"
        },
        "expr": {
          "description": "Expr is query, that will be evaluated at dataSource",
          "type": "string",
          "default": ""
        },
        "for": {
          "description": "For evaluation interval in time.Duration format 30s, 1m, 1h  or nanoseconds",
          "type": "string"
        },
        "keep_firing_for": {
          "description": "KeepFiringFor will make alert continue firing for this long even when the alerting expression no longer has results. Use time.Duration format, 30s, 1m, 1h  or nanoseconds",
          "type": "string"
        },
        "labels": {
          "description": "Labels will be added to rule configuration",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "record": {
          "description": "Record represents a query, that will be recorded to dataSource",
          "type": "string"
        },
        "update_entries_limit": {
          "description": "UpdateEntriesLimit defines max number of rule's state updates stored in memory. Overrides `-rule.updateEntriesLimit` in vmalert.",
          "type": "integer",
          "format": "int32"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.RuleGroup": {
      "description": "RuleGroup is a list of sequentially evaluated recording and alerting rules.",
      "type": "object",
      "required": [
        "name",
        "rules"
      ],
      "properties": {
        "concurrency": {
          "description": "Concurrency defines how many rules execute at once.",
          "type": "integer",
          "format": "int32"
        },
        "eval_alignment": {
          "description": "Optional The evaluation timestamp will be aligned with group's interval, instead of using the actual timestamp that evaluation happens at. It is enabled by default to get more predictable results and to visually align with graphs plotted via Grafana or vmui.",
          "type": "boolean"
        },
        "eval_delay": {
          "description": "Optional Adjust the `time` parameter of group evaluation requests to compensate intentional query delay from the datasource.",
          "type": "string"
        },
        "eval_offset": {
          "description": "Optional Group will be evaluated at the exact offset in the range of [0...interval].",
          "type": "string"
        },
        "extra_filter_labels": {
          "description": "ExtraFilterLabels optional list of label filters applied to every rule's request within a group. Is compatible only with VM datasource. See more details [here](https://docs.victoriametrics.com/victoriametrics/#prometheus-querying-api-enhancements) Deprecated: use params instead",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "headers": {
          "description": "Headers contains optional HTTP headers added to each rule request Must be in form `header-name: value` For example:\n headers:\n   - \"CustomHeader: foo\"\n   - \"CustomHeader2: bar\"",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "interval": {
          "description": "evaluation interval for group",
          "type": "string"
        },
        "labels": {
          "description": "Labels optional list of labels added to every rule within a group. It has priority over the external labels. Labels are commonly used for adding environment or tenant-specific tag.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "limit": {
          "description": "Limit the number of alerts an alerting rule and series a recording rule can produce",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Name of group",
          "type": "string",
          "default": ""
        },
        "notifier_headers": {
          "description": "NotifierHeaders contains optional HTTP headers added to each alert request which will send to notifier Must be in form `header-name: value` For example:\n headers:\n   - \"CustomHeader: foo\"\n   - \"CustomHeader2: bar\"",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "params": {
          "description": "Params optional HTTP URL parameters added to each rule request",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            }
          }
        },
        "rules": {
          "description": "Rules list of alert rules",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Rule"
          }
        },
        "tenant": {
          "description": "Tenant id for group, can be used only with enterprise version of vmalert. See more details [here](https://docs.victoriametrics.com/victoriametrics/vmalert/#multitenancy).",
          "type": "string"
        },
        "type": {
          "description": "Type defines datasource type for enterprise version of vmalert possible values - prometheus,graphite,vlogs",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.ScrapeObjectStatus": {
      "description": "ScrapeObjectStatus defines the observed state of ScrapeObjects",
      "type": "object",
      "properties": {
        "observedGeneration": {
          "description": "ObservedGeneration defines current generation picked by operator for the reconcile",
          "type": "integer",
          "format": "int64"
        },
        "reason": {
          "description": "Reason defines human readable error reason",
          "type": "string"
        },
        "updateStatus": {
          "description": "UpdateStatus defines a status for update rollout",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.SecretOrConfigMap": {
      "description": "SecretOrConfigMap allows to specify data as a Secret or ConfigMap. Fields are mutually exclusive.",
      "type": "object",
      "properties": {
        "configMap": {
          "description": "ConfigMap containing data to use for the targets.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector"
        },
        "secret": {
          "description": "Secret containing data to use for the targets.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.SecurityContext": {
      "description": "SecurityContext extends PodSecurityContext with ContainerSecurityContext It allows to globally configure security params for pod and all containers",
      "type": "object",
      "properties": {
        "allowPrivilegeEscalation": {
          "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.",
          "type": "boolean"
        },
        "appArmorProfile": {
          "description": "appArmorProfile is the AppArmor options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows.",
          "$ref": "#/definitions/io.k8s.api.core.v1.AppArmorProfile"
        },
        "capabilities": {
          "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Capabilities"
        },
        "fsGroup": {
          "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:\n\n1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume. Note that this field cannot be set when spec.os.name is windows.",
          "type": "integer",
          "format": "int64"
        },
        "fsGroupChangePolicy": {
          "description": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used. Note that this field cannot be set when spec.os.name is windows.",
          "type": "string"
        },
        "privileged": {
          "description": "Run containers in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Note that this field cannot be set when spec.os.name is windows.",
          "type": "boolean"
        },
        "procMount": {
          "description": "procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.",
          "type": "string"
        },
        "readOnlyRootFilesystem": {
          "description": "Whether this containers has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.",
          "type": "boolean"
        },
        "runAsGroup": {
          "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.",
          "type": "integer",
          "format": "int64"
        },
        "runAsNonRoot": {
          "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
          "type": "boolean"
        },
        "runAsUser": {
          "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.",
          "type": "integer",
          "format": "int64"
        },
        "seLinuxChangePolicy": {
          "description": "seLinuxChangePolicy defines how the container's SELinux label is applied to all volumes used by the Pod. It has no effect on nodes that do not support SELinux or to volumes does not support SELinux. Valid values are \"MountOption\" and \"Recursive\".\n\n\"Recursive\" means relabeling of all files on all Pod volumes by the container runtime. This may be slow for large volumes, but allows mixing privileged and unprivileged Pods sharing the same volume on the same node.\n\n\"MountOption\" mounts all eligible Pod volumes with `-o context` mount option. This requires all Pods that share the same volume to use the same SELinux label. It is not possible to share the same volume among privileged and unprivileged Pods. Eligible volumes are in-tree FibreChannel and iSCSI volumes, and all CSI volumes whose CSI driver announces SELinux support by setting spec.seLinuxMount: true in their CSIDriver instance. Other volumes are always re-labelled recursively. \"MountOption\" value is allowed only when SELinuxMount feature gate is enabled.\n\nIf not specified and SELinuxMount feature gate is enabled, \"MountOption\" is used. If not specified and SELinuxMount feature gate is disabled, \"MountOption\" is used for ReadWriteOncePod volumes and \"Recursive\" for all other volumes.\n\nThis field affects only Pods that have SELinux label set, either in PodSecurityContext or in SecurityContext of all containers.\n\nAll Pods that use the same volume should use the same seLinuxChangePolicy, otherwise some pods can get stuck in ContainerCreating state. Note that this field cannot be set when spec.os.name is windows.",
          "type": "string"
        },
        "seLinuxOptions": {
          "description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions"
        },
        "seccompProfile": {
          "description": "The seccomp options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SeccompProfile"
        },
        "supplementalGroups": {
          "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID and fsGroup (if specified).  If the SupplementalGroupsPolicy feature is enabled, the supplementalGroupsPolicy field determines whether these are in addition to or instead of any group memberships defined in the container image. If unspecified, no additional groups are added, though group memberships defined in the container image may still be used, depending on the supplementalGroupsPolicy field. Note that this field cannot be set when spec.os.name is windows.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64",
            "default": 0
          },
          "x-kubernetes-list-type": "atomic"
        },
        "supplementalGroupsPolicy": {
          "description": "Defines how supplemental groups of the first container processes are calculated. Valid values are \"Merge\" and \"Strict\". If not specified, \"Merge\" is used. (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled and the container runtime must implement support for this feature. Note that this field cannot be set when spec.os.name is windows.",
          "type": "string"
        },
        "sysctls": {
          "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch. Note that this field cannot be set when spec.os.name is windows.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Sysctl"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "windowsOptions": {
          "description": "The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.",
          "$ref": "#/definitions/io.k8s.api.core.v1.WindowsSecurityContextOptions"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.Sigv4Config": {
      "type": "object",
      "properties": {
        "access_key": {
          "description": "The AWS API keys. Both access_key and secret_key must be supplied or both must be blank. If blank the environment variables `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY` are used.",
          "type": "string"
        },
        "access_key_selector": {
          "description": "secret key selector to get the keys from a Kubernetes Secret",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "profile": {
          "description": "Named AWS profile used to authenticate",
          "type": "string"
        },
        "region": {
          "description": "AWS region, if blank the region from the default credentials chain is used",
          "type": "string"
        },
        "role_arn": {
          "description": "AWS Role ARN, an alternative to using AWS API keys",
          "type": "string"
        },
        "secret_key_selector": {
          "description": "secret key selector to get the keys from a Kubernetes Secret",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.SlackAction": {
      "description": "SlackAction configures a single Slack action that is sent with each notification. See https://api.slack.com/docs/message-attachments#action_fields and https://api.slack.com/docs/message-buttons for more information.",
      "type": "object",
      "required": [
        "type",
        "text"
      ],
      "properties": {
        "confirm": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SlackConfirmationField"
        },
        "name": {
          "type": "string"
        },
        "style": {
          "type": "string"
        },
        "text": {
          "type": "string",
          "default": ""
        },
        "type": {
          "type": "string",
          "default": ""
        },
        "url": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.SlackConfig": {
      "description": "SlackConfig configures notifications via Slack. See https://prometheus.io/docs/alerting/latest/configuration/#slack_config",
      "type": "object",
      "properties": {
        "actions": {
          "description": "A list of Slack actions that are sent with each notification.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SlackAction"
          }
        },
        "api_url": {
          "description": "The secret's key that contains the Slack webhook URL. It must be at them same namespace as CRD fallback to global setting if empty",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "callback_id": {
          "type": "string"
        },
        "channel": {
          "description": "The channel or user to send notifications to.",
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "fallback": {
          "type": "string"
        },
        "fields": {
          "description": "A list of Slack fields that are sent with each notification.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SlackField"
          }
        },
        "footer": {
          "type": "string"
        },
        "http_config": {
          "description": "HTTP client configuration.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.HTTPConfig"
        },
        "icon_emoji": {
          "type": "string"
        },
        "icon_url": {
          "type": "string"
        },
        "image_url": {
          "type": "string"
        },
        "link_names": {
          "type": "boolean"
        },
        "mrkdwn_in": {
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "pretext": {
          "type": "string"
        },
        "send_resolved": {
          "description": "SendResolved controls notify about resolved alerts.",
          "type": "boolean"
        },
        "short_fields": {
          "type": "boolean"
        },
        "text": {
          "type": "string"
        },
        "thumb_url": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "title_link": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.SlackConfirmationField": {
      "description": "SlackConfirmationField protect users from destructive actions or particularly distinguished decisions by asking them to confirm their button click one more time. See https://api.slack.com/docs/interactive-message-field-guide#confirmation_fields for more information.",
      "type": "object",
      "required": [
        "text"
      ],
      "properties": {
        "dismiss_text": {
          "type": "string"
        },
        "ok_text": {
          "type": "string"
        },
        "text": {
          "type": "string",
          "default": ""
        },
        "title": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.SlackField": {
      "description": "SlackField configures a single Slack field that is sent with each notification. See https://api.slack.com/docs/message-attachments#fields for more information.",
      "type": "object",
      "required": [
        "title",
        "value"
      ],
      "properties": {
        "short": {
          "type": "boolean"
        },
        "title": {
          "type": "string",
          "default": ""
        },
        "value": {
          "type": "string",
          "default": ""
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.SnsConfig": {
      "type": "object",
      "properties": {
        "api_url": {
          "description": "The api URL",
          "type": "string"
        },
        "attributes": {
          "description": "SNS message attributes",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "http_config": {
          "description": "HTTP client configuration.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.HTTPConfig"
        },
        "message": {
          "description": "The message content of the SNS notification.",
          "type": "string"
        },
        "phone_number": {
          "description": "Phone number if message is delivered via SMS Specify this, topic_arn or target_arn",
          "type": "string"
        },
        "send_resolved": {
          "description": "SendResolved controls notify about resolved alerts.",
          "type": "boolean"
        },
        "sigv4": {
          "description": "Configure the AWS Signature Verification 4 signing process",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Sigv4Config"
        },
        "subject": {
          "description": "The subject line if message is delivered to an email endpoint.",
          "type": "string"
        },
        "target_arn": {
          "description": "Mobile platform endpoint ARN if message is delivered via mobile notifications Specify this, topic_arn or phone_number",
          "type": "string"
        },
        "topic_arn": {
          "description": "SNS topic ARN, either specify this, phone_number or target_arn",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.StatefulSetUpdateStrategyBehavior": {
      "description": "StatefulSetUpdateStrategyBehavior customizes behavior for StatefulSet updates.",
      "type": "object",
      "properties": {
        "maxUnavailable": {
          "description": "MaxUnavailable defines the maximum number of pods that can be unavailable during the update. It can be specified as an absolute number (e.g. 2) or a percentage of the total pods (e.g. \"50%\"). For example, if set to 100%, all pods will be upgraded at once, minimizing downtime when needed.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.StaticConfig": {
      "description": "StaticConfig defines a static configuration. See [here](https://docs.victoriametrics.com/victoriametrics/sd_configs/#static_configs)",
      "type": "object",
      "properties": {
        "labels": {
          "description": "Labels assigned to all metrics scraped from the targets.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "targets": {
          "description": "List of targets for this static configuration.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.StaticRef": {
      "description": "StaticRef - user-defined routing host address.",
      "type": "object",
      "properties": {
        "url": {
          "description": "URL http url for given staticRef.",
          "type": "string"
        },
        "urls": {
          "description": "URLs allows setting multiple urls for load-balancing at vmauth-side.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.StorageSpec": {
      "description": "StorageSpec defines the configured storage for a group VM servers. If neither `emptyDir` nor `volumeClaimTemplate` is specified, then by default an [EmptyDir](https://kubernetes.io/docs/concepts/storage/volumes/#emptydir) will be used.",
      "type": "object",
      "properties": {
        "disableMountSubPath": {
          "description": "Deprecated: subPath usage will be disabled by default in a future release, this option will become unnecessary. DisableMountSubPath allows to remove any subPath usage in volume mounts.",
          "type": "boolean"
        },
        "emptyDir": {
          "description": "EmptyDirVolumeSource to be used by the Prometheus StatefulSets. If specified, used in place of any volumeClaimTemplate. More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir",
          "$ref": "#/definitions/io.k8s.api.core.v1.EmptyDirVolumeSource"
        },
        "volumeClaimTemplate": {
          "description": "A PVC spec to be used by the StatefulSets/Deployments.",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedPersistentVolumeClaim"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.StreamAggrConfig": {
      "description": "StreamAggrConfig defines the stream aggregation config",
      "type": "object",
      "properties": {
        "configmap": {
          "description": "ConfigMap with stream aggregation rules",
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector"
        },
        "dedupInterval": {
          "description": "Allows setting different de-duplication intervals per each configured remote storage",
          "type": "string"
        },
        "dropInput": {
          "description": "Allow drop all the input samples after the aggregation",
          "type": "boolean"
        },
        "dropInputLabels": {
          "description": "labels to drop from samples for aggregator before stream de-duplication and aggregation",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "enableWindows": {
          "description": "EnableWindows enables aggregating data in separate windows ( available from v0.54.0).",
          "type": "boolean"
        },
        "ignoreFirstIntervals": {
          "description": "IgnoreFirstIntervals instructs to ignore first interval",
          "type": "integer",
          "format": "int32"
        },
        "ignoreFirstSampleInterval": {
          "description": "IgnoreFirstSampleInterval sets interval for total and prometheus_total during which first samples will be ignored",
          "type": "string"
        },
        "ignoreOldSamples": {
          "description": "IgnoreOldSamples instructs to ignore samples with old timestamps outside the current aggregation interval.",
          "type": "boolean"
        },
        "keepInput": {
          "description": "Allows writing both raw and aggregate data",
          "type": "boolean"
        },
        "rules": {
          "description": "Stream aggregation rules",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.StreamAggrRule"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.StreamAggrRule": {
      "description": "StreamAggrRule defines the rule in stream aggregation config",
      "type": "object",
      "required": [
        "interval",
        "outputs"
      ],
      "properties": {
        "by": {
          "description": "By is an optional list of labels for grouping input series.\n\nSee also Without.\n\nIf neither By nor Without are set, then the Outputs are calculated individually per each input time series.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "dedup_interval": {
          "description": "DedupInterval is an optional interval for deduplication.",
          "type": "string"
        },
        "drop_input_labels": {
          "description": "DropInputLabels is an optional list with labels, which must be dropped before further processing of input samples.\n\nLabels are dropped before de-duplication and aggregation.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "enable_windows": {
          "description": "EnableWindows enables aggregating data in separate windows",
          "type": "boolean"
        },
        "flush_on_shutdown": {
          "description": "FlushOnShutdown defines whether to flush the aggregation state on process termination or config reload. Is `false` by default. It is not recommended changing this setting, unless unfinished aggregations states are preferred to missing data points.",
          "type": "boolean"
        },
        "ignoreFirstSampleInterval": {
          "description": "IgnoreFirstSampleInterval sets interval for total and prometheus_total during which first samples will be ignored",
          "type": "string"
        },
        "ignore_first_intervals": {
          "type": "integer",
          "format": "int32"
        },
        "ignore_old_samples": {
          "description": "IgnoreOldSamples instructs to ignore samples with old timestamps outside the current aggregation interval.",
          "type": "boolean"
        },
        "input_relabel_configs": {
          "description": "InputRelabelConfigs is an optional relabeling rules, which are applied on the input before aggregation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
          }
        },
        "interval": {
          "description": "Interval is the interval between aggregations.",
          "type": "string",
          "default": ""
        },
        "keep_metric_names": {
          "description": "KeepMetricNames instructs to leave metric names as is for the output time series without adding any suffix.",
          "type": "boolean"
        },
        "match": {
          "description": "Match is a label selector (or list of label selectors) for filtering time series for the given selector.\n\nIf the match isn't set, then all the input time series are processed.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "no_align_flush_to_interval": {
          "description": "NoAlignFlushToInterval disables aligning of flushes to multiples of Interval. By default flushes are aligned to Interval.",
          "type": "boolean"
        },
        "output_relabel_configs": {
          "description": "OutputRelabelConfigs is an optional relabeling rules, which are applied on the aggregated output before being sent to remote storage.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
          }
        },
        "outputs": {
          "description": "Outputs is a list of output aggregate functions to produce.\n\nThe following names are allowed:\n\n- total - aggregates input counters - increase - counts the increase over input counters - count_series - counts the input series - count_samples - counts the input samples - sum_samples - sums the input samples - last - the last biggest sample value - min - the minimum sample value - max - the maximum sample value - avg - the average value across all the samples - stddev - standard deviation across all the samples - stdvar - standard variance across all the samples - histogram_bucket - creates VictoriaMetrics histogram for input samples - quantiles(phi1, ..., phiN) - quantiles' estimation for phi in the range [0..1]\n\nThe output time series will have the following names:\n\n  input_name:aggr_<interval>_<output>",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "staleness_interval": {
          "description": "Staleness interval is interval after which the series state will be reset if no samples have been sent during it. The parameter is only relevant for outputs: total, total_prometheus, increase, increase_prometheus and histogram_bucket.",
          "type": "string"
        },
        "without": {
          "description": "Without is an optional list of labels, which must be excluded when grouping input series.\n\nSee also By.\n\nIf neither By nor Without are set, then the Outputs are calculated individually per each input time series.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.TLSClientConfig": {
      "description": "TLSClientConfig defines TLS configuration for the application's client",
      "type": "object",
      "properties": {
        "ca_file": {
          "description": "CAFile defines path to the pre-mounted file with CA mutually exclusive with CASecretRef",
          "type": "string"
        },
        "ca_secret_ref": {
          "description": "CA defines reference for secret with CA content under given key mutually exclusive with CAFile",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "cert_file": {
          "description": "CertFile defines path to the pre-mounted file with certificate mutually exclusive with CertSecretRef",
          "type": "string"
        },
        "cert_secret_ref": {
          "description": "CertSecretRef defines reference for secret with certificate content under given key mutually exclusive with CertFile",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "insecure_skip_verify": {
          "description": "Cert defines reference for secret with CA content under given key mutually exclusive with CertFile",
          "type": "boolean"
        },
        "key_file": {
          "description": "KeyFile defines path to the pre-mounted file with certificate key mutually exclusive with KeySecretRef",
          "type": "string"
        },
        "key_secret_ref": {
          "description": "Key defines reference for secret with certificate key content under given key mutually exclusive with KeyFile",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "server_name": {
          "description": "ServerName indicates a name of a server",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.TLSConfig": {
      "description": "TLSConfig specifies TLSConfig configuration parameters.",
      "type": "object",
      "properties": {
        "ca": {
          "description": "Struct containing the CA cert to use for the targets.",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SecretOrConfigMap"
        },
        "caFile": {
          "description": "Path to the CA cert in the container to use for the targets.",
          "type": "string"
        },
        "cert": {
          "description": "Struct containing the client cert file for the targets.",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SecretOrConfigMap"
        },
        "certFile": {
          "description": "Path to the client cert file in the container for the targets.",
          "type": "string"
        },
        "insecureSkipVerify": {
          "description": "Disable target certificate validation.",
          "type": "boolean"
        },
        "keyFile": {
          "description": "Path to the client key file in the container for the targets.",
          "type": "string"
        },
        "keySecret": {
          "description": "Secret containing the client key file for the targets.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "serverName": {
          "description": "Used to verify the hostname for the targets.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.TLSServerConfig": {
      "description": "TLSServerConfig defines TLS configuration for the application's server",
      "type": "object",
      "properties": {
        "cert_file": {
          "description": "CertFile defines path to the pre-mounted file with certificate mutually exclusive with CertSecretRef",
          "type": "string"
        },
        "cert_secret_ref": {
          "description": "CertSecretRef defines reference for secret with certificate content under given key mutually exclusive with CertFile",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "cipher_suites": {
          "description": "CipherSuites defines list of supported cipher suites for TLS versions up to TLS 1.2 https://golang.org/pkg/crypto/tls/#pkg-constants",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "client_auth_type": {
          "description": "Cert defines reference for secret with CA content under given key mutually exclusive with CertFile ClientAuthType defines server policy for client authentication If you want to enable client authentication (aka mTLS), you need to use RequireAndVerifyClientCert Note, mTLS is supported only at enterprise version of VictoriaMetrics components",
          "type": "string"
        },
        "client_ca_file": {
          "description": "ClientCAFile defines path to the pre-mounted file with CA mutually exclusive with ClientCASecretRef",
          "type": "string"
        },
        "client_ca_secret_ref": {
          "description": "ClientCASecretRef defines reference for secret with CA content under given key mutually exclusive with ClientCAFile",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "curve_preferences": {
          "description": "CurvePreferences defines elliptic curves that will be used in an ECDHE handshake, in preference order. https://golang.org/pkg/crypto/tls/#CurveID",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "key_file": {
          "description": "KeyFile defines path to the pre-mounted file with certificate key mutually exclusive with KeySecretRef",
          "type": "string"
        },
        "key_secret_ref": {
          "description": "Key defines reference for secret with certificate key content under given key mutually exclusive with KeyFile",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "max_version": {
          "description": "MaxVersion maximum TLS version that is acceptable.",
          "type": "string"
        },
        "min_version": {
          "description": "MinVersion minimum TLS version that is acceptable.",
          "type": "string"
        },
        "prefer_server_cipher_suites": {
          "description": "PreferServerCipherSuites controls whether the server selects the client's most preferred ciphersuite",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.TargetEndpoint": {
      "description": "TargetEndpoint defines single static target endpoint.",
      "type": "object",
      "required": [
        "targets"
      ],
      "properties": {
        "authorization": {
          "description": "Authorization with http header Authorization",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Authorization"
        },
        "basicAuth": {
          "description": "BasicAuth allow an endpoint to authenticate over basic authentication",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.BasicAuth"
        },
        "bearerTokenFile": {
          "description": "File to read bearer token for scraping targets.",
          "type": "string"
        },
        "bearerTokenSecret": {
          "description": "Secret to mount to read bearer token for scraping targets. The secret needs to be in the same namespace as the scrape object and accessible by the victoria-metrics operator.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "follow_redirects": {
          "description": "FollowRedirects controls redirects for scraping.",
          "type": "boolean"
        },
        "honorLabels": {
          "description": "HonorLabels chooses the metric's labels on collisions with target labels.",
          "type": "boolean"
        },
        "honorTimestamps": {
          "description": "HonorTimestamps controls whether vmagent respects the timestamps present in scraped data.",
          "type": "boolean"
        },
        "interval": {
          "description": "Interval at which metrics should be scraped",
          "type": "string"
        },
        "labels": {
          "description": "Labels static labels for targets.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "max_scrape_size": {
          "description": "MaxScrapeSize defines a maximum size of scraped data for a job",
          "type": "string"
        },
        "metricRelabelConfigs": {
          "description": "MetricRelabelConfigs to apply to samples after scrapping.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
          }
        },
        "oauth2": {
          "description": "OAuth2 defines auth configuration",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.OAuth2"
        },
        "params": {
          "description": "Optional HTTP URL parameters",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            }
          }
        },
        "path": {
          "description": "HTTP path to scrape for metrics.",
          "type": "string"
        },
        "proxyURL": {
          "description": "ProxyURL eg http://proxyserver:2195 Directs scrapes to proxy through this endpoint.",
          "type": "string"
        },
        "relabelConfigs": {
          "description": "RelabelConfigs to apply to samples during service discovery.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
          }
        },
        "sampleLimit": {
          "description": "SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.",
          "type": "integer",
          "format": "int64"
        },
        "scheme": {
          "description": "HTTP scheme to use for scraping.",
          "type": "string"
        },
        "scrapeTimeout": {
          "description": "Timeout after which the scrape is ended",
          "type": "string"
        },
        "scrape_interval": {
          "description": "ScrapeInterval is the same as Interval and has priority over it. one of scrape_interval or interval can be used",
          "type": "string"
        },
        "seriesLimit": {
          "description": "SeriesLimit defines per-scrape limit on number of unique time series a single target can expose during all the scrapes on the time window of 24h.",
          "type": "integer",
          "format": "int64"
        },
        "targets": {
          "description": "Targets static targets addresses in form of [\"192.122.55.55:9100\",\"some-name:9100\"].",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "tlsConfig": {
          "description": "TLSConfig configuration to use when scraping the endpoint",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        },
        "vm_scrape_params": {
          "description": "VMScrapeParams defines VictoriaMetrics specific scrape parameters",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMScrapeParams"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.TargetRef": {
      "description": "TargetRef describes target for user traffic forwarding. one of target types can be chosen: crd or static per targetRef. user can define multiple targetRefs with different ref Types.",
      "type": "object",
      "properties": {
        "crd": {
          "description": "CRD describes exist operator's CRD object, operator generates access url based on CRD params.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.CRDRef"
        },
        "hosts": {
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "paths": {
          "description": "Paths - matched path to route.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "static": {
          "description": "Static - user defined url for traffic forward, for instance http://vmsingle:8428",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.StaticRef"
        },
        "targetRefBasicAuth": {
          "description": "TargetRefBasicAuth allow an target endpoint to authenticate over basic authentication",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TargetRefBasicAuth"
        },
        "target_path_suffix": {
          "description": "TargetPathSuffix allows to add some suffix to the target path It allows to hide tenant configuration from user with crd as ref. it also may contain any url encoded params.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.TargetRefBasicAuth": {
      "description": "TargetRefBasicAuth target basic authentication",
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "password": {
          "description": "The secret in the service scrape namespace that contains the password for authentication. It must be at them same namespace as CRD",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "username": {
          "description": "The secret in the service scrape namespace that contains the username for authentication. It must be at them same namespace as CRD",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.TelegramConfig": {
      "description": "TelegramConfig configures notification via telegram https://prometheus.io/docs/alerting/latest/configuration/#telegram_config",
      "type": "object",
      "required": [
        "bot_token",
        "chat_id"
      ],
      "properties": {
        "api_url": {
          "description": "APIUrl the Telegram API URL i.e. https://api.telegram.org.",
          "type": "string"
        },
        "bot_token": {
          "description": "BotToken token for the bot https://core.telegram.org/bots/api",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "chat_id": {
          "description": "ChatID is ID of the chat where to send the messages.",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "disable_notifications": {
          "description": "DisableNotifications",
          "type": "boolean"
        },
        "http_config": {
          "description": "HTTP client configuration.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.HTTPConfig"
        },
        "message": {
          "description": "Message is templated message",
          "type": "string"
        },
        "message_thread_id": {
          "description": "MessageThreadID defines ID of the message thread where to send the messages.",
          "type": "integer",
          "format": "int32"
        },
        "parse_mode": {
          "description": "ParseMode for telegram message, supported values are MarkdownV2, Markdown, Markdown and empty string for plain text.",
          "type": "string"
        },
        "send_resolved": {
          "description": "SendResolved controls notify about resolved alerts.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.TimeInterval": {
      "description": "TimeInterval defines intervals of time",
      "type": "object",
      "properties": {
        "days_of_month": {
          "description": "DayOfMonth defines list of numerical days in the month. Days begin at 1. Negative values are also accepted. for example, ['1:5', '-3:-1']",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "location": {
          "description": "Location in golang time location form, e.g. UTC",
          "type": "string"
        },
        "months": {
          "description": "Months  defines list of calendar months identified by a case-insensitive name (e.g. \u2018January\u2019) or numeric 1. For example, ['1:3', 'may:august', 'december']",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "times": {
          "description": "Times defines time range for mute",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TimeRange"
          }
        },
        "weekdays": {
          "description": "Weekdays defines list of days of the week, where the week begins on Sunday and ends on Saturday.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "years": {
          "description": "Years defines numerical list of years, ranges are accepted. For example, ['2020:2022', '2030']",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.TimeIntervals": {
      "description": "TimeIntervals for alerts",
      "type": "object",
      "required": [
        "name",
        "time_intervals"
      ],
      "properties": {
        "name": {
          "description": "Name of interval",
          "type": "string"
        },
        "time_intervals": {
          "description": "TimeIntervals interval configuration",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TimeInterval"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.TimeRange": {
      "description": "TimeRange  ranges inclusive of the starting time and exclusive of the end time",
      "type": "object",
      "required": [
        "start_time",
        "end_time"
      ],
      "properties": {
        "end_time": {
          "description": "EndTime for example HH:MM",
          "type": "string",
          "default": ""
        },
        "start_time": {
          "description": "StartTime for example  HH:MM",
          "type": "string",
          "default": ""
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.UnauthorizedAccessConfigURLMap": {
      "description": "UnauthorizedAccessConfigURLMap defines element of url_map routing configuration For UnauthorizedAccessConfig and VMAuthUnauthorizedUserAccessSpec.URLMap",
      "type": "object",
      "properties": {
        "src_hosts": {
          "description": "SrcHosts is an optional list of regular expressions, which must match the request hostname.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "src_paths": {
          "description": "SrcPaths is an optional list of regular expressions, which must match the request path.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "url_prefix": {
          "description": "UrlPrefix contains backend url prefixes for the proxied request url. URLPrefix defines prefix prefix for destination",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VLogs": {
      "description": "VLogs is fast, cost-effective and scalable logs database. VLogs is the Schema for the vlogs API",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VLogsSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VLogsStatus"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VLogsSpec": {
      "description": "VLogsSpec defines the desired state of VLogs VLogs is deprecated, migrate to the VLSingle",
      "type": "object",
      "required": [
        "retentionPeriod"
      ],
      "properties": {
        "affinity": {
          "description": "Affinity If specified, the pod's scheduling constraints.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "configMaps": {
          "description": "ConfigMaps is a list of ConfigMaps in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/configs/CONFIGMAP_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "containers": {
          "description": "Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "disableAutomountServiceAccountToken": {
          "description": "DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0). Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access. For example, vmagent and vm-config-reloader requires k8s API access. Operator creates volumes with name: \"kube-api-access\", which can be used as volumeMount for extraContainers if needed. And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.",
          "type": "boolean"
        },
        "disableSelfServiceScrape": {
          "description": "DisableSelfServiceScrape controls creation of VMServiceScrape by operator for the application. Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable",
          "type": "boolean"
        },
        "dnsConfig": {
          "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "description": "DNSPolicy sets DNS policy for the pod",
          "type": "string"
        },
        "extraArgs": {
          "description": "ExtraArgs that will be passed to the application container for example remoteWrite.tmpDataPath: /tmp",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "extraEnvs": {
          "description": "ExtraEnvs that will be passed to the application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "extraEnvsFrom": {
          "description": "ExtraEnvsFrom defines source of env variables for the application container could either be secret or configmap",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "futureRetention": {
          "description": "FutureRetention for the stored logs Log entries with timestamps bigger than now+futureRetention are rejected during data ingestion; see https://docs.victoriametrics.com/victorialogs/#retention",
          "type": "string"
        },
        "hostAliases": {
          "description": "HostAliases provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hostNetwork": {
          "description": "HostNetwork controls whether the pod may use the node network namespace",
          "type": "boolean"
        },
        "host_aliases": {
          "description": "HostAliasesUnderScore provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork. Has Priority over hostAliases field",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "image": {
          "description": "Image - docker image settings if no specified operator uses default version from operator config",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Image"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "initContainers": {
          "description": "InitContainers allows adding initContainers to the pod definition. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "livenessProbe": {
          "description": "LivenessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "logFormat": {
          "description": "LogFormat for VLogs to be configured with.",
          "type": "string"
        },
        "logIngestedRows": {
          "description": "Whether to log all the ingested log entries; this can be useful for debugging of data ingestion; see https://docs.victoriametrics.com/victorialogs/data-ingestion/",
          "type": "boolean"
        },
        "logLevel": {
          "description": "LogLevel for VictoriaLogs to be configured with.",
          "type": "string"
        },
        "logNewStreams": {
          "description": "LogNewStreams Whether to log creation of new streams; this can be useful for debugging of high cardinality issues with log streams; see https://docs.victoriametrics.com/victorialogs/keyconcepts/#stream-fields",
          "type": "boolean"
        },
        "managedMetadata": {
          "description": "ManagedMetadata defines metadata that will be added to the all objects created by operator for the given CustomResource",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ManagedObjectsMetadata"
        },
        "minReadySeconds": {
          "description": "MinReadySeconds defines a minimum number of seconds to wait before starting update next pod if previous in healthy state Has no effect for VLogs and VMSingle",
          "type": "integer",
          "format": "int32"
        },
        "nodeSelector": {
          "description": "NodeSelector Define which Nodes the Pods are scheduled on.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "paused": {
          "description": "Paused If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.",
          "type": "boolean"
        },
        "podMetadata": {
          "description": "PodMetadata configures Labels and Annotations which are propagated to the VLogs pods.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "port": {
          "description": "Port listen address",
          "type": "string"
        },
        "priorityClassName": {
          "description": "PriorityClassName class assigned to the Pods",
          "type": "string"
        },
        "readinessGates": {
          "description": "ReadinessGates defines pod readiness gates",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
          }
        },
        "readinessProbe": {
          "description": "ReadinessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "removePvcAfterDelete": {
          "description": "RemovePvcAfterDelete - if true, controller adds ownership to pvc and after VLogs object deletion - pvc will be garbage collected by controller manager",
          "type": "boolean"
        },
        "replicaCount": {
          "description": "ReplicaCount is the expected size of the Application.",
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "retentionPeriod": {
          "description": "RetentionPeriod for the stored logs",
          "type": "string",
          "default": ""
        },
        "revisionHistoryLimitCount": {
          "description": "The number of old ReplicaSets to retain to allow rollback in deployment or maximum number of revisions that will be maintained in the Deployment revision history. Has no effect at StatefulSets Defaults to 10.",
          "type": "integer",
          "format": "int32"
        },
        "runtimeClassName": {
          "description": "RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/",
          "type": "string"
        },
        "schedulerName": {
          "description": "SchedulerName - defines kubernetes scheduler name",
          "type": "string"
        },
        "secrets": {
          "description": "Secrets is a list of Secrets in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/secrets/SECRET_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SecurityContext"
        },
        "serviceAccountName": {
          "description": "ServiceAccountName is the name of the ServiceAccount to use to run the pods",
          "type": "string"
        },
        "serviceScrapeSpec": {
          "description": "ServiceScrapeSpec that will be added to vlogs VMServiceScrape spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMServiceScrapeSpec"
        },
        "serviceSpec": {
          "description": "ServiceSpec that will be added to vlogs service spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AdditionalServiceSpec"
        },
        "startupProbe": {
          "description": "StartupProbe that will be added to CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "storage": {
          "description": "Storage is the definition of how storage will be used by the VLogs by default it`s empty dir",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        },
        "storageDataPath": {
          "description": "StorageDataPath disables spec.storage option and overrides arg for victoria-logs binary --storageDataPath, its users responsibility to mount proper device into given path.",
          "type": "string"
        },
        "storageMetadata": {
          "description": "StorageMeta defines annotations and labels attached to PVC for given vlogs CR",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "terminationGracePeriodSeconds": {
          "description": "TerminationGracePeriodSeconds period for container graceful termination",
          "type": "integer",
          "format": "int64"
        },
        "tolerations": {
          "description": "Tolerations If specified, the pod's tolerations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          }
        },
        "topologySpreadConstraints": {
          "description": "TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
          }
        },
        "useDefaultResources": {
          "description": "UseDefaultResources controls resource settings By default, operator sets built-in resource requirements",
          "type": "boolean"
        },
        "useStrictSecurity": {
          "description": "UseStrictSecurity enables strict security mode for component it restricts disk writes access uses non-root user out of the box drops not needed security permissions",
          "type": "boolean"
        },
        "volumeMounts": {
          "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the Application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          }
        },
        "volumes": {
          "description": "Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition. Volumes specified will be appended to other volumes that are generated. / +optional",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VLogsStatus": {
      "description": "VLogsStatus defines the observed state of VLogs",
      "type": "object",
      "properties": {
        "observedGeneration": {
          "description": "ObservedGeneration defines current generation picked by operator for the reconcile",
          "type": "integer",
          "format": "int64"
        },
        "reason": {
          "description": "Reason defines human readable error reason",
          "type": "string"
        },
        "updateStatus": {
          "description": "UpdateStatus defines a status for update rollout",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMAgent": {
      "description": "VMAgent - is a tiny but brave agent, which helps you collect metrics from various sources and stores them in VictoriaMetrics or any other Prometheus-compatible storage system that supports the remote_write protocol.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMAgentSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMAgentStatus"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMAgentRemoteWriteSettings": {
      "description": "VMAgentRemoteWriteSettings - defines global settings for all remoteWrite urls.",
      "type": "object",
      "properties": {
        "flushInterval": {
          "description": "Interval for flushing the data to remote storage. (default 1s)",
          "type": "string"
        },
        "label": {
          "description": "Labels in the form 'name=value' to add to all the metrics before sending them. This overrides the label if it already exists.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "maxBlockSize": {
          "description": "The maximum size in bytes of unpacked request to send to remote storage",
          "type": "integer",
          "format": "int32"
        },
        "maxDiskUsagePerURL": {
          "description": "The maximum file-based buffer size in bytes at -remoteWrite.tmpDataPath",
          "type": "string"
        },
        "queues": {
          "description": "The number of concurrent queues",
          "type": "integer",
          "format": "int32"
        },
        "showURL": {
          "description": "Whether to show -remoteWrite.url in the exported metrics. It is hidden by default, since it can contain sensitive auth info",
          "type": "boolean"
        },
        "tmpDataPath": {
          "description": "Path to directory where temporary data for remote write component is stored (default vmagent-remotewrite-data)",
          "type": "string"
        },
        "useMultiTenantMode": {
          "description": "Configures vmagent accepting data via the same multitenant endpoints as vminsert at VictoriaMetrics cluster does, see [here](https://docs.victoriametrics.com/victoriametrics/vmagent/#multitenancy). it's global setting and affects all remote storage configurations",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMAgentRemoteWriteSpec": {
      "description": "VMAgentRemoteWriteSpec defines the remote storage configuration for VmAgent",
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "aws": {
          "description": "AWS describes params specific to AWS cloud",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AWS"
        },
        "basicAuth": {
          "description": "BasicAuth allow an endpoint to authenticate over basic authentication",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.BasicAuth"
        },
        "bearerTokenSecret": {
          "description": "Optional bearer auth token to use for -remoteWrite.url",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "forceVMProto": {
          "description": "ForceVMProto forces using VictoriaMetrics protocol for sending data to -remoteWrite.url",
          "type": "boolean"
        },
        "headers": {
          "description": "Headers allow configuring custom http headers Must be in form of semicolon separated header with value e.g. headerName: headerValue vmagent supports since 1.79.0 version",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "inlineUrlRelabelConfig": {
          "description": "InlineUrlRelabelConfig defines relabeling config for remoteWriteURL, it can be defined at crd spec.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
          }
        },
        "maxDiskUsage": {
          "description": "MaxDiskUsage defines the maximum file-based buffer size in bytes for the given remoteWrite It overrides global configuration defined at remoteWriteSettings.maxDiskUsagePerURL",
          "type": "string"
        },
        "oauth2": {
          "description": "OAuth2 defines auth configuration",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.OAuth2"
        },
        "proxyURL": {
          "description": "ProxyURL for -remoteWrite.url. Supported proxies: http, https, socks5. Example: socks5://proxy:1234",
          "type": "string"
        },
        "sendTimeout": {
          "description": "Timeout for sending a single block of data to -remoteWrite.url (default 1m0s)",
          "type": "string"
        },
        "streamAggrConfig": {
          "description": "StreamAggrConfig defines stream aggregation configuration for VMAgent for -remoteWrite.url",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.StreamAggrConfig"
        },
        "tlsConfig": {
          "description": "TLSConfig describes tls configuration for remote write target",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        },
        "url": {
          "description": "URL of the endpoint to send samples to.",
          "type": "string",
          "default": ""
        },
        "urlRelabelConfig": {
          "description": "ConfigMap with relabeling config which is applied to metrics before sending them to the corresponding -remoteWrite.url",
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMAgentSpec": {
      "description": "VMAgentSpec defines the desired state of VMAgent",
      "type": "object",
      "required": [
        "remoteWrite"
      ],
      "properties": {
        "aPIServerConfig": {
          "description": "APIServerConfig allows specifying a host and auth methods to access apiserver. If left empty, VMAgent is assumed to run inside of the cluster and will discover API servers automatically and use the pod's CA certificate and bearer token file at /var/run/secrets/kubernetes.io/serviceaccount/. aPIServerConfig is deprecated use apiServerConfig instead",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.APIServerConfig"
        },
        "additionalScrapeConfigs": {
          "description": "AdditionalScrapeConfigs As scrape configs are appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility to break upgrades of VMAgent. It is advised to review VMAgent release notes to ensure that no incompatible scrape configs are going to break VMAgent after the upgrade.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "affinity": {
          "description": "Affinity If specified, the pod's scheduling constraints.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "apiServerConfig": {
          "description": "APIServerConfig allows specifying a host and auth methods to access apiserver. If left empty, VMAgent is assumed to run inside of the cluster and will discover API servers automatically and use the pod's CA certificate and bearer token file at /var/run/secrets/kubernetes.io/serviceaccount/.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.APIServerConfig"
        },
        "arbitraryFSAccessThroughSMs": {
          "description": "ArbitraryFSAccessThroughSMs configures whether configuration based on EndpointAuth can access arbitrary files on the file system of the VMAgent container e.g. bearer token files, basic auth, tls certs",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ArbitraryFSAccessThroughSMsConfig"
        },
        "claimTemplates": {
          "description": "ClaimTemplates allows adding additional VolumeClaimTemplates for VMAgent in StatefulMode",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaim"
          }
        },
        "configMaps": {
          "description": "ConfigMaps is a list of ConfigMaps in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/configs/CONFIGMAP_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "configReloadAuthKeySecret": {
          "description": "ConfigReloadAuthKeySecret defines optional secret reference authKey for /-/reload API requests. Given secret reference will be added to the application and vm-config-reloader as volume available since v0.57.0 version",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "configReloaderExtraArgs": {
          "description": "ConfigReloaderExtraArgs that will be passed to  VMAuths config-reloader container for example resyncInterval: \"30s\"",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "configReloaderImageTag": {
          "description": "ConfigReloaderImageTag defines image:tag for config-reloader container",
          "type": "string"
        },
        "configReloaderResources": {
          "description": "ConfigReloaderResources config-reloader container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "containers": {
          "description": "Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "daemonSetMode": {
          "description": "DaemonSetMode enables DaemonSet deployment mode instead of Deployment. Supports only VMPodScrape (available from v0.55.0). Cannot be used with statefulMode",
          "type": "boolean"
        },
        "disableAutomountServiceAccountToken": {
          "description": "DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0). Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access. For example, vmagent and vm-config-reloader requires k8s API access. Operator creates volumes with name: \"kube-api-access\", which can be used as volumeMount for extraContainers if needed. And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.",
          "type": "boolean"
        },
        "disableSelfServiceScrape": {
          "description": "DisableSelfServiceScrape controls creation of VMServiceScrape by operator for the application. Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable",
          "type": "boolean"
        },
        "dnsConfig": {
          "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "description": "DNSPolicy sets DNS policy for the pod",
          "type": "string"
        },
        "enableKubernetesAPISelectors": {
          "description": "EnableKubernetesAPISelectors instructs vmagent to use CRD scrape objects spec.selectors for Kubernetes API list and watch requests. https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#list-and-watch-filtering It could be useful to reduce Kubernetes API server resource usage for serving less than 100 CRD scrape objects in total.",
          "type": "boolean"
        },
        "enforcedNamespaceLabel": {
          "description": "EnforcedNamespaceLabel enforces adding a namespace label of origin for each alert and metric that is user created. The label value will always be the namespace of the object that is being created.",
          "type": "string"
        },
        "externalLabels": {
          "description": "ExternalLabels The labels to add to any time series scraped by vmagent. it doesn't affect metrics ingested directly by push API's",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "extraArgs": {
          "description": "ExtraArgs that will be passed to the application container for example remoteWrite.tmpDataPath: /tmp",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "extraEnvs": {
          "description": "ExtraEnvs that will be passed to the application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "extraEnvsFrom": {
          "description": "ExtraEnvsFrom defines source of env variables for the application container could either be secret or configmap",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "globalScrapeMetricRelabelConfigs": {
          "description": "GlobalScrapeMetricRelabelConfigs is a global metric relabel configuration, which is applied to each scrape job.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
          }
        },
        "globalScrapeRelabelConfigs": {
          "description": "GlobalScrapeRelabelConfigs is a global relabel configuration, which is applied to each samples of each scrape job during service discovery.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
          }
        },
        "hostAliases": {
          "description": "HostAliases provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hostNetwork": {
          "description": "HostNetwork controls whether the pod may use the node network namespace",
          "type": "boolean"
        },
        "host_aliases": {
          "description": "HostAliasesUnderScore provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork. Has Priority over hostAliases field",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "ignoreNamespaceSelectors": {
          "description": "IgnoreNamespaceSelectors if set to true will ignore NamespaceSelector settings from scrape objects, and they will only discover endpoints within their current namespace.  Defaults to false.",
          "type": "boolean"
        },
        "image": {
          "description": "Image - docker image settings if no specified operator uses default version from operator config",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Image"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "ingestOnlyMode": {
          "description": "IngestOnlyMode switches vmagent into unmanaged mode it disables any config generation for scraping Currently it prevents vmagent from managing tls and auth options for remote write",
          "type": "boolean"
        },
        "initContainers": {
          "description": "InitContainers allows adding initContainers to the pod definition. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "inlineRelabelConfig": {
          "description": "InlineRelabelConfig - defines GlobalRelabelConfig for vmagent, can be defined directly at CRD.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
          }
        },
        "inlineScrapeConfig": {
          "description": "InlineScrapeConfig As scrape configs are appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility to break upgrades of VMAgent. It is advised to review VMAgent release notes to ensure that no incompatible scrape configs are going to break VMAgent after the upgrade. it should be defined as single yaml file. inlineScrapeConfig: |\n    - job_name: \"prometheus\"\n      static_configs:\n      - targets: [\"localhost:9090\"]",
          "type": "string"
        },
        "insertPorts": {
          "description": "InsertPorts - additional listen ports for data ingestion.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.InsertPorts"
        },
        "license": {
          "description": "License allows to configure license key to be used for enterprise features. Using license key is supported starting from VictoriaMetrics v1.94.0. See [here](https://docs.victoriametrics.com/victoriametrics/enterprise/)",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.License"
        },
        "livenessProbe": {
          "description": "LivenessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "logFormat": {
          "description": "LogFormat for VMAgent to be configured with.",
          "type": "string"
        },
        "logLevel": {
          "description": "LogLevel for VMAgent to be configured with. INFO, WARN, ERROR, FATAL, PANIC",
          "type": "string"
        },
        "managedMetadata": {
          "description": "ManagedMetadata defines metadata that will be added to the all objects created by operator for the given CustomResource",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ManagedObjectsMetadata"
        },
        "maxScrapeInterval": {
          "description": "MaxScrapeInterval allows limiting maximum scrape interval for VMServiceScrape, VMPodScrape and other scrapes If interval is higher than defined limit, `maxScrapeInterval` will be used.",
          "type": "string"
        },
        "minReadySeconds": {
          "description": "MinReadySeconds defines a minimum number of seconds to wait before starting update next pod if previous in healthy state Has no effect for VLogs and VMSingle",
          "type": "integer",
          "format": "int32"
        },
        "minScrapeInterval": {
          "description": "MinScrapeInterval allows limiting minimal scrape interval for VMServiceScrape, VMPodScrape and other scrapes If interval is lower than defined limit, `minScrapeInterval` will be used.",
          "type": "string"
        },
        "nodeScrapeNamespaceSelector": {
          "description": "NodeScrapeNamespaceSelector defines Namespaces to be selected for VMNodeScrape discovery. Works in combination with Selector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "nodeScrapeRelabelTemplate": {
          "description": "NodeScrapeRelabelTemplate defines relabel config, that will be added to each VMNodeScrape. it's useful for adding specific labels to all targets",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
          }
        },
        "nodeScrapeSelector": {
          "description": "NodeScrapeSelector defines VMNodeScrape to be selected for scraping. Works in combination with NamespaceSelector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "nodeSelector": {
          "description": "NodeSelector Define which Nodes the Pods are scheduled on.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "overrideHonorLabels": {
          "description": "OverrideHonorLabels if set to true overrides all user configured honor_labels. If HonorLabels is set in scrape objects  to true, this overrides honor_labels to false.",
          "type": "boolean"
        },
        "overrideHonorTimestamps": {
          "description": "OverrideHonorTimestamps allows to globally enforce honoring timestamps in all scrape configs.",
          "type": "boolean"
        },
        "paused": {
          "description": "Paused If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.",
          "type": "boolean"
        },
        "persistentVolumeClaimRetentionPolicy": {
          "description": "PersistentVolumeClaimRetentionPolicy allows configuration of PVC retention policy",
          "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy"
        },
        "podDisruptionBudget": {
          "description": "PodDisruptionBudget created by operator",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedPodDisruptionBudgetSpec"
        },
        "podMetadata": {
          "description": "PodMetadata configures Labels and Annotations which are propagated to the vmagent pods.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "podScrapeNamespaceSelector": {
          "description": "PodScrapeNamespaceSelector defines Namespaces to be selected for VMPodScrape discovery. Works in combination with Selector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "podScrapeRelabelTemplate": {
          "description": "PodScrapeRelabelTemplate defines relabel config, that will be added to each VMPodScrape. it's useful for adding specific labels to all targets",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
          }
        },
        "podScrapeSelector": {
          "description": "PodScrapeSelector defines PodScrapes to be selected for target discovery. Works in combination with NamespaceSelector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "port": {
          "description": "Port listen address",
          "type": "string"
        },
        "priorityClassName": {
          "description": "PriorityClassName class assigned to the Pods",
          "type": "string"
        },
        "probeNamespaceSelector": {
          "description": "ProbeNamespaceSelector defines Namespaces to be selected for VMProbe discovery. Works in combination with Selector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "probeScrapeRelabelTemplate": {
          "description": "ProbeScrapeRelabelTemplate defines relabel config, that will be added to each VMProbeScrape. it's useful for adding specific labels to all targets",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
          }
        },
        "probeSelector": {
          "description": "ProbeSelector defines VMProbe to be selected for target probing. Works in combination with NamespaceSelector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "readinessGates": {
          "description": "ReadinessGates defines pod readiness gates",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
          }
        },
        "readinessProbe": {
          "description": "ReadinessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "relabelConfig": {
          "description": "RelabelConfig ConfigMap with global relabel config -remoteWrite.relabelConfig This relabeling is applied to all the collected metrics before sending them to remote storage.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector"
        },
        "remoteWrite": {
          "description": "RemoteWrite list of victoria metrics /some other remote write system for vm it must looks like: http://victoria-metrics-single:8428/api/v1/write or for cluster different url https://docs.victoriametrics.com/victoriametrics/vmagent/#splitting-data-streams-among-multiple-systems",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMAgentRemoteWriteSpec"
          }
        },
        "remoteWriteSettings": {
          "description": "RemoteWriteSettings defines global settings for all remoteWrite urls.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMAgentRemoteWriteSettings"
        },
        "replicaCount": {
          "description": "ReplicaCount is the expected size of the Application.",
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "revisionHistoryLimitCount": {
          "description": "The number of old ReplicaSets to retain to allow rollback in deployment or maximum number of revisions that will be maintained in the Deployment revision history. Has no effect at StatefulSets Defaults to 10.",
          "type": "integer",
          "format": "int32"
        },
        "rollingUpdate": {
          "description": "RollingUpdate - overrides deployment update params.",
          "$ref": "#/definitions/io.k8s.api.apps.v1.RollingUpdateDeployment"
        },
        "runtimeClassName": {
          "description": "RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/",
          "type": "string"
        },
        "schedulerName": {
          "description": "SchedulerName - defines kubernetes scheduler name",
          "type": "string"
        },
        "scrapeConfigNamespaceSelector": {
          "description": "ScrapeConfigNamespaceSelector defines Namespaces to be selected for VMScrapeConfig discovery. Works in combination with Selector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "scrapeConfigRelabelTemplate": {
          "description": "ScrapeConfigRelabelTemplate defines relabel config, that will be added to each VMScrapeConfig. it's useful for adding specific labels to all targets",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
          }
        },
        "scrapeConfigSelector": {
          "description": "ScrapeConfigSelector defines VMScrapeConfig to be selected for target discovery. Works in combination with NamespaceSelector.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "scrapeInterval": {
          "description": "ScrapeInterval defines how often scrape targets by default",
          "type": "string"
        },
        "scrapeTimeout": {
          "description": "ScrapeTimeout defines global timeout for targets scrape",
          "type": "string"
        },
        "secrets": {
          "description": "Secrets is a list of Secrets in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/secrets/SECRET_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SecurityContext"
        },
        "selectAllByDefault": {
          "description": "SelectAllByDefault changes default behavior for empty CRD selectors, such ServiceScrapeSelector. with selectAllByDefault: true and empty serviceScrapeSelector and ServiceScrapeNamespaceSelector Operator selects all exist serviceScrapes with selectAllByDefault: false - selects nothing",
          "type": "boolean"
        },
        "serviceAccountName": {
          "description": "ServiceAccountName is the name of the ServiceAccount to use to run the pods",
          "type": "string"
        },
        "serviceScrapeNamespaceSelector": {
          "description": "ServiceScrapeNamespaceSelector Namespaces to be selected for VMServiceScrape discovery. Works in combination with Selector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "serviceScrapeRelabelTemplate": {
          "description": "ServiceScrapeRelabelTemplate defines relabel config, that will be added to each VMServiceScrape. it's useful for adding specific labels to all targets",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
          }
        },
        "serviceScrapeSelector": {
          "description": "ServiceScrapeSelector defines ServiceScrapes to be selected for target discovery. Works in combination with NamespaceSelector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "serviceScrapeSpec": {
          "description": "ServiceScrapeSpec that will be added to vmagent VMServiceScrape spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMServiceScrapeSpec"
        },
        "serviceSpec": {
          "description": "ServiceSpec that will be added to vmagent service spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AdditionalServiceSpec"
        },
        "shardCount": {
          "description": "ShardCount - numbers of shards of VMAgent in this case operator will use 1 deployment/sts per shard with replicas count according to spec.replicas, see [here](https://docs.victoriametrics.com/victoriametrics/vmagent/#scraping-big-number-of-targets)",
          "type": "integer",
          "format": "int32"
        },
        "startupProbe": {
          "description": "StartupProbe that will be added to CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "statefulMode": {
          "description": "StatefulMode enables StatefulSet for `VMAgent` instead of Deployment it allows using persistent storage for vmagent's persistentQueue",
          "type": "boolean"
        },
        "statefulRollingUpdateStrategy": {
          "description": "StatefulRollingUpdateStrategy allows configuration for strategyType set it to RollingUpdate for disabling operator statefulSet rollingUpdate",
          "type": "string"
        },
        "statefulStorage": {
          "description": "StatefulStorage configures storage for StatefulSet",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.StorageSpec"
        },
        "staticScrapeNamespaceSelector": {
          "description": "StaticScrapeNamespaceSelector defines Namespaces to be selected for VMStaticScrape discovery. Works in combination with NamespaceSelector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "staticScrapeRelabelTemplate": {
          "description": "StaticScrapeRelabelTemplate defines relabel config, that will be added to each VMStaticScrape. it's useful for adding specific labels to all targets",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
          }
        },
        "staticScrapeSelector": {
          "description": "StaticScrapeSelector defines VMStaticScrape to be selected for target discovery. Works in combination with NamespaceSelector. If both nil - match everything. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "streamAggrConfig": {
          "description": "StreamAggrConfig defines global stream aggregation configuration for VMAgent",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.StreamAggrConfig"
        },
        "terminationGracePeriodSeconds": {
          "description": "TerminationGracePeriodSeconds period for container graceful termination",
          "type": "integer",
          "format": "int64"
        },
        "tolerations": {
          "description": "Tolerations If specified, the pod's tolerations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          }
        },
        "topologySpreadConstraints": {
          "description": "TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
          }
        },
        "updateStrategy": {
          "description": "UpdateStrategy - overrides default update strategy. works only for deployments, statefulset always use OnDelete.",
          "type": "string"
        },
        "useDefaultResources": {
          "description": "UseDefaultResources controls resource settings By default, operator sets built-in resource requirements",
          "type": "boolean"
        },
        "useStrictSecurity": {
          "description": "UseStrictSecurity enables strict security mode for component it restricts disk writes access uses non-root user out of the box drops not needed security permissions",
          "type": "boolean"
        },
        "useVMConfigReloader": {
          "description": "UseVMConfigReloader replaces prometheus-like config-reloader with vm one. It uses secrets watch instead of file watch which greatly increases speed of config updates",
          "type": "boolean"
        },
        "vmAgentExternalLabelName": {
          "description": "VMAgentExternalLabelName Name of vmAgent external label used to denote vmAgent instance name. Defaults to the value of `prometheus`. External label will _not_ be added when value is set to empty string (`\"\"`).",
          "type": "string"
        },
        "volumeMounts": {
          "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the Application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          }
        },
        "volumes": {
          "description": "Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition. Volumes specified will be appended to other volumes that are generated. / +optional",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMAgentStatus": {
      "description": "VMAgentStatus defines the observed state of VMAgent",
      "type": "object",
      "properties": {
        "observedGeneration": {
          "description": "ObservedGeneration defines current generation picked by operator for the reconcile",
          "type": "integer",
          "format": "int64"
        },
        "reason": {
          "description": "Reason defines human readable error reason",
          "type": "string"
        },
        "replicas": {
          "description": "ReplicaCount Total number of pods targeted by this VMAgent",
          "type": "integer",
          "format": "int32"
        },
        "selector": {
          "description": "Selector string form of label value set for autoscaling",
          "type": "string"
        },
        "shards": {
          "description": "Shards represents total number of vmagent deployments with uniq scrape targets",
          "type": "integer",
          "format": "int32"
        },
        "updateStatus": {
          "description": "UpdateStatus defines a status for update rollout",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMAlert": {
      "description": "VMAlert  executes a list of given alerting or recording rules against configured address.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMAlertSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMAlertStatus"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMAlertDatasourceSpec": {
      "description": "VMAlertDatasourceSpec defines the remote storage configuration for VmAlert to read alerts from",
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "basicAuth": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.BasicAuth"
        },
        "bearerTokenFile": {
          "description": "Path to bearer token file",
          "type": "string"
        },
        "bearerTokenSecret": {
          "description": "Optional bearer auth token to use for -remoteWrite.url",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "headers": {
          "description": "Headers allow configuring custom http headers Must be in form of semicolon separated header with value e.g. headerName:headerValue vmalert supports it since 1.79.0 version",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "oauth2": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.OAuth2"
        },
        "tlsConfig": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        },
        "url": {
          "description": "Victoria Metrics or VMSelect url. Required parameter. E.g. http://127.0.0.1:8428",
          "type": "string",
          "default": ""
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMAlertNotifierSpec": {
      "description": "VMAlertNotifierSpec defines the notifier url for sending information about alerts",
      "type": "object",
      "properties": {
        "basicAuth": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.BasicAuth"
        },
        "bearerTokenFile": {
          "description": "Path to bearer token file",
          "type": "string"
        },
        "bearerTokenSecret": {
          "description": "Optional bearer auth token to use for -remoteWrite.url",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "headers": {
          "description": "Headers allow configuring custom http headers Must be in form of semicolon separated header with value e.g. headerName:headerValue vmalert supports it since 1.79.0 version",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "oauth2": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.OAuth2"
        },
        "selector": {
          "description": "Selector allows service discovery for alertmanager in this case all matched vmalertmanager replicas will be added into vmalert notifier.url as statefulset pod.fqdn",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.DiscoverySelector"
        },
        "tlsConfig": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        },
        "url": {
          "description": "AlertManager url.  E.g. http://127.0.0.1:9093",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMAlertRemoteReadSpec": {
      "description": "VMAlertRemoteReadSpec defines the remote storage configuration for VmAlert to read alerts from",
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "basicAuth": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.BasicAuth"
        },
        "bearerTokenFile": {
          "description": "Path to bearer token file",
          "type": "string"
        },
        "bearerTokenSecret": {
          "description": "Optional bearer auth token to use for -remoteWrite.url",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "headers": {
          "description": "Headers allow configuring custom http headers Must be in form of semicolon separated header with value e.g. headerName:headerValue vmalert supports it since 1.79.0 version",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "lookback": {
          "description": "Lookback defines how far to look into past for alerts timeseries. For example, if lookback=1h then range from now() to now()-1h will be scanned. (default 1h0m0s) Applied only to RemoteReadSpec",
          "type": "string"
        },
        "oauth2": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.OAuth2"
        },
        "tlsConfig": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        },
        "url": {
          "description": "URL of the endpoint to send samples to.",
          "type": "string",
          "default": ""
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMAlertRemoteWriteSpec": {
      "description": "VMAlertRemoteWriteSpec defines the remote storage configuration for VmAlert",
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "basicAuth": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.BasicAuth"
        },
        "bearerTokenFile": {
          "description": "Path to bearer token file",
          "type": "string"
        },
        "bearerTokenSecret": {
          "description": "Optional bearer auth token to use for -remoteWrite.url",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "concurrency": {
          "description": "Defines number of readers that concurrently write into remote storage (default 1)",
          "type": "integer",
          "format": "int32"
        },
        "flushInterval": {
          "description": "Defines interval of flushes to remote write endpoint (default 5s)",
          "type": "string"
        },
        "headers": {
          "description": "Headers allow configuring custom http headers Must be in form of semicolon separated header with value e.g. headerName:headerValue vmalert supports it since 1.79.0 version",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "maxBatchSize": {
          "description": "Defines defines max number of timeseries to be flushed at once (default 1000)",
          "type": "integer",
          "format": "int32"
        },
        "maxQueueSize": {
          "description": "Defines the max number of pending datapoints to remote write endpoint (default 100000)",
          "type": "integer",
          "format": "int32"
        },
        "oauth2": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.OAuth2"
        },
        "tlsConfig": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        },
        "url": {
          "description": "URL of the endpoint to send samples to.",
          "type": "string",
          "default": ""
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMAlertSpec": {
      "description": "VMAlertSpec defines the desired state of VMAlert",
      "type": "object",
      "required": [
        "datasource"
      ],
      "properties": {
        "affinity": {
          "description": "Affinity If specified, the pod's scheduling constraints.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "configMaps": {
          "description": "ConfigMaps is a list of ConfigMaps in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/configs/CONFIGMAP_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "configReloadAuthKeySecret": {
          "description": "ConfigReloadAuthKeySecret defines optional secret reference authKey for /-/reload API requests. Given secret reference will be added to the application and vm-config-reloader as volume available since v0.57.0 version",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "configReloaderExtraArgs": {
          "description": "ConfigReloaderExtraArgs that will be passed to  VMAuths config-reloader container for example resyncInterval: \"30s\"",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "configReloaderImageTag": {
          "description": "ConfigReloaderImageTag defines image:tag for config-reloader container",
          "type": "string"
        },
        "configReloaderResources": {
          "description": "ConfigReloaderResources config-reloader container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "containers": {
          "description": "Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "datasource": {
          "description": "Datasource Victoria Metrics or VMSelect url. Required parameter. e.g. http://127.0.0.1:8428",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMAlertDatasourceSpec"
        },
        "disableAutomountServiceAccountToken": {
          "description": "DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0). Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access. For example, vmagent and vm-config-reloader requires k8s API access. Operator creates volumes with name: \"kube-api-access\", which can be used as volumeMount for extraContainers if needed. And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.",
          "type": "boolean"
        },
        "disableSelfServiceScrape": {
          "description": "DisableSelfServiceScrape controls creation of VMServiceScrape by operator for the application. Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable",
          "type": "boolean"
        },
        "dnsConfig": {
          "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "description": "DNSPolicy sets DNS policy for the pod",
          "type": "string"
        },
        "enforcedNamespaceLabel": {
          "description": "EnforcedNamespaceLabel enforces adding a namespace label of origin for each alert and metric that is user created. The label value will always be the namespace of the object that is being created.",
          "type": "string"
        },
        "evaluationInterval": {
          "description": "EvaluationInterval defines how often to evaluate rules by default",
          "type": "string"
        },
        "externalLabels": {
          "description": "ExternalLabels in the form 'name: value' to add to all generated recording rules and alerts.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "extraArgs": {
          "description": "ExtraArgs that will be passed to the application container for example remoteWrite.tmpDataPath: /tmp",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "extraEnvs": {
          "description": "ExtraEnvs that will be passed to the application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "extraEnvsFrom": {
          "description": "ExtraEnvsFrom defines source of env variables for the application container could either be secret or configmap",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "hostAliases": {
          "description": "HostAliases provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hostNetwork": {
          "description": "HostNetwork controls whether the pod may use the node network namespace",
          "type": "boolean"
        },
        "host_aliases": {
          "description": "HostAliasesUnderScore provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork. Has Priority over hostAliases field",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "image": {
          "description": "Image - docker image settings if no specified operator uses default version from operator config",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Image"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "initContainers": {
          "description": "InitContainers allows adding initContainers to the pod definition. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "license": {
          "description": "License allows to configure license key to be used for enterprise features. Using license key is supported starting from VictoriaMetrics v1.94.0. See [here](https://docs.victoriametrics.com/victoriametrics/enterprise/)",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.License"
        },
        "livenessProbe": {
          "description": "LivenessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "logFormat": {
          "description": "LogFormat for VMAlert to be configured with. default or json",
          "type": "string"
        },
        "logLevel": {
          "description": "LogLevel for VMAlert to be configured with.",
          "type": "string"
        },
        "managedMetadata": {
          "description": "ManagedMetadata defines metadata that will be added to the all objects created by operator for the given CustomResource",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ManagedObjectsMetadata"
        },
        "minReadySeconds": {
          "description": "MinReadySeconds defines a minimum number of seconds to wait before starting update next pod if previous in healthy state Has no effect for VLogs and VMSingle",
          "type": "integer",
          "format": "int32"
        },
        "nodeSelector": {
          "description": "NodeSelector Define which Nodes the Pods are scheduled on.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "notifier": {
          "description": "Notifier prometheus alertmanager endpoint spec. Required at least one of notifier or notifiers when there are alerting rules. e.g. http://127.0.0.1:9093 If specified both notifier and notifiers, notifier will be added as last element to notifiers. only one of notifier options could be chosen: notifierConfigRef or notifiers +  notifier",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMAlertNotifierSpec"
        },
        "notifierConfigRef": {
          "description": "NotifierConfigRef reference for secret with notifier configuration for vmalert only one of notifier options could be chosen: notifierConfigRef or notifiers +  notifier",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "notifiers": {
          "description": "Notifiers prometheus alertmanager endpoints. Required at least one of notifier or notifiers when there are alerting rules. e.g. http://127.0.0.1:9093 If specified both notifier and notifiers, notifier will be added as last element to notifiers. only one of notifier options could be chosen: notifierConfigRef or notifiers +  notifier",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMAlertNotifierSpec"
          }
        },
        "paused": {
          "description": "Paused If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.",
          "type": "boolean"
        },
        "podDisruptionBudget": {
          "description": "PodDisruptionBudget created by operator",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedPodDisruptionBudgetSpec"
        },
        "podMetadata": {
          "description": "PodMetadata configures Labels and Annotations which are propagated to the VMAlert pods.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "port": {
          "description": "Port listen address",
          "type": "string"
        },
        "priorityClassName": {
          "description": "PriorityClassName class assigned to the Pods",
          "type": "string"
        },
        "readinessGates": {
          "description": "ReadinessGates defines pod readiness gates",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
          }
        },
        "readinessProbe": {
          "description": "ReadinessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "remoteRead": {
          "description": "RemoteRead Optional URL to read vmalert state (persisted via RemoteWrite) This configuration only makes sense if alerts state has been successfully persisted (via RemoteWrite) before. see -remoteRead.url docs in vmalerts for details. E.g. http://127.0.0.1:8428",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMAlertRemoteReadSpec"
        },
        "remoteWrite": {
          "description": "RemoteWrite Optional URL to remote-write compatible storage to persist vmalert state and rule results to. Rule results will be persisted according to each rule. Alerts state will be persisted in the form of time series named ALERTS and ALERTS_FOR_STATE see -remoteWrite.url docs in vmalerts for details. E.g. http://127.0.0.1:8428",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMAlertRemoteWriteSpec"
        },
        "replicaCount": {
          "description": "ReplicaCount is the expected size of the Application.",
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "revisionHistoryLimitCount": {
          "description": "The number of old ReplicaSets to retain to allow rollback in deployment or maximum number of revisions that will be maintained in the Deployment revision history. Has no effect at StatefulSets Defaults to 10.",
          "type": "integer",
          "format": "int32"
        },
        "rollingUpdate": {
          "description": "RollingUpdate - overrides deployment update params.",
          "$ref": "#/definitions/io.k8s.api.apps.v1.RollingUpdateDeployment"
        },
        "ruleNamespaceSelector": {
          "description": "RuleNamespaceSelector to be selected for VMRules discovery. Works in combination with Selector. If both nil - behaviour controlled by selectAllByDefault NamespaceSelector nil - only objects at VMAlert namespace.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "rulePath": {
          "description": "RulePath to the file with alert rules. Supports patterns. Flag can be specified multiple times. Examples: -rule /path/to/file. Path to a single file with alerting rules -rule dir/*.yaml -rule /*.yaml. Relative path to all .yaml files in folder, absolute path to all .yaml files in root. by default operator adds /etc/vmalert/configs/base/vmalert.yaml",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "ruleSelector": {
          "description": "RuleSelector selector to select which VMRules to mount for loading alerting rules from. Works in combination with NamespaceSelector. If both nil - behaviour controlled by selectAllByDefault NamespaceSelector nil - only objects at VMAlert namespace.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "runtimeClassName": {
          "description": "RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/",
          "type": "string"
        },
        "schedulerName": {
          "description": "SchedulerName - defines kubernetes scheduler name",
          "type": "string"
        },
        "secrets": {
          "description": "Secrets is a list of Secrets in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/secrets/SECRET_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SecurityContext"
        },
        "selectAllByDefault": {
          "description": "SelectAllByDefault changes default behavior for empty CRD selectors, such RuleSelector. with selectAllByDefault: true and empty serviceScrapeSelector and RuleNamespaceSelector Operator selects all exist serviceScrapes with selectAllByDefault: false - selects nothing",
          "type": "boolean"
        },
        "serviceAccountName": {
          "description": "ServiceAccountName is the name of the ServiceAccount to use to run the pods",
          "type": "string"
        },
        "serviceScrapeSpec": {
          "description": "ServiceScrapeSpec that will be added to vmalert VMServiceScrape spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMServiceScrapeSpec"
        },
        "serviceSpec": {
          "description": "ServiceSpec that will be added to vmalert service spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AdditionalServiceSpec"
        },
        "startupProbe": {
          "description": "StartupProbe that will be added to CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "terminationGracePeriodSeconds": {
          "description": "TerminationGracePeriodSeconds period for container graceful termination",
          "type": "integer",
          "format": "int64"
        },
        "tolerations": {
          "description": "Tolerations If specified, the pod's tolerations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          }
        },
        "topologySpreadConstraints": {
          "description": "TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
          }
        },
        "updateStrategy": {
          "description": "UpdateStrategy - overrides default update strategy.",
          "type": "string"
        },
        "useDefaultResources": {
          "description": "UseDefaultResources controls resource settings By default, operator sets built-in resource requirements",
          "type": "boolean"
        },
        "useStrictSecurity": {
          "description": "UseStrictSecurity enables strict security mode for component it restricts disk writes access uses non-root user out of the box drops not needed security permissions",
          "type": "boolean"
        },
        "useVMConfigReloader": {
          "description": "UseVMConfigReloader replaces prometheus-like config-reloader with vm one. It uses secrets watch instead of file watch which greatly increases speed of config updates",
          "type": "boolean"
        },
        "volumeMounts": {
          "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the Application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          }
        },
        "volumes": {
          "description": "Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition. Volumes specified will be appended to other volumes that are generated. / +optional",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMAlertStatus": {
      "description": "VMAlertStatus defines the observed state of VMAlert",
      "type": "object",
      "properties": {
        "observedGeneration": {
          "description": "ObservedGeneration defines current generation picked by operator for the reconcile",
          "type": "integer",
          "format": "int64"
        },
        "reason": {
          "description": "Reason defines human readable error reason",
          "type": "string"
        },
        "updateStatus": {
          "description": "UpdateStatus defines a status for update rollout",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMAlertmanager": {
      "description": "VMAlertmanager represents Victoria-Metrics deployment for Alertmanager.",
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Specification of the desired behavior of the VMAlertmanager cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMAlertmanagerSpec"
        },
        "status": {
          "description": "Most recent observed status of the VMAlertmanager cluster. Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMAlertmanagerStatus"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMAlertmanagerConfig": {
      "description": "VMAlertmanagerConfig is the Schema for the vmalertmanagerconfigs API",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMAlertmanagerConfigSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMAlertmanagerConfigStatus"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMAlertmanagerConfigSpec": {
      "description": "VMAlertmanagerConfigSpec defines configuration for VMAlertmanagerConfig it must reference only locally defined objects",
      "type": "object",
      "required": [
        "route",
        "receivers"
      ],
      "properties": {
        "inhibit_rules": {
          "description": "InhibitRules will only apply for alerts matching the resource's namespace.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.InhibitRule"
          }
        },
        "receivers": {
          "description": "Receivers defines alert receivers",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Receiver"
          }
        },
        "route": {
          "description": "Route definition for alertmanager, may include nested routes.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Route"
        },
        "time_intervals": {
          "description": "TimeIntervals defines named interval for active/mute notifications interval See https://prometheus.io/docs/alerting/latest/configuration/#time_interval",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TimeIntervals"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMAlertmanagerConfigStatus": {
      "description": "VMAlertmanagerConfigStatus defines the observed state of VMAlertmanagerConfig",
      "type": "object",
      "properties": {
        "lastErrorParentAlertmanagerName": {
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration defines current generation picked by operator for the reconcile",
          "type": "integer",
          "format": "int64"
        },
        "reason": {
          "description": "Reason defines human readable error reason",
          "type": "string"
        },
        "updateStatus": {
          "description": "UpdateStatus defines a status for update rollout",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMAlertmanagerSpec": {
      "description": "VMAlertmanagerSpec is a specification of the desired behavior of the VMAlertmanager cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
      "type": "object",
      "properties": {
        "additionalPeers": {
          "description": "AdditionalPeers allows injecting a set of additional Alertmanagers to peer with to form a highly available cluster.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "affinity": {
          "description": "Affinity If specified, the pod's scheduling constraints.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "claimTemplates": {
          "description": "ClaimTemplates allows adding additional VolumeClaimTemplates for StatefulSet",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaim"
          }
        },
        "clusterAdvertiseAddress": {
          "description": "ClusterAdvertiseAddress is the explicit address to advertise in cluster. Needs to be provided for non RFC1918 [1] (public) addresses. [1] RFC1918: https://tools.ietf.org/html/rfc1918",
          "type": "string"
        },
        "clusterDomainName": {
          "description": "ClusterDomainName defines domain name suffix for in-cluster dns addresses aka .cluster.local used to build pod peer addresses for in-cluster communication",
          "type": "string"
        },
        "configMaps": {
          "description": "ConfigMaps is a list of ConfigMaps in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/configs/CONFIGMAP_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "configNamespaceSelector": {
          "description": "ConfigNamespaceSelector defines namespace selector for VMAlertmanagerConfig.\nWorks in combination with Selector. NamespaceSelector nil - only objects at VMAlertmanager namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "configRawYaml": {
          "description": "ConfigRawYaml - raw configuration for alertmanager, it helps it to start without secret. priority -> hardcoded ConfigRaw -> ConfigRaw, provided by user -> ConfigSecret.",
          "type": "string"
        },
        "configReloadAuthKeySecret": {
          "description": "ConfigReloadAuthKeySecret defines optional secret reference authKey for /-/reload API requests. Given secret reference will be added to the application and vm-config-reloader as volume available since v0.57.0 version",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "configReloaderExtraArgs": {
          "description": "ConfigReloaderExtraArgs that will be passed to  VMAuths config-reloader container for example resyncInterval: \"30s\"",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "configReloaderImageTag": {
          "description": "ConfigReloaderImageTag defines image:tag for config-reloader container",
          "type": "string"
        },
        "configReloaderResources": {
          "description": "ConfigReloaderResources config-reloader container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "configSecret": {
          "description": "ConfigSecret is the name of a Kubernetes Secret in the same namespace as the VMAlertmanager object, which contains configuration for this VMAlertmanager, configuration must be inside secret key: alertmanager.yaml. It must be created by user. instance. Defaults to 'vmalertmanager-<alertmanager-name>' The secret is mounted into /etc/alertmanager/config.",
          "type": "string"
        },
        "configSelector": {
          "description": "ConfigSelector defines selector for VMAlertmanagerConfig, result config will be merged with with Raw or Secret config. Works in combination with NamespaceSelector. NamespaceSelector nil - only objects at VMAlertmanager namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "containers": {
          "description": "Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "disableAutomountServiceAccountToken": {
          "description": "DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0). Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access. For example, vmagent and vm-config-reloader requires k8s API access. Operator creates volumes with name: \"kube-api-access\", which can be used as volumeMount for extraContainers if needed. And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.",
          "type": "boolean"
        },
        "disableNamespaceMatcher": {
          "description": "DisableNamespaceMatcher disables adding top route label matcher \"namespace = <VMAlertmanagerConfig.namespace>\" for VMAlertmanagerConfig It may be useful if alert doesn't have namespace label for some reason",
          "type": "boolean"
        },
        "disableRouteContinueEnforce": {
          "description": "DisableRouteContinueEnforce cancel the behavior for VMAlertmanagerConfig that always enforce first-level route continue to true",
          "type": "boolean"
        },
        "disableSelfServiceScrape": {
          "description": "DisableSelfServiceScrape controls creation of VMServiceScrape by operator for the application. Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable",
          "type": "boolean"
        },
        "dnsConfig": {
          "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "description": "DNSPolicy sets DNS policy for the pod",
          "type": "string"
        },
        "enforcedNamespaceLabel": {
          "description": "EnforcedNamespaceLabel defines the namespace label key for top route matcher for VMAlertmanagerConfig Default is \"namespace\"",
          "type": "string"
        },
        "enforcedTopRouteMatchers": {
          "description": "EnforcedTopRouteMatchers defines label matchers to be added for the top route of VMAlertmanagerConfig It allows to make some set of labels required for alerts. https://prometheus.io/docs/alerting/latest/configuration/#matcher",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "externalURL": {
          "description": "ExternalURL the VMAlertmanager instances will be available under. This is necessary to generate correct URLs. This is necessary if VMAlertmanager is not served from root of a DNS name.",
          "type": "string"
        },
        "extraArgs": {
          "description": "ExtraArgs that will be passed to the application container for example remoteWrite.tmpDataPath: /tmp",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "extraEnvs": {
          "description": "ExtraEnvs that will be passed to the application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "extraEnvsFrom": {
          "description": "ExtraEnvsFrom defines source of env variables for the application container could either be secret or configmap",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "gossipConfig": {
          "description": "GossipConfig defines gossip TLS configuration for Alertmanager cluster",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AlertmanagerGossipConfig"
        },
        "hostAliases": {
          "description": "HostAliases provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hostNetwork": {
          "description": "HostNetwork controls whether the pod may use the node network namespace",
          "type": "boolean"
        },
        "host_aliases": {
          "description": "HostAliasesUnderScore provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork. Has Priority over hostAliases field",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "image": {
          "description": "Image - docker image settings if no specified operator uses default version from operator config",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Image"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "initContainers": {
          "description": "InitContainers allows adding initContainers to the pod definition. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "listenLocal": {
          "description": "ListenLocal makes the VMAlertmanager server listen on loopback, so that it does not bind against the Pod IP. Note this is only for the VMAlertmanager UI, not the gossip communication.",
          "type": "boolean"
        },
        "livenessProbe": {
          "description": "LivenessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "logFormat": {
          "description": "LogFormat for VMAlertmanager to be configured with.",
          "type": "string"
        },
        "logLevel": {
          "description": "Log level for VMAlertmanager to be configured with.",
          "type": "string"
        },
        "managedMetadata": {
          "description": "ManagedMetadata defines metadata that will be added to the all objects created by operator for the given CustomResource",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ManagedObjectsMetadata"
        },
        "minReadySeconds": {
          "description": "MinReadySeconds defines a minimum number of seconds to wait before starting update next pod if previous in healthy state Has no effect for VLogs and VMSingle",
          "type": "integer",
          "format": "int32"
        },
        "nodeSelector": {
          "description": "NodeSelector Define which Nodes the Pods are scheduled on.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "paused": {
          "description": "Paused If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.",
          "type": "boolean"
        },
        "persistentVolumeClaimRetentionPolicy": {
          "description": "PersistentVolumeClaimRetentionPolicy allows configuration of PVC retention policy",
          "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy"
        },
        "podDisruptionBudget": {
          "description": "PodDisruptionBudget created by operator",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedPodDisruptionBudgetSpec"
        },
        "podMetadata": {
          "description": "PodMetadata configures Labels and Annotations which are propagated to the alertmanager pods.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "port": {
          "description": "Port listen address",
          "type": "string"
        },
        "portName": {
          "description": "PortName used for the pods and governing service. This defaults to web",
          "type": "string"
        },
        "priorityClassName": {
          "description": "PriorityClassName class assigned to the Pods",
          "type": "string"
        },
        "readinessGates": {
          "description": "ReadinessGates defines pod readiness gates",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
          }
        },
        "readinessProbe": {
          "description": "ReadinessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "replicaCount": {
          "description": "ReplicaCount is the expected size of the Application.",
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "retention": {
          "description": "Retention Time duration VMAlertmanager shall retain data for. Default is '120h', and must match the regular expression `[0-9]+(ms|s|m|h)` (milliseconds seconds minutes hours).",
          "type": "string"
        },
        "revisionHistoryLimitCount": {
          "description": "The number of old ReplicaSets to retain to allow rollback in deployment or maximum number of revisions that will be maintained in the Deployment revision history. Has no effect at StatefulSets Defaults to 10.",
          "type": "integer",
          "format": "int32"
        },
        "rollingUpdateStrategy": {
          "description": "RollingUpdateStrategy defines strategy for application updates Default is OnDelete, in this case operator handles update process Can be changed for RollingUpdate",
          "type": "string"
        },
        "routePrefix": {
          "description": "RoutePrefix VMAlertmanager registers HTTP handlers for. This is useful, if using ExternalURL and a proxy is rewriting HTTP routes of a request, and the actual ExternalURL is still true, but the server serves requests under a different route prefix. For example for use with `kubectl proxy`.",
          "type": "string"
        },
        "runtimeClassName": {
          "description": "RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/",
          "type": "string"
        },
        "schedulerName": {
          "description": "SchedulerName - defines kubernetes scheduler name",
          "type": "string"
        },
        "secrets": {
          "description": "Secrets is a list of Secrets in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/secrets/SECRET_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SecurityContext"
        },
        "selectAllByDefault": {
          "description": "SelectAllByDefault changes default behavior for empty CRD selectors, such ConfigSelector. with selectAllByDefault: true and undefined ConfigSelector and ConfigNamespaceSelector Operator selects all exist alertManagerConfigs with selectAllByDefault: false - selects nothing",
          "type": "boolean"
        },
        "serviceAccountName": {
          "description": "ServiceAccountName is the name of the ServiceAccount to use to run the pods",
          "type": "string"
        },
        "serviceScrapeSpec": {
          "description": "ServiceScrapeSpec that will be added to vmalertmanager VMServiceScrape spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMServiceScrapeSpec"
        },
        "serviceSpec": {
          "description": "ServiceSpec that will be added to vmalertmanager service spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AdditionalServiceSpec"
        },
        "startupProbe": {
          "description": "StartupProbe that will be added to CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "storage": {
          "description": "Storage is the definition of how storage will be used by the VMAlertmanager instances.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.StorageSpec"
        },
        "templates": {
          "description": "Templates is a list of ConfigMap key references for ConfigMaps in the same namespace as the VMAlertmanager object, which shall be mounted into the VMAlertmanager Pods. The Templates are mounted into /etc/vm/templates/<configmap-name>/<configmap-key>.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ConfigMapKeyReference"
          }
        },
        "terminationGracePeriodSeconds": {
          "description": "TerminationGracePeriodSeconds period for container graceful termination",
          "type": "integer",
          "format": "int64"
        },
        "tolerations": {
          "description": "Tolerations If specified, the pod's tolerations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          }
        },
        "topologySpreadConstraints": {
          "description": "TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
          }
        },
        "useDefaultResources": {
          "description": "UseDefaultResources controls resource settings By default, operator sets built-in resource requirements",
          "type": "boolean"
        },
        "useStrictSecurity": {
          "description": "UseStrictSecurity enables strict security mode for component it restricts disk writes access uses non-root user out of the box drops not needed security permissions",
          "type": "boolean"
        },
        "useVMConfigReloader": {
          "description": "UseVMConfigReloader replaces prometheus-like config-reloader with vm one. It uses secrets watch instead of file watch which greatly increases speed of config updates",
          "type": "boolean"
        },
        "volumeMounts": {
          "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the Application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          }
        },
        "volumes": {
          "description": "Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition. Volumes specified will be appended to other volumes that are generated. / +optional",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          }
        },
        "webConfig": {
          "description": "WebConfig defines configuration for webserver https://github.com/prometheus/alertmanager/blob/main/docs/https.md",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AlertmanagerWebConfig"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMAlertmanagerStatus": {
      "description": "VMAlertmanagerStatus is the most recent observed status of the VMAlertmanager cluster Operator API itself. More info:",
      "type": "object",
      "properties": {
        "observedGeneration": {
          "description": "ObservedGeneration defines current generation picked by operator for the reconcile",
          "type": "integer",
          "format": "int64"
        },
        "reason": {
          "description": "Reason defines human readable error reason",
          "type": "string"
        },
        "updateStatus": {
          "description": "UpdateStatus defines a status for update rollout",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMAuth": {
      "description": "VMAuth is the Schema for the vmauths API",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMAuthSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMAuthStatus"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMAuthLoadBalancer": {
      "description": "VMAuthLoadBalancer configures vmauth as a load balancer for the requests",
      "type": "object",
      "properties": {
        "disableInsertBalancing": {
          "type": "boolean"
        },
        "disableSelectBalancing": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMAuthLoadBalancerSpec"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMAuthLoadBalancerSpec": {
      "description": "VMAuthLoadBalancerSpec defines configuration spec for VMAuth used as load-balancer for VMCluster component",
      "type": "object",
      "properties": {
        "affinity": {
          "description": "Affinity If specified, the pod's scheduling constraints.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "configMaps": {
          "description": "ConfigMaps is a list of ConfigMaps in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/configs/CONFIGMAP_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "containers": {
          "description": "Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "disableAutomountServiceAccountToken": {
          "description": "DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0). Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access. For example, vmagent and vm-config-reloader requires k8s API access. Operator creates volumes with name: \"kube-api-access\", which can be used as volumeMount for extraContainers if needed. And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.",
          "type": "boolean"
        },
        "disableSelfServiceScrape": {
          "description": "DisableSelfServiceScrape controls creation of VMServiceScrape by operator for the application. Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable",
          "type": "boolean"
        },
        "dnsConfig": {
          "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "description": "DNSPolicy sets DNS policy for the pod",
          "type": "string"
        },
        "extraArgs": {
          "description": "ExtraArgs that will be passed to the application container for example remoteWrite.tmpDataPath: /tmp",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "extraEnvs": {
          "description": "ExtraEnvs that will be passed to the application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "extraEnvsFrom": {
          "description": "ExtraEnvsFrom defines source of env variables for the application container could either be secret or configmap",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "hostAliases": {
          "description": "HostAliases provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hostNetwork": {
          "description": "HostNetwork controls whether the pod may use the node network namespace",
          "type": "boolean"
        },
        "host_aliases": {
          "description": "HostAliasesUnderScore provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork. Has Priority over hostAliases field",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "image": {
          "description": "Image - docker image settings if no specified operator uses default version from operator config",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Image"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "initContainers": {
          "description": "InitContainers allows adding initContainers to the pod definition. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "livenessProbe": {
          "description": "LivenessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "logFormat": {
          "description": "LogFormat for vmauth default or json",
          "type": "string"
        },
        "logLevel": {
          "description": "LogLevel for vmauth container.",
          "type": "string"
        },
        "minReadySeconds": {
          "description": "MinReadySeconds defines a minimum number of seconds to wait before starting update next pod if previous in healthy state Has no effect for VLogs and VMSingle",
          "type": "integer",
          "format": "int32"
        },
        "nodeSelector": {
          "description": "NodeSelector Define which Nodes the Pods are scheduled on.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "paused": {
          "description": "Paused If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.",
          "type": "boolean"
        },
        "podDisruptionBudget": {
          "description": "PodDisruptionBudget created by operator",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedPodDisruptionBudgetSpec"
        },
        "podMetadata": {
          "description": "Common params for scheduling PodMetadata configures Labels and Annotations which are propagated to the vmauth lb pods.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "port": {
          "description": "Port listen address",
          "type": "string"
        },
        "priorityClassName": {
          "description": "PriorityClassName class assigned to the Pods",
          "type": "string"
        },
        "readinessGates": {
          "description": "ReadinessGates defines pod readiness gates",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
          }
        },
        "readinessProbe": {
          "description": "ReadinessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "replicaCount": {
          "description": "ReplicaCount is the expected size of the Application.",
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "revisionHistoryLimitCount": {
          "description": "The number of old ReplicaSets to retain to allow rollback in deployment or maximum number of revisions that will be maintained in the Deployment revision history. Has no effect at StatefulSets Defaults to 10.",
          "type": "integer",
          "format": "int32"
        },
        "runtimeClassName": {
          "description": "RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/",
          "type": "string"
        },
        "schedulerName": {
          "description": "SchedulerName - defines kubernetes scheduler name",
          "type": "string"
        },
        "secrets": {
          "description": "Secrets is a list of Secrets in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/secrets/SECRET_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SecurityContext"
        },
        "serviceScrapeSpec": {
          "description": "ServiceScrapeSpec that will be added to vmauthlb VMServiceScrape spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMServiceScrapeSpec"
        },
        "serviceSpec": {
          "description": "AdditionalServiceSpec defines service override configuration for vmauth lb deployment it'll be only applied to vmclusterlb- service",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AdditionalServiceSpec"
        },
        "startupProbe": {
          "description": "StartupProbe that will be added to CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "terminationGracePeriodSeconds": {
          "description": "TerminationGracePeriodSeconds period for container graceful termination",
          "type": "integer",
          "format": "int64"
        },
        "tolerations": {
          "description": "Tolerations If specified, the pod's tolerations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          }
        },
        "topologySpreadConstraints": {
          "description": "TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
          }
        },
        "useDefaultResources": {
          "description": "UseDefaultResources controls resource settings By default, operator sets built-in resource requirements",
          "type": "boolean"
        },
        "useStrictSecurity": {
          "description": "UseStrictSecurity enables strict security mode for component it restricts disk writes access uses non-root user out of the box drops not needed security permissions",
          "type": "boolean"
        },
        "volumeMounts": {
          "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the Application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          }
        },
        "volumes": {
          "description": "Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition. Volumes specified will be appended to other volumes that are generated. / +optional",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMAuthSpec": {
      "description": "VMAuthSpec defines the desired state of VMAuth",
      "type": "object",
      "properties": {
        "affinity": {
          "description": "Affinity If specified, the pod's scheduling constraints.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "configMaps": {
          "description": "ConfigMaps is a list of ConfigMaps in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/configs/CONFIGMAP_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "configReloadAuthKeySecret": {
          "description": "ConfigReloadAuthKeySecret defines optional secret reference authKey for /-/reload API requests. Given secret reference will be added to the application and vm-config-reloader as volume available since v0.57.0 version",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "configReloaderExtraArgs": {
          "description": "ConfigReloaderExtraArgs that will be passed to  VMAuths config-reloader container for example resyncInterval: \"30s\"",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "configReloaderImageTag": {
          "description": "ConfigReloaderImageTag defines image:tag for config-reloader container",
          "type": "string"
        },
        "configReloaderResources": {
          "description": "ConfigReloaderResources config-reloader container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "configSecret": {
          "description": "ConfigSecret is the name of a Kubernetes Secret in the same namespace as the VMAuth object, which contains auth configuration for vmauth, configuration must be inside secret key: config.yaml. It must be created and managed manually. If it's defined, configuration for vmauth becomes unmanaged and operator'll not create any related secrets/config-reloaders Deprecated: use externalConfig.secretRef instead",
          "type": "string"
        },
        "containers": {
          "description": "Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "default_url": {
          "description": "DefaultURLs backend url for non-matching paths filter usually used for default backend with error message",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "disableAutomountServiceAccountToken": {
          "description": "DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0). Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access. For example, vmagent and vm-config-reloader requires k8s API access. Operator creates volumes with name: \"kube-api-access\", which can be used as volumeMount for extraContainers if needed. And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.",
          "type": "boolean"
        },
        "disableSelfServiceScrape": {
          "description": "DisableSelfServiceScrape controls creation of VMServiceScrape by operator for the application. Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable",
          "type": "boolean"
        },
        "discover_backend_ips": {
          "description": "DiscoverBackendIPs instructs discovering URLPrefix backend IPs via DNS.",
          "type": "boolean"
        },
        "dnsConfig": {
          "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "description": "DNSPolicy sets DNS policy for the pod",
          "type": "string"
        },
        "drop_src_path_prefix_parts": {
          "description": "DropSrcPathPrefixParts is the number of `/`-delimited request path prefix parts to drop before proxying the request to backend. See [here](https://docs.victoriametrics.com/victoriametrics/vmauth/#dropping-request-path-prefix) for more details.",
          "type": "integer",
          "format": "int32"
        },
        "dump_request_on_errors": {
          "description": "DumpRequestOnErrors instructs vmauth to return detailed request params to the client if routing rules don't allow to forward request to the backends. Useful for debugging `src_hosts` and `src_headers` based routing rules\n\navailable since v1.107.0 vmauth version",
          "type": "boolean"
        },
        "externalConfig": {
          "description": "ExternalConfig defines a source of external VMAuth configuration. If it's defined, configuration for vmauth becomes unmanaged and operator'll not create any related secrets/config-reloaders",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ExternalConfig"
        },
        "extraArgs": {
          "description": "ExtraArgs that will be passed to the application container for example remoteWrite.tmpDataPath: /tmp",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "extraEnvs": {
          "description": "ExtraEnvs that will be passed to the application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "extraEnvsFrom": {
          "description": "ExtraEnvsFrom defines source of env variables for the application container could either be secret or configmap",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "headers": {
          "description": "Headers represent additional http headers, that vmauth uses in form of [\"header_key: header_value\"] multiple values for header key: [\"header_key: value1,value2\"] it's available since 1.68.0 version of vmauth",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "hostAliases": {
          "description": "HostAliases provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hostNetwork": {
          "description": "HostNetwork controls whether the pod may use the node network namespace",
          "type": "boolean"
        },
        "host_aliases": {
          "description": "HostAliasesUnderScore provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork. Has Priority over hostAliases field",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "image": {
          "description": "Image - docker image settings if no specified operator uses default version from operator config",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Image"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "ingress": {
          "description": "Ingress enables ingress configuration for VMAuth.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedIngress"
        },
        "initContainers": {
          "description": "InitContainers allows adding initContainers to the pod definition. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "internalListenPort": {
          "description": "InternalListenPort instructs vmauth to serve internal routes at given port available from v0.56.0 operator and v1.111.0 vmauth version related doc https://docs.victoriametrics.com/victoriametrics/vmauth/#security",
          "type": "string"
        },
        "ip_filters": {
          "description": "IPFilters defines per target src ip filters supported only with enterprise version of [vmauth](https://docs.victoriametrics.com/victoriametrics/vmauth/#ip-filters)",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMUserIPFilters"
        },
        "license": {
          "description": "License allows to configure license key to be used for enterprise features. Using license key is supported starting from VictoriaMetrics v1.94.0. See [here](https://docs.victoriametrics.com/victoriametrics/enterprise/)",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.License"
        },
        "livenessProbe": {
          "description": "LivenessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "load_balancing_policy": {
          "description": "LoadBalancingPolicy defines load balancing policy to use for backend urls. Supported policies: least_loaded, first_available. See [here](https://docs.victoriametrics.com/victoriametrics/vmauth/#load-balancing) for more details (default \"least_loaded\")",
          "type": "string"
        },
        "logFormat": {
          "description": "LogFormat for VMAuth to be configured with.",
          "type": "string"
        },
        "logLevel": {
          "description": "LogLevel for victoria metrics single to be configured with.",
          "type": "string"
        },
        "managedMetadata": {
          "description": "ManagedMetadata defines metadata that will be added to the all objects created by operator for the given CustomResource",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ManagedObjectsMetadata"
        },
        "max_concurrent_requests": {
          "description": "MaxConcurrentRequests defines max concurrent requests per user 300 is default value for vmauth",
          "type": "integer",
          "format": "int32"
        },
        "minReadySeconds": {
          "description": "MinReadySeconds defines a minimum number of seconds to wait before starting update next pod if previous in healthy state Has no effect for VLogs and VMSingle",
          "type": "integer",
          "format": "int32"
        },
        "nodeSelector": {
          "description": "NodeSelector Define which Nodes the Pods are scheduled on.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "paused": {
          "description": "Paused If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.",
          "type": "boolean"
        },
        "podDisruptionBudget": {
          "description": "PodDisruptionBudget created by operator",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedPodDisruptionBudgetSpec"
        },
        "podMetadata": {
          "description": "PodMetadata configures Labels and Annotations which are propagated to the VMAuth pods.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "port": {
          "description": "Port listen address",
          "type": "string"
        },
        "priorityClassName": {
          "description": "PriorityClassName class assigned to the Pods",
          "type": "string"
        },
        "readinessGates": {
          "description": "ReadinessGates defines pod readiness gates",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
          }
        },
        "readinessProbe": {
          "description": "ReadinessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "replicaCount": {
          "description": "ReplicaCount is the expected size of the Application.",
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "response_headers": {
          "description": "ResponseHeaders represent additional http headers, that vmauth adds for request response in form of [\"header_key: header_value\"] multiple values for header key: [\"header_key: value1,value2\"] it's available since 1.93.0 version of vmauth",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "retry_status_codes": {
          "description": "RetryStatusCodes defines http status codes in numeric format for request retries e.g. [429,503]",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        },
        "revisionHistoryLimitCount": {
          "description": "The number of old ReplicaSets to retain to allow rollback in deployment or maximum number of revisions that will be maintained in the Deployment revision history. Has no effect at StatefulSets Defaults to 10.",
          "type": "integer",
          "format": "int32"
        },
        "runtimeClassName": {
          "description": "RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/",
          "type": "string"
        },
        "schedulerName": {
          "description": "SchedulerName - defines kubernetes scheduler name",
          "type": "string"
        },
        "secrets": {
          "description": "Secrets is a list of Secrets in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/secrets/SECRET_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SecurityContext"
        },
        "selectAllByDefault": {
          "description": "SelectAllByDefault changes default behavior for empty CRD selectors, such userSelector. with selectAllByDefault: true and empty userSelector and userNamespaceSelector Operator selects all exist users with selectAllByDefault: false - selects nothing",
          "type": "boolean"
        },
        "serviceAccountName": {
          "description": "ServiceAccountName is the name of the ServiceAccount to use to run the pods",
          "type": "string"
        },
        "serviceScrapeSpec": {
          "description": "ServiceScrapeSpec that will be added to vmauth VMServiceScrape spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMServiceScrapeSpec"
        },
        "serviceSpec": {
          "description": "ServiceSpec that will be added to vmsingle service spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AdditionalServiceSpec"
        },
        "startupProbe": {
          "description": "StartupProbe that will be added to CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "terminationGracePeriodSeconds": {
          "description": "TerminationGracePeriodSeconds period for container graceful termination",
          "type": "integer",
          "format": "int64"
        },
        "tlsConfig": {
          "description": "TLSConfig defines tls configuration for the backend connection",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        },
        "tolerations": {
          "description": "Tolerations If specified, the pod's tolerations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          }
        },
        "topologySpreadConstraints": {
          "description": "TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
          }
        },
        "unauthorizedAccessConfig": {
          "description": "UnauthorizedAccessConfig configures access for un authorized users\n\nDeprecated: use unauthorizedUserAccessSpec instead will be removed at v1.0 release",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.UnauthorizedAccessConfigURLMap"
          }
        },
        "unauthorizedUserAccessSpec": {
          "description": "UnauthorizedUserAccessSpec defines unauthorized_user config section of vmauth config",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMAuthUnauthorizedUserAccessSpec"
        },
        "useDefaultResources": {
          "description": "UseDefaultResources controls resource settings By default, operator sets built-in resource requirements",
          "type": "boolean"
        },
        "useProxyProtocol": {
          "description": "UseProxyProtocol enables proxy protocol for vmauth https://www.haproxy.org/download/2.3/doc/proxy-protocol.txt",
          "type": "boolean"
        },
        "useStrictSecurity": {
          "description": "UseStrictSecurity enables strict security mode for component it restricts disk writes access uses non-root user out of the box drops not needed security permissions",
          "type": "boolean"
        },
        "useVMConfigReloader": {
          "description": "UseVMConfigReloader replaces prometheus-like config-reloader with vm one. It uses secrets watch instead of file watch which greatly increases speed of config updates",
          "type": "boolean"
        },
        "userNamespaceSelector": {
          "description": "UserNamespaceSelector Namespaces to be selected for  VMAuth discovery. Works in combination with Selector. NamespaceSelector nil - only objects at VMAuth namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "userSelector": {
          "description": "UserSelector defines VMUser to be selected for config file generation. Works in combination with NamespaceSelector. NamespaceSelector nil - only objects at VMAuth namespace. If both nil - behaviour controlled by selectAllByDefault",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "volumeMounts": {
          "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the Application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          }
        },
        "volumes": {
          "description": "Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition. Volumes specified will be appended to other volumes that are generated. / +optional",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMAuthStatus": {
      "description": "VMAuthStatus defines the observed state of VMAuth",
      "type": "object",
      "properties": {
        "observedGeneration": {
          "description": "ObservedGeneration defines current generation picked by operator for the reconcile",
          "type": "integer",
          "format": "int64"
        },
        "reason": {
          "description": "Reason defines human readable error reason",
          "type": "string"
        },
        "updateStatus": {
          "description": "UpdateStatus defines a status for update rollout",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMAuthUnauthorizedUserAccessSpec": {
      "description": "VMAuthUnauthorizedUserAccessSpec defines unauthorized_user section configuration for vmauth",
      "type": "object",
      "properties": {
        "default_url": {
          "description": "DefaultURLs backend url for non-matching paths filter usually used for default backend with error message",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "discover_backend_ips": {
          "description": "DiscoverBackendIPs instructs discovering URLPrefix backend IPs via DNS.",
          "type": "boolean"
        },
        "drop_src_path_prefix_parts": {
          "description": "DropSrcPathPrefixParts is the number of `/`-delimited request path prefix parts to drop before proxying the request to backend. See [here](https://docs.victoriametrics.com/victoriametrics/vmauth/#dropping-request-path-prefix) for more details.",
          "type": "integer",
          "format": "int32"
        },
        "dump_request_on_errors": {
          "description": "DumpRequestOnErrors instructs vmauth to return detailed request params to the client if routing rules don't allow to forward request to the backends. Useful for debugging `src_hosts` and `src_headers` based routing rules\n\navailable since v1.107.0 vmauth version",
          "type": "boolean"
        },
        "headers": {
          "description": "Headers represent additional http headers, that vmauth uses in form of [\"header_key: header_value\"] multiple values for header key: [\"header_key: value1,value2\"] it's available since 1.68.0 version of vmauth",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "ip_filters": {
          "description": "IPFilters defines per target src ip filters supported only with enterprise version of [vmauth](https://docs.victoriametrics.com/victoriametrics/vmauth/#ip-filters)",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMUserIPFilters"
        },
        "load_balancing_policy": {
          "description": "LoadBalancingPolicy defines load balancing policy to use for backend urls. Supported policies: least_loaded, first_available. See [here](https://docs.victoriametrics.com/victoriametrics/vmauth/#load-balancing) for more details (default \"least_loaded\")",
          "type": "string"
        },
        "max_concurrent_requests": {
          "description": "MaxConcurrentRequests defines max concurrent requests per user 300 is default value for vmauth",
          "type": "integer",
          "format": "int32"
        },
        "metric_labels": {
          "description": "MetricLabels - additional labels for metrics exported by vmauth for given user.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "response_headers": {
          "description": "ResponseHeaders represent additional http headers, that vmauth adds for request response in form of [\"header_key: header_value\"] multiple values for header key: [\"header_key: value1,value2\"] it's available since 1.93.0 version of vmauth",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "retry_status_codes": {
          "description": "RetryStatusCodes defines http status codes in numeric format for request retries e.g. [429,503]",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        },
        "tlsConfig": {
          "description": "TLSConfig defines tls configuration for the backend connection",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        },
        "url_map": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.UnauthorizedAccessConfigURLMap"
          }
        },
        "url_prefix": {
          "description": "URLPrefix defines prefix prefix for destination",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMBackup": {
      "type": "object",
      "properties": {
        "acceptEULA": {
          "description": "AcceptEULA accepts enterprise feature usage, must be set to true. otherwise backupmanager cannot be added to single/cluster version. https://victoriametrics.com/legal/esa/ Deprecated: use license.key or license.keyRef instead",
          "type": "boolean",
          "default": false
        },
        "concurrency": {
          "description": "Defines number of concurrent workers. Higher concurrency may reduce backup duration (default 10)",
          "type": "integer",
          "format": "int32"
        },
        "credentialsSecret": {
          "description": "CredentialsSecret is secret in the same namespace for access to remote storage The secret is mounted into /etc/vm/creds.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "customS3Endpoint": {
          "description": "Custom S3 endpoint for use with S3-compatible storages (e.g. MinIO). S3 is used if not set",
          "type": "string"
        },
        "destination": {
          "description": "Defines destination for backup",
          "type": "string"
        },
        "destinationDisableSuffixAdd": {
          "description": "DestinationDisableSuffixAdd - disables suffix adding for cluster version backups each vmstorage backup must have unique backup folder so operator adds POD_NAME as suffix for backup destination folder.",
          "type": "boolean"
        },
        "disableDaily": {
          "description": "Defines if daily backups disabled (default false)",
          "type": "boolean"
        },
        "disableHourly": {
          "description": "Defines if hourly backups disabled (default false)",
          "type": "boolean"
        },
        "disableMonthly": {
          "description": "Defines if monthly backups disabled (default false)",
          "type": "boolean"
        },
        "disableWeekly": {
          "description": "Defines if weekly backups disabled (default false)",
          "type": "boolean"
        },
        "extraArgs": {
          "description": "extra args like maxBytesPerSecond default 0",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "extraEnvs": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "extraEnvsFrom": {
          "description": "ExtraEnvsFrom defines source of env variables for the application container could either be secret or configmap",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "image": {
          "description": "Image - docker image settings for VMBackuper",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Image"
        },
        "logFormat": {
          "description": "LogFormat for VMBackup to be configured with. default or json",
          "type": "string"
        },
        "logLevel": {
          "description": "LogLevel for VMBackup to be configured with.",
          "type": "string"
        },
        "port": {
          "description": "Port for health check connections",
          "type": "string"
        },
        "resources": {
          "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "restore": {
          "description": "Restore Allows to enable restore options for pod Read [more](https://docs.victoriametrics.com/victoriametrics/vmbackupmanager/#restore-commands)",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMRestore"
        },
        "snapshotCreateURL": {
          "description": "SnapshotCreateURL overwrites url for snapshot create",
          "type": "string"
        },
        "snapshotDeleteURL": {
          "description": "SnapShotDeleteURL overwrites url for snapshot delete",
          "type": "string"
        },
        "volumeMounts": {
          "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment definition. VolumeMounts specified will be appended to other VolumeMounts in the vmbackupmanager container, that are generated as a result of StorageSpec objects.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMCluster": {
      "description": "VMCluster is fast, cost-effective and scalable time-series database. Cluster version with",
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMClusterSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMClusterStatus"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMClusterSpec": {
      "description": "VMClusterSpec defines the desired state of VMCluster",
      "type": "object",
      "properties": {
        "clusterDomainName": {
          "description": "ClusterDomainName defines domain name suffix for in-cluster dns addresses aka .cluster.local used by vminsert and vmselect to build vmstorage address",
          "type": "string"
        },
        "clusterVersion": {
          "description": "ClusterVersion defines default images tag for all components. it can be overwritten with component specific image.tag value.",
          "type": "string"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "license": {
          "description": "License allows to configure license key to be used for enterprise features. Using license key is supported starting from VictoriaMetrics v1.94.0. See [here](https://docs.victoriametrics.com/victoriametrics/enterprise/)",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.License"
        },
        "managedMetadata": {
          "description": "ManagedMetadata defines metadata that will be added to the all objects created by operator for the given CustomResource",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ManagedObjectsMetadata"
        },
        "paused": {
          "description": "Paused If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.",
          "type": "boolean"
        },
        "replicationFactor": {
          "description": "ReplicationFactor defines how many copies of data make among distinct storage nodes",
          "type": "integer",
          "format": "int32"
        },
        "requestsLoadBalancer": {
          "description": "RequestsLoadBalancer configures load-balancing for vminsert and vmselect requests. It helps to evenly spread load across pods. Usually it's not possible with Kubernetes TCP-based services. See more [here](https://docs.victoriametrics.com/operator/resources/vmcluster/#requests-load-balancing)",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMAuthLoadBalancer"
        },
        "retentionPeriod": {
          "description": "RetentionPeriod defines how long to retain stored metrics, specified as a duration (e.g., \"1d\", \"1w\", \"1m\"). Data with timestamps outside the RetentionPeriod is automatically deleted. The minimum allowed value is 1d, or 24h. The default value is 1 (one month). See [retention](https://docs.victoriametrics.com/victoriametrics/single-server-victoriametrics/#retention) docs for details.",
          "type": "string"
        },
        "serviceAccountName": {
          "description": "ServiceAccountName is the name of the ServiceAccount to use to run the VMSelect, VMStorage and VMInsert Pods.",
          "type": "string"
        },
        "useStrictSecurity": {
          "description": "UseStrictSecurity enables strict security mode for component it restricts disk writes access uses non-root user out of the box drops not needed security permissions",
          "type": "boolean"
        },
        "vminsert": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMInsert"
        },
        "vmselect": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMSelect"
        },
        "vmstorage": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMStorage"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMClusterStatus": {
      "description": "VMClusterStatus defines the observed state of VMCluster",
      "type": "object",
      "properties": {
        "clusterStatus": {
          "description": "LegacyStatus is deprecated and will be removed at v0.52.0 version",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration defines current generation picked by operator for the reconcile",
          "type": "integer",
          "format": "int64"
        },
        "reason": {
          "description": "Reason defines human readable error reason",
          "type": "string"
        },
        "updateStatus": {
          "description": "UpdateStatus defines a status for update rollout",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMInsert": {
      "type": "object",
      "properties": {
        "affinity": {
          "description": "Affinity If specified, the pod's scheduling constraints.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "clusterNativeListenPort": {
          "description": "ClusterNativePort for multi-level cluster setup. More [details](https://docs.victoriametrics.com/victoriametrics/cluster-victoriametrics/#multi-level-cluster-setup)",
          "type": "string"
        },
        "configMaps": {
          "description": "ConfigMaps is a list of ConfigMaps in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/configs/CONFIGMAP_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "containers": {
          "description": "Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "disableAutomountServiceAccountToken": {
          "description": "DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0). Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access. For example, vmagent and vm-config-reloader requires k8s API access. Operator creates volumes with name: \"kube-api-access\", which can be used as volumeMount for extraContainers if needed. And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.",
          "type": "boolean"
        },
        "disableSelfServiceScrape": {
          "description": "DisableSelfServiceScrape controls creation of VMServiceScrape by operator for the application. Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable",
          "type": "boolean"
        },
        "dnsConfig": {
          "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "description": "DNSPolicy sets DNS policy for the pod",
          "type": "string"
        },
        "extraArgs": {
          "description": "ExtraArgs that will be passed to the application container for example remoteWrite.tmpDataPath: /tmp",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "extraEnvs": {
          "description": "ExtraEnvs that will be passed to the application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "extraEnvsFrom": {
          "description": "ExtraEnvsFrom defines source of env variables for the application container could either be secret or configmap",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "hostAliases": {
          "description": "HostAliases provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hostNetwork": {
          "description": "HostNetwork controls whether the pod may use the node network namespace",
          "type": "boolean"
        },
        "host_aliases": {
          "description": "HostAliasesUnderScore provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork. Has Priority over hostAliases field",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hpa": {
          "description": "HPA defines kubernetes PodAutoScaling configuration version 2.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedHPA"
        },
        "image": {
          "description": "Image - docker image settings if no specified operator uses default version from operator config",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Image"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "initContainers": {
          "description": "InitContainers allows adding initContainers to the pod definition. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "insertPorts": {
          "description": "InsertPorts - additional listen ports for data ingestion.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.InsertPorts"
        },
        "livenessProbe": {
          "description": "LivenessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "logFormat": {
          "description": "LogFormat for VMInsert to be configured with. default or json",
          "type": "string"
        },
        "logLevel": {
          "description": "LogLevel for VMInsert to be configured with.",
          "type": "string"
        },
        "minReadySeconds": {
          "description": "MinReadySeconds defines a minimum number of seconds to wait before starting update next pod if previous in healthy state Has no effect for VLogs and VMSingle",
          "type": "integer",
          "format": "int32"
        },
        "nodeSelector": {
          "description": "NodeSelector Define which Nodes the Pods are scheduled on.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "paused": {
          "description": "Paused If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.",
          "type": "boolean"
        },
        "podDisruptionBudget": {
          "description": "PodDisruptionBudget created by operator",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedPodDisruptionBudgetSpec"
        },
        "podMetadata": {
          "description": "PodMetadata configures Labels and Annotations which are propagated to the VMInsert pods.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "port": {
          "description": "Port listen address",
          "type": "string"
        },
        "priorityClassName": {
          "description": "PriorityClassName class assigned to the Pods",
          "type": "string"
        },
        "readinessGates": {
          "description": "ReadinessGates defines pod readiness gates",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
          }
        },
        "readinessProbe": {
          "description": "ReadinessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "replicaCount": {
          "description": "ReplicaCount is the expected size of the Application.",
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "revisionHistoryLimitCount": {
          "description": "The number of old ReplicaSets to retain to allow rollback in deployment or maximum number of revisions that will be maintained in the Deployment revision history. Has no effect at StatefulSets Defaults to 10.",
          "type": "integer",
          "format": "int32"
        },
        "rollingUpdate": {
          "description": "RollingUpdate - overrides deployment update params.",
          "$ref": "#/definitions/io.k8s.api.apps.v1.RollingUpdateDeployment"
        },
        "runtimeClassName": {
          "description": "RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/",
          "type": "string"
        },
        "schedulerName": {
          "description": "SchedulerName - defines kubernetes scheduler name",
          "type": "string"
        },
        "secrets": {
          "description": "Secrets is a list of Secrets in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/secrets/SECRET_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SecurityContext"
        },
        "serviceScrapeSpec": {
          "description": "ServiceScrapeSpec that will be added to vminsert VMServiceScrape spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMServiceScrapeSpec"
        },
        "serviceSpec": {
          "description": "ServiceSpec that will be added to vminsert service spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AdditionalServiceSpec"
        },
        "startupProbe": {
          "description": "StartupProbe that will be added to CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "terminationGracePeriodSeconds": {
          "description": "TerminationGracePeriodSeconds period for container graceful termination",
          "type": "integer",
          "format": "int64"
        },
        "tolerations": {
          "description": "Tolerations If specified, the pod's tolerations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          }
        },
        "topologySpreadConstraints": {
          "description": "TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
          }
        },
        "updateStrategy": {
          "description": "UpdateStrategy - overrides default update strategy.",
          "type": "string"
        },
        "useDefaultResources": {
          "description": "UseDefaultResources controls resource settings By default, operator sets built-in resource requirements",
          "type": "boolean"
        },
        "useStrictSecurity": {
          "description": "UseStrictSecurity enables strict security mode for component it restricts disk writes access uses non-root user out of the box drops not needed security permissions",
          "type": "boolean"
        },
        "volumeMounts": {
          "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the Application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          }
        },
        "volumes": {
          "description": "Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition. Volumes specified will be appended to other volumes that are generated. / +optional",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMNodeScrape": {
      "description": "VMNodeScrape defines discovery for targets placed on kubernetes nodes, usually its node-exporters and other host services. InternalIP is used as __address__ for scraping.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMNodeScrapeSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ScrapeObjectStatus"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMNodeScrapeSpec": {
      "description": "VMNodeScrapeSpec defines specification for VMNodeScrape.",
      "type": "object",
      "properties": {
        "authorization": {
          "description": "Authorization with http header Authorization",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Authorization"
        },
        "basicAuth": {
          "description": "BasicAuth allow an endpoint to authenticate over basic authentication",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.BasicAuth"
        },
        "bearerTokenFile": {
          "description": "File to read bearer token for scraping targets.",
          "type": "string"
        },
        "bearerTokenSecret": {
          "description": "Secret to mount to read bearer token for scraping targets. The secret needs to be in the same namespace as the scrape object and accessible by the victoria-metrics operator.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "follow_redirects": {
          "description": "FollowRedirects controls redirects for scraping.",
          "type": "boolean"
        },
        "honorLabels": {
          "description": "HonorLabels chooses the metric's labels on collisions with target labels.",
          "type": "boolean"
        },
        "honorTimestamps": {
          "description": "HonorTimestamps controls whether vmagent respects the timestamps present in scraped data.",
          "type": "boolean"
        },
        "interval": {
          "description": "Interval at which metrics should be scraped",
          "type": "string"
        },
        "jobLabel": {
          "description": "The label to use to retrieve the job name from.",
          "type": "string"
        },
        "max_scrape_size": {
          "description": "MaxScrapeSize defines a maximum size of scraped data for a job",
          "type": "string"
        },
        "metricRelabelConfigs": {
          "description": "MetricRelabelConfigs to apply to samples after scrapping.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
          }
        },
        "oauth2": {
          "description": "OAuth2 defines auth configuration",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.OAuth2"
        },
        "params": {
          "description": "Optional HTTP URL parameters",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            }
          }
        },
        "path": {
          "description": "HTTP path to scrape for metrics.",
          "type": "string"
        },
        "port": {
          "description": "Name of the port exposed at Node.",
          "type": "string"
        },
        "proxyURL": {
          "description": "ProxyURL eg http://proxyserver:2195 Directs scrapes to proxy through this endpoint.",
          "type": "string"
        },
        "relabelConfigs": {
          "description": "RelabelConfigs to apply to samples during service discovery.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
          }
        },
        "sampleLimit": {
          "description": "SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.",
          "type": "integer",
          "format": "int64"
        },
        "scheme": {
          "description": "HTTP scheme to use for scraping.",
          "type": "string"
        },
        "scrapeTimeout": {
          "description": "Timeout after which the scrape is ended",
          "type": "string"
        },
        "scrape_interval": {
          "description": "ScrapeInterval is the same as Interval and has priority over it. one of scrape_interval or interval can be used",
          "type": "string"
        },
        "selector": {
          "description": "Selector to select kubernetes Nodes.",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "seriesLimit": {
          "description": "SeriesLimit defines per-scrape limit on number of unique time series a single target can expose during all the scrapes on the time window of 24h.",
          "type": "integer",
          "format": "int64"
        },
        "targetLabels": {
          "description": "TargetLabels transfers labels on the Kubernetes Node onto the target.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "tlsConfig": {
          "description": "TLSConfig configuration to use when scraping the endpoint",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        },
        "vm_scrape_params": {
          "description": "VMScrapeParams defines VictoriaMetrics specific scrape parameters",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMScrapeParams"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMPodScrape": {
      "description": "VMPodScrape is scrape configuration for pods, it generates vmagent's config for scraping pod targets based on selectors.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMPodScrapeSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ScrapeObjectStatus"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMPodScrapeSpec": {
      "description": "VMPodScrapeSpec defines the desired state of VMPodScrape",
      "type": "object",
      "required": [
        "podMetricsEndpoints"
      ],
      "properties": {
        "attach_metadata": {
          "description": "AttachMetadata configures metadata attaching from service discovery",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AttachMetadata"
        },
        "jobLabel": {
          "description": "The label to use to retrieve the job name from.",
          "type": "string"
        },
        "namespaceSelector": {
          "description": "Selector to select which namespaces the Endpoints objects are discovered from.",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.NamespaceSelector"
        },
        "podMetricsEndpoints": {
          "description": "A list of endpoints allowed as part of this PodMonitor.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.PodMetricsEndpoint"
          }
        },
        "podTargetLabels": {
          "description": "PodTargetLabels transfers labels on the Kubernetes Pod onto the target.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "sampleLimit": {
          "description": "SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.",
          "type": "integer",
          "format": "int64"
        },
        "selector": {
          "description": "Selector to select Pod objects.",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "seriesLimit": {
          "description": "SeriesLimit defines per-scrape limit on number of unique time series a single target can expose during all the scrapes on the time window of 24h.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMProbe": {
      "description": "VMProbe defines a probe for targets, that will be executed with prober, like blackbox exporter. It helps to monitor reachability of target with various checks.",
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMProbeSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ScrapeObjectStatus"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMProbeSpec": {
      "description": "VMProbeSpec contains specification parameters for a Probe.",
      "type": "object",
      "required": [
        "vmProberSpec"
      ],
      "properties": {
        "authorization": {
          "description": "Authorization with http header Authorization",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Authorization"
        },
        "basicAuth": {
          "description": "BasicAuth allow an endpoint to authenticate over basic authentication",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.BasicAuth"
        },
        "bearerTokenFile": {
          "description": "File to read bearer token for scraping targets.",
          "type": "string"
        },
        "bearerTokenSecret": {
          "description": "Secret to mount to read bearer token for scraping targets. The secret needs to be in the same namespace as the scrape object and accessible by the victoria-metrics operator.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "follow_redirects": {
          "description": "FollowRedirects controls redirects for scraping.",
          "type": "boolean"
        },
        "honorLabels": {
          "description": "HonorLabels chooses the metric's labels on collisions with target labels.",
          "type": "boolean"
        },
        "honorTimestamps": {
          "description": "HonorTimestamps controls whether vmagent respects the timestamps present in scraped data.",
          "type": "boolean"
        },
        "interval": {
          "description": "Interval at which metrics should be scraped",
          "type": "string"
        },
        "jobName": {
          "description": "The job name assigned to scraped metrics by default.",
          "type": "string"
        },
        "max_scrape_size": {
          "description": "MaxScrapeSize defines a maximum size of scraped data for a job",
          "type": "string"
        },
        "metricRelabelConfigs": {
          "description": "MetricRelabelConfigs to apply to samples after scrapping.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
          }
        },
        "module": {
          "description": "The module to use for probing specifying how to probe the target. Example module configuring in the blackbox exporter: https://github.com/prometheus/blackbox_exporter/blob/master/example.yml",
          "type": "string"
        },
        "oauth2": {
          "description": "OAuth2 defines auth configuration",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.OAuth2"
        },
        "params": {
          "description": "Optional HTTP URL parameters",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            }
          }
        },
        "path": {
          "description": "HTTP path to scrape for metrics.",
          "type": "string"
        },
        "proxyURL": {
          "description": "ProxyURL eg http://proxyserver:2195 Directs scrapes to proxy through this endpoint.",
          "type": "string"
        },
        "sampleLimit": {
          "description": "SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.",
          "type": "integer",
          "format": "int64"
        },
        "scheme": {
          "description": "HTTP scheme to use for scraping.",
          "type": "string"
        },
        "scrapeTimeout": {
          "description": "Timeout after which the scrape is ended",
          "type": "string"
        },
        "scrape_interval": {
          "description": "ScrapeInterval is the same as Interval and has priority over it. one of scrape_interval or interval can be used",
          "type": "string"
        },
        "seriesLimit": {
          "description": "SeriesLimit defines per-scrape limit on number of unique time series a single target can expose during all the scrapes on the time window of 24h.",
          "type": "integer",
          "format": "int64"
        },
        "targets": {
          "description": "Targets defines a set of static and/or dynamically discovered targets to be probed using the prober.",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMProbeTargets"
        },
        "tlsConfig": {
          "description": "TLSConfig configuration to use when scraping the endpoint",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        },
        "vmProberSpec": {
          "description": "Specification for the prober to use for probing targets. The prober.URL parameter is required. Targets cannot be probed if left empty.",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMProberSpec"
        },
        "vm_scrape_params": {
          "description": "VMScrapeParams defines VictoriaMetrics specific scrape parameters",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMScrapeParams"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMProbeTargetStaticConfig": {
      "description": "VMProbeTargetStaticConfig defines the set of static targets considered for probing.",
      "type": "object",
      "required": [
        "targets"
      ],
      "properties": {
        "labels": {
          "description": "Labels assigned to all metrics scraped from the targets.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "relabelingConfigs": {
          "description": "RelabelConfigs to apply to samples during service discovery.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
          }
        },
        "targets": {
          "description": "Targets is a list of URLs to probe using the configured prober.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMProbeTargets": {
      "description": "VMProbeTargets defines a set of static and dynamically discovered targets for the prober.",
      "type": "object",
      "properties": {
        "ingress": {
          "description": "Ingress defines the set of dynamically discovered ingress objects which hosts are considered for probing.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ProbeTargetIngress"
        },
        "staticConfig": {
          "description": "StaticConfig defines static targets which are considers for probing.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMProbeTargetStaticConfig"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMProberSpec": {
      "description": "VMProberSpec contains specification parameters for the Prober used for probing.",
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "path": {
          "description": "Path to collect metrics from. Defaults to `/probe`.",
          "type": "string"
        },
        "scheme": {
          "description": "HTTP scheme to use for scraping. Defaults to `http`.",
          "type": "string"
        },
        "url": {
          "description": "Mandatory URL of the prober.",
          "type": "string",
          "default": ""
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMRestore": {
      "description": "VMRestore defines config options for vmrestore start-up",
      "type": "object",
      "properties": {
        "onStart": {
          "description": "OnStart defines configuration for restore on pod start",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMRestoreOnStartConfig"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMRestoreOnStartConfig": {
      "description": "VMRestoreOnStartConfig controls vmrestore setting",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Enabled defines if restore on start enabled",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMRule": {
      "description": "VMRule defines rule records for vmalert application",
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMRuleSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMRuleStatus"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMRuleSpec": {
      "description": "VMRuleSpec defines the desired state of VMRule",
      "type": "object",
      "required": [
        "groups"
      ],
      "properties": {
        "groups": {
          "description": "Groups list of group rules",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RuleGroup"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMRuleStatus": {
      "description": "VMRuleStatus defines the observed state of VMRule",
      "type": "object",
      "properties": {
        "observedGeneration": {
          "description": "ObservedGeneration defines current generation picked by operator for the reconcile",
          "type": "integer",
          "format": "int64"
        },
        "reason": {
          "description": "Reason defines human readable error reason",
          "type": "string"
        },
        "updateStatus": {
          "description": "UpdateStatus defines a status for update rollout",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMScrapeConfig": {
      "description": "VMScrapeConfig specifies a set of targets and parameters describing how to scrape them.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMScrapeConfigSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ScrapeObjectStatus"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMScrapeConfigSpec": {
      "description": "VMScrapeConfigSpec defines the desired state of VMScrapeConfig",
      "type": "object",
      "properties": {
        "authorization": {
          "description": "Authorization with http header Authorization",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Authorization"
        },
        "azureSDConfigs": {
          "description": "AzureSDConfigs defines a list of Azure service discovery configurations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AzureSDConfig"
          }
        },
        "basicAuth": {
          "description": "BasicAuth allow an endpoint to authenticate over basic authentication",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.BasicAuth"
        },
        "bearerTokenFile": {
          "description": "File to read bearer token for scraping targets.",
          "type": "string"
        },
        "bearerTokenSecret": {
          "description": "Secret to mount to read bearer token for scraping targets. The secret needs to be in the same namespace as the scrape object and accessible by the victoria-metrics operator.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "consulSDConfigs": {
          "description": "ConsulSDConfigs defines a list of Consul service discovery configurations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ConsulSDConfig"
          }
        },
        "digitalOceanSDConfigs": {
          "description": "DigitalOceanSDConfigs defines a list of DigitalOcean service discovery configurations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.DigitalOceanSDConfig"
          }
        },
        "dnsSDConfigs": {
          "description": "DNSSDConfigs defines a list of DNS service discovery configurations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.DNSSDConfig"
          }
        },
        "ec2SDConfigs": {
          "description": "EC2SDConfigs defines a list of EC2 service discovery configurations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EC2SDConfig"
          }
        },
        "fileSDConfigs": {
          "description": "FileSDConfigs defines a list of file service discovery configurations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.FileSDConfig"
          }
        },
        "follow_redirects": {
          "description": "FollowRedirects controls redirects for scraping.",
          "type": "boolean"
        },
        "gceSDConfigs": {
          "description": "GCESDConfigs defines a list of GCE service discovery configurations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.GCESDConfig"
          }
        },
        "honorLabels": {
          "description": "HonorLabels chooses the metric's labels on collisions with target labels.",
          "type": "boolean"
        },
        "honorTimestamps": {
          "description": "HonorTimestamps controls whether vmagent respects the timestamps present in scraped data.",
          "type": "boolean"
        },
        "httpSDConfigs": {
          "description": "HTTPSDConfigs defines a list of HTTP service discovery configurations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.HTTPSDConfig"
          }
        },
        "interval": {
          "description": "Interval at which metrics should be scraped",
          "type": "string"
        },
        "kubernetesSDConfigs": {
          "description": "KubernetesSDConfigs defines a list of Kubernetes service discovery configurations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.KubernetesSDConfig"
          }
        },
        "max_scrape_size": {
          "description": "MaxScrapeSize defines a maximum size of scraped data for a job",
          "type": "string"
        },
        "metricRelabelConfigs": {
          "description": "MetricRelabelConfigs to apply to samples after scrapping.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
          }
        },
        "oauth2": {
          "description": "OAuth2 defines auth configuration",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.OAuth2"
        },
        "openstackSDConfigs": {
          "description": "OpenStackSDConfigs defines a list of OpenStack service discovery configurations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.OpenStackSDConfig"
          }
        },
        "params": {
          "description": "Optional HTTP URL parameters",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string",
              "default": ""
            }
          }
        },
        "path": {
          "description": "HTTP path to scrape for metrics.",
          "type": "string"
        },
        "proxyURL": {
          "description": "ProxyURL eg http://proxyserver:2195 Directs scrapes to proxy through this endpoint.",
          "type": "string"
        },
        "relabelConfigs": {
          "description": "RelabelConfigs to apply to samples during service discovery.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
          }
        },
        "sampleLimit": {
          "description": "SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.",
          "type": "integer",
          "format": "int64"
        },
        "scheme": {
          "description": "HTTP scheme to use for scraping.",
          "type": "string"
        },
        "scrapeTimeout": {
          "description": "Timeout after which the scrape is ended",
          "type": "string"
        },
        "scrape_interval": {
          "description": "ScrapeInterval is the same as Interval and has priority over it. one of scrape_interval or interval can be used",
          "type": "string"
        },
        "seriesLimit": {
          "description": "SeriesLimit defines per-scrape limit on number of unique time series a single target can expose during all the scrapes on the time window of 24h.",
          "type": "integer",
          "format": "int64"
        },
        "staticConfigs": {
          "description": "StaticConfigs defines a list of static targets with a common label set.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.StaticConfig"
          }
        },
        "tlsConfig": {
          "description": "TLSConfig configuration to use when scraping the endpoint",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        },
        "vm_scrape_params": {
          "description": "VMScrapeParams defines VictoriaMetrics specific scrape parameters",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMScrapeParams"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMScrapeParams": {
      "description": "VMScrapeParams defines scrape target configuration that compatible only with VictoriaMetrics scrapers VMAgent and VMSingle",
      "type": "object",
      "properties": {
        "disable_compression": {
          "description": "DisableCompression",
          "type": "boolean"
        },
        "disable_keep_alive": {
          "description": "disable_keepalive allows disabling HTTP keep-alive when scraping targets. By default, HTTP keep-alive is enabled, so TCP connections to scrape targets could be reused. See https://docs.victoriametrics.com/victoriametrics/vmagent/#scrape_config-enhancements",
          "type": "boolean"
        },
        "headers": {
          "description": "Headers allows sending custom headers to scrape targets must be in of semicolon separated header with it's value eg: headerName: headerValue vmagent supports since 1.79.0 version",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "no_stale_markers": {
          "type": "boolean"
        },
        "proxy_client_config": {
          "description": "ProxyClientConfig configures proxy auth settings for scraping See feature description https://docs.victoriametrics.com/victoriametrics/vmagent/#scraping-targets-via-a-proxy",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ProxyAuth"
        },
        "scrape_align_interval": {
          "type": "string"
        },
        "scrape_offset": {
          "type": "string"
        },
        "stream_parse": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMSelect": {
      "description": "VMSelect defines configuration section for vmselect components of the victoria-metrics cluster",
      "type": "object",
      "properties": {
        "affinity": {
          "description": "Affinity If specified, the pod's scheduling constraints.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "cacheMountPath": {
          "description": "CacheMountPath allows to add cache persistent for VMSelect, will use \"/cache\" as default if not specified.",
          "type": "string"
        },
        "claimTemplates": {
          "description": "ClaimTemplates allows adding additional VolumeClaimTemplates for StatefulSet",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaim"
          }
        },
        "clusterNativeListenPort": {
          "description": "ClusterNativePort for multi-level cluster setup. More [details](https://docs.victoriametrics.com/victoriametrics/cluster-victoriametrics/#multi-level-cluster-setup)",
          "type": "string"
        },
        "configMaps": {
          "description": "ConfigMaps is a list of ConfigMaps in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/configs/CONFIGMAP_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "containers": {
          "description": "Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "disableAutomountServiceAccountToken": {
          "description": "DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0). Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access. For example, vmagent and vm-config-reloader requires k8s API access. Operator creates volumes with name: \"kube-api-access\", which can be used as volumeMount for extraContainers if needed. And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.",
          "type": "boolean"
        },
        "disableSelfServiceScrape": {
          "description": "DisableSelfServiceScrape controls creation of VMServiceScrape by operator for the application. Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable",
          "type": "boolean"
        },
        "dnsConfig": {
          "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "description": "DNSPolicy sets DNS policy for the pod",
          "type": "string"
        },
        "extraArgs": {
          "description": "ExtraArgs that will be passed to the application container for example remoteWrite.tmpDataPath: /tmp",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "extraEnvs": {
          "description": "ExtraEnvs that will be passed to the application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "extraEnvsFrom": {
          "description": "ExtraEnvsFrom defines source of env variables for the application container could either be secret or configmap",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "hostAliases": {
          "description": "HostAliases provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hostNetwork": {
          "description": "HostNetwork controls whether the pod may use the node network namespace",
          "type": "boolean"
        },
        "host_aliases": {
          "description": "HostAliasesUnderScore provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork. Has Priority over hostAliases field",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hpa": {
          "description": "Configures horizontal pod autoscaling. Note, enabling this option disables vmselect to vmselect communication. In most cases it's not an issue.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedHPA"
        },
        "image": {
          "description": "Image - docker image settings if no specified operator uses default version from operator config",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Image"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "initContainers": {
          "description": "InitContainers allows adding initContainers to the pod definition. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "livenessProbe": {
          "description": "LivenessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "logFormat": {
          "description": "LogFormat for VMSelect to be configured with. default or json",
          "type": "string"
        },
        "logLevel": {
          "description": "LogLevel for VMSelect to be configured with.",
          "type": "string"
        },
        "minReadySeconds": {
          "description": "MinReadySeconds defines a minimum number of seconds to wait before starting update next pod if previous in healthy state Has no effect for VLogs and VMSingle",
          "type": "integer",
          "format": "int32"
        },
        "nodeSelector": {
          "description": "NodeSelector Define which Nodes the Pods are scheduled on.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "paused": {
          "description": "Paused If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.",
          "type": "boolean"
        },
        "persistentVolume": {
          "description": "Storage - add persistent volume for cacheMountPath its useful for persistent cache use storage instead of persistentVolume.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.StorageSpec"
        },
        "persistentVolumeClaimRetentionPolicy": {
          "description": "PersistentVolumeClaimRetentionPolicy allows configuration of PVC retention policy",
          "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy"
        },
        "podDisruptionBudget": {
          "description": "PodDisruptionBudget created by operator",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedPodDisruptionBudgetSpec"
        },
        "podMetadata": {
          "description": "PodMetadata configures Labels and Annotations which are propagated to the VMSelect pods.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "port": {
          "description": "Port listen address",
          "type": "string"
        },
        "priorityClassName": {
          "description": "PriorityClassName class assigned to the Pods",
          "type": "string"
        },
        "readinessGates": {
          "description": "ReadinessGates defines pod readiness gates",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
          }
        },
        "readinessProbe": {
          "description": "ReadinessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "replicaCount": {
          "description": "ReplicaCount is the expected size of the Application.",
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "revisionHistoryLimitCount": {
          "description": "The number of old ReplicaSets to retain to allow rollback in deployment or maximum number of revisions that will be maintained in the Deployment revision history. Has no effect at StatefulSets Defaults to 10.",
          "type": "integer",
          "format": "int32"
        },
        "rollingUpdateStrategy": {
          "description": "RollingUpdateStrategy defines strategy for application updates Default is OnDelete, in this case operator handles update process Can be changed for RollingUpdate",
          "type": "string"
        },
        "rollingUpdateStrategyBehavior": {
          "description": "RollingUpdateStrategyBehavior defines customized behavior for rolling updates. It applies if the RollingUpdateStrategy is set to OnDelete, which is the default.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.StatefulSetUpdateStrategyBehavior"
        },
        "runtimeClassName": {
          "description": "RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/",
          "type": "string"
        },
        "schedulerName": {
          "description": "SchedulerName - defines kubernetes scheduler name",
          "type": "string"
        },
        "secrets": {
          "description": "Secrets is a list of Secrets in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/secrets/SECRET_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SecurityContext"
        },
        "serviceScrapeSpec": {
          "description": "ServiceScrapeSpec that will be added to vmselect VMServiceScrape spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMServiceScrapeSpec"
        },
        "serviceSpec": {
          "description": "ServiceSpec that will be added to vmselect service spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AdditionalServiceSpec"
        },
        "startupProbe": {
          "description": "StartupProbe that will be added to CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "storage": {
          "description": "StorageSpec - add persistent volume claim for cacheMountPath its needed for persistent cache",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.StorageSpec"
        },
        "terminationGracePeriodSeconds": {
          "description": "TerminationGracePeriodSeconds period for container graceful termination",
          "type": "integer",
          "format": "int64"
        },
        "tolerations": {
          "description": "Tolerations If specified, the pod's tolerations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          }
        },
        "topologySpreadConstraints": {
          "description": "TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
          }
        },
        "useDefaultResources": {
          "description": "UseDefaultResources controls resource settings By default, operator sets built-in resource requirements",
          "type": "boolean"
        },
        "useStrictSecurity": {
          "description": "UseStrictSecurity enables strict security mode for component it restricts disk writes access uses non-root user out of the box drops not needed security permissions",
          "type": "boolean"
        },
        "volumeMounts": {
          "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the Application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          }
        },
        "volumes": {
          "description": "Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition. Volumes specified will be appended to other volumes that are generated. / +optional",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMServiceScrape": {
      "description": "VMServiceScrape is scrape configuration for endpoints associated with kubernetes service, it generates scrape configuration for vmagent based on selectors. result config will scrape service endpoints",
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMServiceScrapeSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ScrapeObjectStatus"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMServiceScrapeSpec": {
      "description": "VMServiceScrapeSpec defines the desired state of VMServiceScrape",
      "type": "object",
      "required": [
        "endpoints"
      ],
      "properties": {
        "attach_metadata": {
          "description": "AttachMetadata configures metadata attaching from service discovery",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AttachMetadata"
        },
        "discoveryRole": {
          "description": "DiscoveryRole - defines kubernetes_sd role for objects discovery. by default, its endpoints. can be changed to service or endpointslices. note, that with service setting, you have to use port: \"name\" and cannot use targetPort for endpoints.",
          "type": "string"
        },
        "endpoints": {
          "description": "A list of endpoints allowed as part of this ServiceScrape.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Endpoint"
          }
        },
        "jobLabel": {
          "description": "The label to use to retrieve the job name from.",
          "type": "string"
        },
        "namespaceSelector": {
          "description": "Selector to select which namespaces the Endpoints objects are discovered from.",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.NamespaceSelector"
        },
        "podTargetLabels": {
          "description": "PodTargetLabels transfers labels on the Kubernetes Pod onto the target.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "sampleLimit": {
          "description": "SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.",
          "type": "integer",
          "format": "int64"
        },
        "selector": {
          "description": "Selector to select Endpoints objects by corresponding Service labels.",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "seriesLimit": {
          "description": "SeriesLimit defines per-scrape limit on number of unique time series a single target can expose during all the scrapes on the time window of 24h.",
          "type": "integer",
          "format": "int64"
        },
        "targetLabels": {
          "description": "TargetLabels transfers labels on the Kubernetes Service onto the target.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMSingle": {
      "description": "VMSingle  is fast, cost-effective and scalable time-series database.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMSingleSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMSingleStatus"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMSingleSpec": {
      "description": "VMSingleSpec defines the desired state of VMSingle",
      "type": "object",
      "properties": {
        "affinity": {
          "description": "Affinity If specified, the pod's scheduling constraints.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "configMaps": {
          "description": "ConfigMaps is a list of ConfigMaps in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/configs/CONFIGMAP_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "containers": {
          "description": "Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "disableAutomountServiceAccountToken": {
          "description": "DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0). Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access. For example, vmagent and vm-config-reloader requires k8s API access. Operator creates volumes with name: \"kube-api-access\", which can be used as volumeMount for extraContainers if needed. And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.",
          "type": "boolean"
        },
        "disableSelfServiceScrape": {
          "description": "DisableSelfServiceScrape controls creation of VMServiceScrape by operator for the application. Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable",
          "type": "boolean"
        },
        "dnsConfig": {
          "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "description": "DNSPolicy sets DNS policy for the pod",
          "type": "string"
        },
        "extraArgs": {
          "description": "ExtraArgs that will be passed to the application container for example remoteWrite.tmpDataPath: /tmp",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "extraEnvs": {
          "description": "ExtraEnvs that will be passed to the application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "extraEnvsFrom": {
          "description": "ExtraEnvsFrom defines source of env variables for the application container could either be secret or configmap",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "hostAliases": {
          "description": "HostAliases provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hostNetwork": {
          "description": "HostNetwork controls whether the pod may use the node network namespace",
          "type": "boolean"
        },
        "host_aliases": {
          "description": "HostAliasesUnderScore provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork. Has Priority over hostAliases field",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "image": {
          "description": "Image - docker image settings if no specified operator uses default version from operator config",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Image"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "initContainers": {
          "description": "InitContainers allows adding initContainers to the pod definition. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "insertPorts": {
          "description": "InsertPorts - additional listen ports for data ingestion.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.InsertPorts"
        },
        "license": {
          "description": "License allows to configure license key to be used for enterprise features. Using license key is supported starting from VictoriaMetrics v1.94.0. See [here](https://docs.victoriametrics.com/victoriametrics/enterprise/)",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.License"
        },
        "livenessProbe": {
          "description": "LivenessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "logFormat": {
          "description": "LogFormat for VMSingle to be configured with.",
          "type": "string"
        },
        "logLevel": {
          "description": "LogLevel for victoria metrics single to be configured with.",
          "type": "string"
        },
        "managedMetadata": {
          "description": "ManagedMetadata defines metadata that will be added to the all objects created by operator for the given CustomResource",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ManagedObjectsMetadata"
        },
        "minReadySeconds": {
          "description": "MinReadySeconds defines a minimum number of seconds to wait before starting update next pod if previous in healthy state Has no effect for VLogs and VMSingle",
          "type": "integer",
          "format": "int32"
        },
        "nodeSelector": {
          "description": "NodeSelector Define which Nodes the Pods are scheduled on.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "paused": {
          "description": "Paused If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.",
          "type": "boolean"
        },
        "podMetadata": {
          "description": "PodMetadata configures Labels and Annotations which are propagated to the VMSingle pods.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "port": {
          "description": "Port listen address",
          "type": "string"
        },
        "priorityClassName": {
          "description": "PriorityClassName class assigned to the Pods",
          "type": "string"
        },
        "readinessGates": {
          "description": "ReadinessGates defines pod readiness gates",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
          }
        },
        "readinessProbe": {
          "description": "ReadinessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "removePvcAfterDelete": {
          "description": "RemovePvcAfterDelete - if true, controller adds ownership to pvc and after VMSingle object deletion - pvc will be garbage collected by controller manager",
          "type": "boolean"
        },
        "replicaCount": {
          "description": "ReplicaCount is the expected size of the Application.",
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "retentionPeriod": {
          "description": "RetentionPeriod defines how long to retain stored metrics, specified as a duration (e.g., \"1d\", \"1w\", \"1m\"). Data with timestamps outside the RetentionPeriod is automatically deleted. The minimum allowed value is 1d, or 24h. The default value is 1 (one month). See [retention](https://docs.victoriametrics.com/victoriametrics/single-server-victoriametrics/#retention) docs for details.",
          "type": "string"
        },
        "revisionHistoryLimitCount": {
          "description": "The number of old ReplicaSets to retain to allow rollback in deployment or maximum number of revisions that will be maintained in the Deployment revision history. Has no effect at StatefulSets Defaults to 10.",
          "type": "integer",
          "format": "int32"
        },
        "runtimeClassName": {
          "description": "RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/",
          "type": "string"
        },
        "schedulerName": {
          "description": "SchedulerName - defines kubernetes scheduler name",
          "type": "string"
        },
        "secrets": {
          "description": "Secrets is a list of Secrets in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/secrets/SECRET_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SecurityContext"
        },
        "serviceAccountName": {
          "description": "ServiceAccountName is the name of the ServiceAccount to use to run the pods",
          "type": "string"
        },
        "serviceScrapeSpec": {
          "description": "ServiceScrapeSpec that will be added to vmsingle VMServiceScrape spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMServiceScrapeSpec"
        },
        "serviceSpec": {
          "description": "ServiceSpec that will be added to vmsingle service spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AdditionalServiceSpec"
        },
        "startupProbe": {
          "description": "StartupProbe that will be added to CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "storage": {
          "description": "Storage is the definition of how storage will be used by the VMSingle by default it`s empty dir this option is ignored if storageDataPath is set",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        },
        "storageDataPath": {
          "description": "StorageDataPath disables spec.storage option and overrides arg for victoria-metrics binary --storageDataPath, its users responsibility to mount proper device into given path. It requires to provide spec.volumes and spec.volumeMounts with at least 1 value",
          "type": "string"
        },
        "storageMetadata": {
          "description": "StorageMeta defines annotations and labels attached to PVC for given vmsingle CR",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "streamAggrConfig": {
          "description": "StreamAggrConfig defines stream aggregation configuration for VMSingle",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.StreamAggrConfig"
        },
        "terminationGracePeriodSeconds": {
          "description": "TerminationGracePeriodSeconds period for container graceful termination",
          "type": "integer",
          "format": "int64"
        },
        "tolerations": {
          "description": "Tolerations If specified, the pod's tolerations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          }
        },
        "topologySpreadConstraints": {
          "description": "TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
          }
        },
        "useDefaultResources": {
          "description": "UseDefaultResources controls resource settings By default, operator sets built-in resource requirements",
          "type": "boolean"
        },
        "useStrictSecurity": {
          "description": "UseStrictSecurity enables strict security mode for component it restricts disk writes access uses non-root user out of the box drops not needed security permissions",
          "type": "boolean"
        },
        "vmBackup": {
          "description": "VMBackup configuration for backup",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMBackup"
        },
        "volumeMounts": {
          "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the Application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          }
        },
        "volumes": {
          "description": "Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition. Volumes specified will be appended to other volumes that are generated. / +optional",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMSingleStatus": {
      "description": "VMSingleStatus defines the observed state of VMSingle",
      "type": "object",
      "properties": {
        "observedGeneration": {
          "description": "ObservedGeneration defines current generation picked by operator for the reconcile",
          "type": "integer",
          "format": "int64"
        },
        "reason": {
          "description": "Reason defines human readable error reason",
          "type": "string"
        },
        "singleStatus": {
          "description": "LegacyStatus is deprecated and will be removed at v0.52.0 version",
          "type": "string"
        },
        "updateStatus": {
          "description": "UpdateStatus defines a status for update rollout",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMStaticScrape": {
      "description": "VMStaticScrape  defines static targets configuration for scraping.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMStaticScrapeSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ScrapeObjectStatus"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMStaticScrapeSpec": {
      "description": "VMStaticScrapeSpec defines the desired state of VMStaticScrape.",
      "type": "object",
      "required": [
        "targetEndpoints"
      ],
      "properties": {
        "jobName": {
          "description": "JobName name of job.",
          "type": "string"
        },
        "sampleLimit": {
          "description": "SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.",
          "type": "integer",
          "format": "int64"
        },
        "seriesLimit": {
          "description": "SeriesLimit defines per-scrape limit on number of unique time series a single target can expose during all the scrapes on the time window of 24h.",
          "type": "integer",
          "format": "int64"
        },
        "targetEndpoints": {
          "description": "A list of target endpoints to scrape metrics from.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TargetEndpoint"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMStorage": {
      "type": "object",
      "properties": {
        "affinity": {
          "description": "Affinity If specified, the pod's scheduling constraints.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "claimTemplates": {
          "description": "ClaimTemplates allows adding additional VolumeClaimTemplates for StatefulSet",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaim"
          }
        },
        "configMaps": {
          "description": "ConfigMaps is a list of ConfigMaps in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/configs/CONFIGMAP_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "containers": {
          "description": "Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "disableAutomountServiceAccountToken": {
          "description": "DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0). Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access. For example, vmagent and vm-config-reloader requires k8s API access. Operator creates volumes with name: \"kube-api-access\", which can be used as volumeMount for extraContainers if needed. And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.",
          "type": "boolean"
        },
        "disableSelfServiceScrape": {
          "description": "DisableSelfServiceScrape controls creation of VMServiceScrape by operator for the application. Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable",
          "type": "boolean"
        },
        "dnsConfig": {
          "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "description": "DNSPolicy sets DNS policy for the pod",
          "type": "string"
        },
        "extraArgs": {
          "description": "ExtraArgs that will be passed to the application container for example remoteWrite.tmpDataPath: /tmp",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "extraEnvs": {
          "description": "ExtraEnvs that will be passed to the application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "extraEnvsFrom": {
          "description": "ExtraEnvsFrom defines source of env variables for the application container could either be secret or configmap",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "hostAliases": {
          "description": "HostAliases provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "hostNetwork": {
          "description": "HostNetwork controls whether the pod may use the node network namespace",
          "type": "boolean"
        },
        "host_aliases": {
          "description": "HostAliasesUnderScore provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork. Has Priority over hostAliases field",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          }
        },
        "image": {
          "description": "Image - docker image settings if no specified operator uses default version from operator config",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Image"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "initContainers": {
          "description": "InitContainers allows adding initContainers to the pod definition. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          }
        },
        "livenessProbe": {
          "description": "LivenessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "logFormat": {
          "description": "LogFormat for VMStorage to be configured with. default or json",
          "type": "string"
        },
        "logLevel": {
          "description": "LogLevel for VMStorage to be configured with.",
          "type": "string"
        },
        "maintenanceInsertNodeIDs": {
          "description": "MaintenanceInsertNodeIDs - excludes given node ids from insert requests routing, must contain pod suffixes - for pod-0, id will be 0 and etc. lets say, you have pod-0, pod-1, pod-2, pod-3. to exclude pod-0 and pod-3 from insert routing, define nodeIDs: [0,3]. Useful at storage expanding, when you want to rebalance some data at cluster.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        },
        "maintenanceSelectNodeIDs": {
          "description": "MaintenanceInsertNodeIDs - excludes given node ids from select requests routing, must contain pod suffixes - for pod-0, id will be 0 and etc.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        },
        "minReadySeconds": {
          "description": "MinReadySeconds defines a minimum number of seconds to wait before starting update next pod if previous in healthy state Has no effect for VLogs and VMSingle",
          "type": "integer",
          "format": "int32"
        },
        "nodeSelector": {
          "description": "NodeSelector Define which Nodes the Pods are scheduled on.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "paused": {
          "description": "Paused If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.",
          "type": "boolean"
        },
        "persistentVolumeClaimRetentionPolicy": {
          "description": "PersistentVolumeClaimRetentionPolicy allows configuration of PVC retention policy",
          "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy"
        },
        "podDisruptionBudget": {
          "description": "PodDisruptionBudget created by operator",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedPodDisruptionBudgetSpec"
        },
        "podMetadata": {
          "description": "PodMetadata configures Labels and Annotations which are propagated to the VMStorage pods.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
        },
        "port": {
          "description": "Port listen address",
          "type": "string"
        },
        "priorityClassName": {
          "description": "PriorityClassName class assigned to the Pods",
          "type": "string"
        },
        "readinessGates": {
          "description": "ReadinessGates defines pod readiness gates",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
          }
        },
        "readinessProbe": {
          "description": "ReadinessProbe that will be added CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "replicaCount": {
          "description": "ReplicaCount is the expected size of the Application.",
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "revisionHistoryLimitCount": {
          "description": "The number of old ReplicaSets to retain to allow rollback in deployment or maximum number of revisions that will be maintained in the Deployment revision history. Has no effect at StatefulSets Defaults to 10.",
          "type": "integer",
          "format": "int32"
        },
        "rollingUpdateStrategy": {
          "description": "RollingUpdateStrategy defines strategy for application updates Default is OnDelete, in this case operator handles update process Can be changed for RollingUpdate",
          "type": "string"
        },
        "rollingUpdateStrategyBehavior": {
          "description": "RollingUpdateStrategyBehavior defines customized behavior for rolling updates. It applies if the RollingUpdateStrategy is set to OnDelete, which is the default.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.StatefulSetUpdateStrategyBehavior"
        },
        "runtimeClassName": {
          "description": "RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/",
          "type": "string"
        },
        "schedulerName": {
          "description": "SchedulerName - defines kubernetes scheduler name",
          "type": "string"
        },
        "secrets": {
          "description": "Secrets is a list of Secrets in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/secrets/SECRET_NAME folder",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SecurityContext"
        },
        "serviceScrapeSpec": {
          "description": "ServiceScrapeSpec that will be added to vmstorage VMServiceScrape spec",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMServiceScrapeSpec"
        },
        "serviceSpec": {
          "description": "ServiceSpec that will be create additional service for vmstorage",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AdditionalServiceSpec"
        },
        "startupProbe": {
          "description": "StartupProbe that will be added to CRD pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "storage": {
          "description": "Storage - add persistent volume for StorageDataPath its useful for persistent cache",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.StorageSpec"
        },
        "storageDataPath": {
          "description": "StorageDataPath - path to storage data",
          "type": "string"
        },
        "terminationGracePeriodSeconds": {
          "description": "TerminationGracePeriodSeconds period for container graceful termination",
          "type": "integer",
          "format": "int64"
        },
        "tolerations": {
          "description": "Tolerations If specified, the pod's tolerations.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          }
        },
        "topologySpreadConstraints": {
          "description": "TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
          }
        },
        "useDefaultResources": {
          "description": "UseDefaultResources controls resource settings By default, operator sets built-in resource requirements",
          "type": "boolean"
        },
        "useStrictSecurity": {
          "description": "UseStrictSecurity enables strict security mode for component it restricts disk writes access uses non-root user out of the box drops not needed security permissions",
          "type": "boolean"
        },
        "vmBackup": {
          "description": "VMBackup configuration for backup",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMBackup"
        },
        "vmInsertPort": {
          "description": "VMInsertPort for VMInsert connections",
          "type": "string"
        },
        "vmSelectPort": {
          "description": "VMSelectPort for VMSelect connections",
          "type": "string"
        },
        "volumeMounts": {
          "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the Application container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          }
        },
        "volumes": {
          "description": "Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition. Volumes specified will be appended to other volumes that are generated. / +optional",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMUser": {
      "description": "VMUser is the Schema for the vmusers API",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMUserSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMUserStatus"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMUserIPFilters": {
      "description": "VMUserIPFilters defines filters for IP addresses supported only with enterprise version of [vmauth](https://docs.victoriametrics.com/victoriametrics/vmauth/#ip-filters)",
      "type": "object",
      "properties": {
        "allow_list": {
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "deny_list": {
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMUserSpec": {
      "description": "VMUserSpec defines the desired state of VMUser",
      "type": "object",
      "required": [
        "targetRefs"
      ],
      "properties": {
        "bearerToken": {
          "description": "BearerToken Authorization header value for accessing protected endpoint.",
          "type": "string"
        },
        "default_url": {
          "description": "DefaultURLs backend url for non-matching paths filter usually used for default backend with error message",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "disable_secret_creation": {
          "description": "DisableSecretCreation skips related secret creation for vmuser",
          "type": "boolean"
        },
        "discover_backend_ips": {
          "description": "DiscoverBackendIPs instructs discovering URLPrefix backend IPs via DNS.",
          "type": "boolean"
        },
        "drop_src_path_prefix_parts": {
          "description": "DropSrcPathPrefixParts is the number of `/`-delimited request path prefix parts to drop before proxying the request to backend. See [here](https://docs.victoriametrics.com/victoriametrics/vmauth/#dropping-request-path-prefix) for more details.",
          "type": "integer",
          "format": "int32"
        },
        "dump_request_on_errors": {
          "description": "DumpRequestOnErrors instructs vmauth to return detailed request params to the client if routing rules don't allow to forward request to the backends. Useful for debugging `src_hosts` and `src_headers` based routing rules\n\navailable since v1.107.0 vmauth version",
          "type": "boolean"
        },
        "generatePassword": {
          "description": "GeneratePassword instructs operator to generate password for user if spec.password if empty.",
          "type": "boolean"
        },
        "headers": {
          "description": "Headers represent additional http headers, that vmauth uses in form of [\"header_key: header_value\"] multiple values for header key: [\"header_key: value1,value2\"] it's available since 1.68.0 version of vmauth",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "ip_filters": {
          "description": "IPFilters defines per target src ip filters supported only with enterprise version of [vmauth](https://docs.victoriametrics.com/victoriametrics/vmauth/#ip-filters)",
          "default": {},
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMUserIPFilters"
        },
        "load_balancing_policy": {
          "description": "LoadBalancingPolicy defines load balancing policy to use for backend urls. Supported policies: least_loaded, first_available. See [here](https://docs.victoriametrics.com/victoriametrics/vmauth/#load-balancing) for more details (default \"least_loaded\")",
          "type": "string"
        },
        "max_concurrent_requests": {
          "description": "MaxConcurrentRequests defines max concurrent requests per user 300 is default value for vmauth",
          "type": "integer",
          "format": "int32"
        },
        "metric_labels": {
          "description": "MetricLabels - additional labels for metrics exported by vmauth for given user.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "name": {
          "description": "Name of the VMUser object.",
          "type": "string"
        },
        "password": {
          "description": "Password basic auth password for accessing protected endpoint.",
          "type": "string"
        },
        "passwordRef": {
          "description": "PasswordRef allows fetching password from user-create secret by its name and key.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "response_headers": {
          "description": "ResponseHeaders represent additional http headers, that vmauth adds for request response in form of [\"header_key: header_value\"] multiple values for header key: [\"header_key: value1,value2\"] it's available since 1.93.0 version of vmauth",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "retry_status_codes": {
          "description": "RetryStatusCodes defines http status codes in numeric format for request retries e.g. [429,503]",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        },
        "targetRefs": {
          "description": "TargetRefs - reference to endpoints, which user may access.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TargetRef"
          }
        },
        "tlsConfig": {
          "description": "TLSConfig defines tls configuration for the backend connection",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.TLSConfig"
        },
        "tokenRef": {
          "description": "TokenRef allows fetching token from user-created secrets by its name and key.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "username": {
          "description": "UserName basic auth user name for accessing protected endpoint, will be replaced with metadata.name of VMUser if omitted.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VMUserStatus": {
      "description": "VMUserStatus defines the observed state of VMUser",
      "type": "object",
      "properties": {
        "observedGeneration": {
          "description": "ObservedGeneration defines current generation picked by operator for the reconcile",
          "type": "integer",
          "format": "int64"
        },
        "reason": {
          "description": "Reason defines human readable error reason",
          "type": "string"
        },
        "updateStatus": {
          "description": "UpdateStatus defines a status for update rollout",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.VictorOpsConfig": {
      "description": "VictorOpsConfig configures notifications via VictorOps. See https://prometheus.io/docs/alerting/latest/configuration/#victorops_config",
      "type": "object",
      "required": [
        "routing_key"
      ],
      "properties": {
        "api_key": {
          "description": "The secret's key that contains the API key to use when talking to the VictorOps API. It must be at them same namespace as CRD fallback to global setting if empty",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "api_url": {
          "description": "The VictorOps API URL.",
          "type": "string"
        },
        "custom_fields": {
          "description": "Adds optional custom fields https://github.com/prometheus/alertmanager/blob/v0.24.0/config/notifiers.go#L537",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "entity_display_name": {
          "description": "Contains summary of the alerted problem.",
          "type": "string"
        },
        "http_config": {
          "description": "The HTTP client's configuration.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.HTTPConfig"
        },
        "message_type": {
          "description": "Describes the behavior of the alert (CRITICAL, WARNING, INFO).",
          "type": "string"
        },
        "monitoring_tool": {
          "description": "The monitoring tool the state message is from.",
          "type": "string"
        },
        "routing_key": {
          "description": "A key used to map the alert to a team.",
          "type": "string",
          "default": ""
        },
        "send_resolved": {
          "description": "SendResolved controls notify about resolved alerts.",
          "type": "boolean"
        },
        "state_message": {
          "description": "Contains long explanation of the alerted problem.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.WeChatConfig": {
      "description": "WeChatConfig configures notifications via WeChat. See https://prometheus.io/docs/alerting/latest/configuration/#wechat_config",
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string"
        },
        "api_secret": {
          "description": "The secret's key that contains the WeChat API key. The secret needs to be in the same namespace as the AlertmanagerConfig fallback to global alertmanager setting if empty",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "api_url": {
          "description": "The WeChat API URL. fallback to global alertmanager setting if empty",
          "type": "string"
        },
        "corp_id": {
          "description": "The corp id for authentication. fallback to global alertmanager setting if empty",
          "type": "string"
        },
        "http_config": {
          "description": "HTTP client configuration.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.HTTPConfig"
        },
        "message": {
          "description": "API request data as defined by the WeChat API.",
          "type": "string"
        },
        "message_type": {
          "type": "string"
        },
        "send_resolved": {
          "description": "SendResolved controls notify about resolved alerts.",
          "type": "boolean"
        },
        "to_party": {
          "type": "string"
        },
        "to_tag": {
          "type": "string"
        },
        "to_user": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.WebexConfig": {
      "type": "object",
      "required": [
        "room_id"
      ],
      "properties": {
        "api_url": {
          "description": "The Webex Teams API URL, i.e. https://webexapis.com/v1/messages",
          "type": "string"
        },
        "http_config": {
          "description": "HTTP client configuration. You must use this configuration to supply the bot token as part of the HTTP `Authorization` header.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.HTTPConfig"
        },
        "message": {
          "description": "The message body template",
          "type": "string"
        },
        "room_id": {
          "description": "The ID of the Webex Teams room where to send the messages",
          "type": "string"
        },
        "send_resolved": {
          "description": "SendResolved controls notify about resolved alerts.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "com.victoriametrics.operator.api.operator.v1beta1.WebhookConfig": {
      "description": "WebhookConfig configures notifications via a generic receiver supporting the webhook payload. See https://prometheus.io/docs/alerting/latest/configuration/#webhook_config",
      "type": "object",
      "properties": {
        "http_config": {
          "description": "HTTP client configuration.",
          "$ref": "#/definitions/com.victoriametrics.operator.api.operator.v1beta1.HTTPConfig"
        },
        "max_alerts": {
          "description": "Maximum number of alerts to be sent per webhook message. When 0, all alerts are included.",
          "type": "integer",
          "format": "int32"
        },
        "send_resolved": {
          "description": "SendResolved controls notify about resolved alerts.",
          "type": "boolean"
        },
        "timeout": {
          "description": "Timeout is the maximum time allowed to invoke the webhook available since v0.28.0 alertmanager version",
          "type": "string"
        },
        "url": {
          "description": "URL to send requests to, one of `urlSecret` and `url` must be defined.",
          "type": "string"
        },
        "url_secret": {
          "description": "URLSecret defines secret name and key at the CRD namespace. It must contain the webhook URL. one of `urlSecret` and `url` must be defined.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.apps.v1.RollingUpdateDeployment": {
      "description": "Spec to control the desired behavior of rolling update.",
      "type": "object",
      "properties": {
        "maxSurge": {
          "description": "The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 25%. Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new ReplicaSet can be scaled up further, ensuring that total number of pods running at any time during the update is at most 130% of desired pods.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "maxUnavailable": {
          "description": "The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 25%. Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy": {
      "description": "StatefulSetPersistentVolumeClaimRetentionPolicy describes the policy used for PVCs created from the StatefulSet VolumeClaimTemplates.",
      "type": "object",
      "properties": {
        "whenDeleted": {
          "description": "WhenDeleted specifies what happens to PVCs created from StatefulSet VolumeClaimTemplates when the StatefulSet is deleted. The default policy of `Retain` causes PVCs to not be affected by StatefulSet deletion. The `Delete` policy causes those PVCs to be deleted.",
          "type": "string"
        },
        "whenScaled": {
          "description": "WhenScaled specifies what happens to PVCs created from StatefulSet VolumeClaimTemplates when the StatefulSet is scaled down. The default policy of `Retain` causes PVCs to not be affected by a scaledown. The `Delete` policy causes the associated PVCs for any excess pods above the replica count to be deleted.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerBehavior": {
      "description": "HorizontalPodAutoscalerBehavior configures the scaling behavior of the target in both Up and Down directions (scaleUp and scaleDown fields respectively).",
      "type": "object",
      "properties": {
        "scaleDown": {
          "description": "scaleDown is scaling policy for scaling Down. If not set, the default value is to allow to scale down to minReplicas pods, with a 300 second stabilization window (i.e., the highest recommendation for the last 300sec is used).",
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.HPAScalingRules"
        },
        "scaleUp": {
          "description": "scaleUp is scaling policy for scaling Up. If not set, the default value is the higher of:\n  * increase no more than 4 pods per 60 seconds\n  * double the number of pods per 60 seconds\nNo stabilization is used.",
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.HPAScalingRules"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.autoscaling.v2.MetricSpec": {
      "description": "MetricSpec specifies how to scale based on a single metric (only `type` and one other matching field should be set at once).",
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "containerResource": {
          "description": "containerResource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing a single container in each pod of the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.",
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.ContainerResourceMetricSource"
        },
        "external": {
          "description": "external refers to a global metric that is not associated with any Kubernetes object. It allows autoscaling based on information coming from components running outside of cluster (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).",
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.ExternalMetricSource"
        },
        "object": {
          "description": "object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object).",
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.ObjectMetricSource"
        },
        "pods": {
          "description": "pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second).  The values will be averaged together before being compared to the target value.",
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.PodsMetricSource"
        },
        "resource": {
          "description": "resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \"pods\" source.",
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.ResourceMetricSource"
        },
        "type": {
          "description": "type is the type of metric source.  It should be one of \"ContainerResource\", \"External\", \"Object\", \"Pods\" or \"Resource\", each mapping to a matching field in the object.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.Affinity": {
      "description": "Affinity is a group of affinity scheduling rules.",
      "type": "object",
      "properties": {
        "nodeAffinity": {
          "description": "Describes node affinity scheduling rules for the pod.",
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeAffinity"
        },
        "podAffinity": {
          "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinity"
        },
        "podAntiAffinity": {
          "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodAntiAffinity"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.AppArmorProfile": {
      "description": "AppArmorProfile defines a pod or container's AppArmor settings.",
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "localhostProfile": {
          "description": "localhostProfile indicates a profile loaded on the node that should be used. The profile must be preconfigured on the node to work. Must match the loaded name of the profile. Must be set if and only if type is \"Localhost\".",
          "type": "string"
        },
        "type": {
          "description": "type indicates which kind of AppArmor profile will be applied. Valid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
          "type": "string"
        }
      },
      "x-kubernetes-unions": [
        {
          "discriminator": "type",
          "fields-to-discriminateBy": {
            "localhostProfile": "LocalhostProfile"
          }
        }
      ],
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.Capabilities": {
      "description": "Adds and removes POSIX capabilities from running containers.",
      "type": "object",
      "properties": {
        "add": {
          "description": "Added capabilities",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "drop": {
          "description": "Removed capabilities",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.ConfigMapKeySelector": {
      "description": "Selects a key from a ConfigMap.",
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "key": {
          "description": "The key to select.",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the ConfigMap or its key must be defined",
          "type": "boolean"
        }
      },
      "x-kubernetes-map-type": "atomic",
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.Container": {
      "description": "A single application container that you want to run within a pod.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "args": {
          "description": "Arguments to the entrypoint. The container image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "command": {
          "description": "Entrypoint array. Not executed within a shell. The container image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "env": {
          "description": "List of environment variables to set in the container. Cannot be updated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          },
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "envFrom": {
          "description": "List of sources to populate environment variables in the container. The keys defined within a source may consist of any printable ASCII characters except '='. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "image": {
          "description": "Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
          "type": "string"
        },
        "imagePullPolicy": {
          "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
          "type": "string"
        },
        "lifecycle": {
          "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Lifecycle"
        },
        "livenessProbe": {
          "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "name": {
          "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
          "type": "string"
        },
        "ports": {
          "description": "List of ports to expose from the container. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Modifying this array with strategic merge patch may corrupt the data. For more information See https://github.com/kubernetes/kubernetes/issues/108255. Cannot be updated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerPort"
          },
          "x-kubernetes-list-map-keys": [
            "containerPort",
            "protocol"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "containerPort",
          "x-kubernetes-patch-strategy": "merge"
        },
        "readinessProbe": {
          "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "resizePolicy": {
          "description": "Resources resize policy for the container.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerResizePolicy"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "resources": {
          "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "restartPolicy": {
          "description": "RestartPolicy defines the restart behavior of individual containers in a pod. This overrides the pod-level restart policy. When this field is not specified, the restart behavior is defined by the Pod's restart policy and the container type. Additionally, setting the RestartPolicy as \"Always\" for the init container will have the following effect: this init container will be continually restarted on exit until all regular containers have terminated. Once all regular containers have completed, all init containers with restartPolicy \"Always\" will be shut down. This lifecycle differs from normal init containers and is often referred to as a \"sidecar\" container. Although this init container still starts in the init container sequence, it does not wait for the container to complete before proceeding to the next init container. Instead, the next init container starts immediately after this init container is started, or after any startupProbe has successfully completed.",
          "type": "string"
        },
        "restartPolicyRules": {
          "description": "Represents a list of rules to be checked to determine if the container should be restarted on exit. The rules are evaluated in order. Once a rule matches a container exit condition, the remaining rules are ignored. If no rule matches the container exit condition, the Container-level restart policy determines the whether the container is restarted or not. Constraints on the rules: - At most 20 rules are allowed. - Rules can have the same action. - Identical rules are not forbidden in validations. When rules are specified, container MUST set RestartPolicy explicitly even it if matches the Pod's RestartPolicy.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerRestartRule"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "securityContext": {
          "description": "SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecurityContext"
        },
        "startupProbe": {
          "description": "StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "stdin": {
          "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
          "type": "boolean"
        },
        "stdinOnce": {
          "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
          "type": "boolean"
        },
        "terminationMessagePath": {
          "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
          "type": "string"
        },
        "terminationMessagePolicy": {
          "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
          "type": "string"
        },
        "tty": {
          "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.",
          "type": "boolean"
        },
        "volumeDevices": {
          "description": "volumeDevices is the list of block devices to be used by the container.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeDevice"
          },
          "x-kubernetes-list-map-keys": [
            "devicePath"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "devicePath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "volumeMounts": {
          "description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          },
          "x-kubernetes-list-map-keys": [
            "mountPath"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "mountPath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "workingDir": {
          "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.EmptyDirVolumeSource": {
      "description": "Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "properties": {
        "medium": {
          "description": "medium represents what type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
          "type": "string"
        },
        "sizeLimit": {
          "description": "sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.EnvFromSource": {
      "description": "EnvFromSource represents the source of a set of ConfigMaps or Secrets",
      "type": "object",
      "properties": {
        "configMapRef": {
          "description": "The ConfigMap to select from",
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapEnvSource"
        },
        "prefix": {
          "description": "Optional text to prepend to the name of each environment variable. May consist of any printable ASCII characters except '='.",
          "type": "string"
        },
        "secretRef": {
          "description": "The Secret to select from",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretEnvSource"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.EnvVar": {
      "description": "EnvVar represents an environment variable present in a Container.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "Name of the environment variable. May consist of any printable ASCII characters except '='.",
          "type": "string"
        },
        "value": {
          "description": "Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
          "type": "string"
        },
        "valueFrom": {
          "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
          "$ref": "#/definitions/io.k8s.api.core.v1.EnvVarSource"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.HostAlias": {
      "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.",
      "type": "object",
      "required": [
        "ip"
      ],
      "properties": {
        "hostnames": {
          "description": "Hostnames for the above IP address.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "ip": {
          "description": "IP address of the host file entry.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.LocalObjectReference": {
      "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        }
      },
      "x-kubernetes-map-type": "atomic",
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.PersistentVolumeClaim": {
      "description": "PersistentVolumeClaim is a user's request for and claim to a persistent volume",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "v1"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "PersistentVolumeClaim"
          ]
        },
        "metadata": {
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        },
        "status": {
          "description": "status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "PersistentVolumeClaim",
          "version": "v1"
        }
      ],
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimSpec": {
      "description": "PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes",
      "type": "object",
      "properties": {
        "accessModes": {
          "description": "accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "dataSource": {
          "description": "dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource.",
          "$ref": "#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference"
        },
        "dataSourceRef": {
          "description": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
          "$ref": "#/definitions/io.k8s.api.core.v1.TypedObjectReference"
        },
        "resources": {
          "description": "resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
          "$ref": "#/definitions/io.k8s.api.core.v1.VolumeResourceRequirements"
        },
        "selector": {
          "description": "selector is a label query over volumes to consider for binding.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "storageClassName": {
          "description": "storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
          "type": "string"
        },
        "volumeAttributesClassName": {
          "description": "volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim. If specified, the CSI driver will create or update the volume with the attributes defined in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName, it can be changed after the claim is created. An empty string or nil value indicates that no VolumeAttributesClass will be applied to the claim. If the claim enters an Infeasible error state, this field can be reset to its previous value (including nil) to cancel the modification. If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource exists. More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/",
          "type": "string"
        },
        "volumeMode": {
          "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.",
          "type": "string"
        },
        "volumeName": {
          "description": "volumeName is the binding reference to the PersistentVolume backing this claim.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimStatus": {
      "description": "PersistentVolumeClaimStatus is the current status of a persistent volume claim.",
      "type": "object",
      "properties": {
        "accessModes": {
          "description": "accessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "allocatedResourceStatuses": {
          "description": "allocatedResourceStatuses stores status of resource being resized for the given PVC. Key names follow standard Kubernetes label syntax. Valid values are either:\n\t* Un-prefixed keys:\n\t\t- storage - the capacity of the volume.\n\t* Custom resources must use implementation-defined prefixed names such as \"example.com/my-custom-resource\"\nApart from above values - keys that are unprefixed or have kubernetes.io prefix are considered reserved and hence may not be used.\n\nClaimResourceStatus can be in any of following states:\n\t- ControllerResizeInProgress:\n\t\tState set when resize controller starts resizing the volume in control-plane.\n\t- ControllerResizeFailed:\n\t\tState set when resize has failed in resize controller with a terminal error.\n\t- NodeResizePending:\n\t\tState set when resize controller has finished resizing the volume but further resizing of\n\t\tvolume is needed on the node.\n\t- NodeResizeInProgress:\n\t\tState set when kubelet starts resizing the volume.\n\t- NodeResizeFailed:\n\t\tState set when resizing has failed in kubelet with a terminal error. Transient errors don't set\n\t\tNodeResizeFailed.\nFor example: if expanding a PVC for more capacity - this field can be one of the following states:\n\t- pvc.status.allocatedResourceStatus['storage'] = \"ControllerResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"ControllerResizeFailed\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizePending\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizeFailed\"\nWhen this field is not set, it means that no resize operation is in progress for the given PVC.\n\nA controller that receives PVC update with previously unknown resourceName or ClaimResourceStatus should ignore the update for the purpose it was designed. For example - a controller that only is responsible for resizing capacity of the volume, should ignore PVC updates that change other valid resources associated with PVC.\n\nThis is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-kubernetes-map-type": "granular"
        },
        "allocatedResources": {
          "description": "allocatedResources tracks the resources allocated to a PVC including its capacity. Key names follow standard Kubernetes label syntax. Valid values are either:\n\t* Un-prefixed keys:\n\t\t- storage - the capacity of the volume.\n\t* Custom resources must use implementation-defined prefixed names such as \"example.com/my-custom-resource\"\nApart from above values - keys that are unprefixed or have kubernetes.io prefix are considered reserved and hence may not be used.\n\nCapacity reported here may be larger than the actual capacity when a volume expansion operation is requested. For storage quota, the larger value from allocatedResources and PVC.spec.resources is used. If allocatedResources is not set, PVC.spec.resources alone is used for quota calculation. If a volume expansion capacity request is lowered, allocatedResources is only lowered if there are no expansion operations in progress and if the actual volume capacity is equal or lower than the requested capacity.\n\nA controller that receives PVC update with previously unknown resourceName should ignore the update for the purpose it was designed. For example - a controller that only is responsible for resizing capacity of the volume, should ignore PVC updates that change other valid resources associated with PVC.\n\nThis is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "capacity": {
          "description": "capacity represents the actual resources of the underlying volume.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "conditions": {
          "description": "conditions is the current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'Resizing'.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimCondition"
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "currentVolumeAttributesClassName": {
          "description": "currentVolumeAttributesClassName is the current name of the VolumeAttributesClass the PVC is using. When unset, there is no VolumeAttributeClass applied to this PersistentVolumeClaim",
          "type": "string"
        },
        "modifyVolumeStatus": {
          "description": "ModifyVolumeStatus represents the status object of ControllerModifyVolume operation. When this is unset, there is no ModifyVolume operation being attempted.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ModifyVolumeStatus"
        },
        "phase": {
          "description": "phase represents the current phase of PersistentVolumeClaim.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.PodDNSConfig": {
      "description": "PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.",
      "type": "object",
      "properties": {
        "nameservers": {
          "description": "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "options": {
          "description": "A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfigOption"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "searches": {
          "description": "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.PodReadinessGate": {
      "description": "PodReadinessGate contains the reference to a pod condition",
      "type": "object",
      "required": [
        "conditionType"
      ],
      "properties": {
        "conditionType": {
          "description": "ConditionType refers to a condition in the pod's condition list with matching type.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.Probe": {
      "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
      "type": "object",
      "properties": {
        "exec": {
          "description": "Exec specifies a command to execute in the container.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ExecAction"
        },
        "failureThreshold": {
          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
          "type": "integer",
          "format": "int32"
        },
        "grpc": {
          "description": "GRPC specifies a GRPC HealthCheckRequest.",
          "$ref": "#/definitions/io.k8s.api.core.v1.GRPCAction"
        },
        "httpGet": {
          "description": "HTTPGet specifies an HTTP GET request to perform.",
          "$ref": "#/definitions/io.k8s.api.core.v1.HTTPGetAction"
        },
        "initialDelaySeconds": {
          "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "type": "integer",
          "format": "int32"
        },
        "periodSeconds": {
          "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
          "type": "integer",
          "format": "int32"
        },
        "successThreshold": {
          "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
          "type": "integer",
          "format": "int32"
        },
        "tcpSocket": {
          "description": "TCPSocket specifies a connection to a TCP port.",
          "$ref": "#/definitions/io.k8s.api.core.v1.TCPSocketAction"
        },
        "terminationGracePeriodSeconds": {
          "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
          "type": "integer",
          "format": "int64"
        },
        "timeoutSeconds": {
          "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "type": "integer",
          "format": "int32"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.ResourceRequirements": {
      "description": "ResourceRequirements describes the compute resource requirements.",
      "type": "object",
      "properties": {
        "claims": {
          "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis field depends on the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ResourceClaim"
          },
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map"
        },
        "limits": {
          "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "requests": {
          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.SELinuxOptions": {
      "description": "SELinuxOptions are the labels to be applied to the container",
      "type": "object",
      "properties": {
        "level": {
          "description": "Level is SELinux level label that applies to the container.",
          "type": "string"
        },
        "role": {
          "description": "Role is a SELinux role label that applies to the container.",
          "type": "string"
        },
        "type": {
          "description": "Type is a SELinux type label that applies to the container.",
          "type": "string"
        },
        "user": {
          "description": "User is a SELinux user label that applies to the container.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.SeccompProfile": {
      "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "localhostProfile": {
          "description": "localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must be set if type is \"Localhost\". Must NOT be set for any other type.",
          "type": "string"
        },
        "type": {
          "description": "type indicates which kind of seccomp profile will be applied. Valid options are:\n\nLocalhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.",
          "type": "string"
        }
      },
      "x-kubernetes-unions": [
        {
          "discriminator": "type",
          "fields-to-discriminateBy": {
            "localhostProfile": "LocalhostProfile"
          }
        }
      ],
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.SecretKeySelector": {
      "description": "SecretKeySelector selects a key of a Secret.",
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "key": {
          "description": "The key of the secret to select from.  Must be a valid secret key.",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the Secret or its key must be defined",
          "type": "boolean"
        }
      },
      "x-kubernetes-map-type": "atomic",
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.ServiceSpec": {
      "description": "ServiceSpec describes the attributes that a user creates on a service.",
      "type": "object",
      "properties": {
        "allocateLoadBalancerNodePorts": {
          "description": "allocateLoadBalancerNodePorts defines if NodePorts will be automatically allocated for services with type LoadBalancer.  Default is \"true\". It may be set to \"false\" if the cluster load-balancer does not rely on NodePorts.  If the caller requests specific NodePorts (by specifying a value), those requests will be respected, regardless of this field. This field may only be set for services with type LoadBalancer and will be cleared if the type is changed to any other type.",
          "type": "boolean"
        },
        "clusterIP": {
          "description": "clusterIP is the IP address of the service and is usually assigned randomly. If an address is specified manually, is in-range (as per system configuration), and is not in use, it will be allocated to the service; otherwise creation of the service will fail. This field may not be changed through updates unless the type field is also being changed to ExternalName (which requires this field to be blank) or the type field is being changed from ExternalName (in which case this field may optionally be specified, as describe above).  Valid values are \"None\", empty string (\"\"), or a valid IP address. Setting this to \"None\" makes a \"headless service\" (no virtual IP), which is useful when direct endpoint connections are preferred and proxying is not required.  Only applies to types ClusterIP, NodePort, and LoadBalancer. If this field is specified when creating a Service of type ExternalName, creation will fail. This field will be wiped when updating a Service to type ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
          "type": "string"
        },
        "clusterIPs": {
          "description": "ClusterIPs is a list of IP addresses assigned to this service, and are usually assigned randomly.  If an address is specified manually, is in-range (as per system configuration), and is not in use, it will be allocated to the service; otherwise creation of the service will fail. This field may not be changed through updates unless the type field is also being changed to ExternalName (which requires this field to be empty) or the type field is being changed from ExternalName (in which case this field may optionally be specified, as describe above).  Valid values are \"None\", empty string (\"\"), or a valid IP address.  Setting this to \"None\" makes a \"headless service\" (no virtual IP), which is useful when direct endpoint connections are preferred and proxying is not required.  Only applies to types ClusterIP, NodePort, and LoadBalancer. If this field is specified when creating a Service of type ExternalName, creation will fail. This field will be wiped when updating a Service to type ExternalName.  If this field is not specified, it will be initialized from the clusterIP field.  If this field is specified, clients must ensure that clusterIPs[0] and clusterIP have the same value.\n\nThis field may hold a maximum of two entries (dual-stack IPs, in either order). These IPs must correspond to the values of the ipFamilies field. Both clusterIPs and ipFamilies are governed by the ipFamilyPolicy field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "externalIPs": {
          "description": "externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "externalName": {
          "description": "externalName is the external reference that discovery mechanisms will return as an alias for this service (e.g. a DNS CNAME record). No proxying will be involved.  Must be a lowercase RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires `type` to be \"ExternalName\".",
          "type": "string"
        },
        "externalTrafficPolicy": {
          "description": "externalTrafficPolicy describes how nodes distribute service traffic they receive on one of the Service's \"externally-facing\" addresses (NodePorts, ExternalIPs, and LoadBalancer IPs). If set to \"Local\", the proxy will configure the service in a way that assumes that external load balancers will take care of balancing the service traffic between nodes, and so each node will deliver traffic only to the node-local endpoints of the service, without masquerading the client source IP. (Traffic mistakenly sent to a node with no endpoints will be dropped.) The default value, \"Cluster\", uses the standard behavior of routing to all endpoints evenly (possibly modified by topology and other features). Note that traffic sent to an External IP or LoadBalancer IP from within the cluster will always get \"Cluster\" semantics, but clients sending to a NodePort from within the cluster may need to take traffic policy into account when picking a node.",
          "type": "string"
        },
        "healthCheckNodePort": {
          "description": "healthCheckNodePort specifies the healthcheck nodePort for the service. This only applies when type is set to LoadBalancer and externalTrafficPolicy is set to Local. If a value is specified, is in-range, and is not in use, it will be used.  If not specified, a value will be automatically allocated.  External systems (e.g. load-balancers) can use this port to determine if a given node holds endpoints for this service or not.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type). This field cannot be updated once set.",
          "type": "integer",
          "format": "int32"
        },
        "internalTrafficPolicy": {
          "description": "InternalTrafficPolicy describes how nodes distribute service traffic they receive on the ClusterIP. If set to \"Local\", the proxy will assume that pods only want to talk to endpoints of the service on the same node as the pod, dropping the traffic if there are no local endpoints. The default value, \"Cluster\", uses the standard behavior of routing to all endpoints evenly (possibly modified by topology and other features).",
          "type": "string"
        },
        "ipFamilies": {
          "description": "IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this service. This field is usually assigned automatically based on cluster configuration and the ipFamilyPolicy field. If this field is specified manually, the requested family is available in the cluster, and ipFamilyPolicy allows it, it will be used; otherwise creation of the service will fail. This field is conditionally mutable: it allows for adding or removing a secondary IP family, but it does not allow changing the primary IP family of the Service. Valid values are \"IPv4\" and \"IPv6\".  This field only applies to Services of types ClusterIP, NodePort, and LoadBalancer, and does apply to \"headless\" services. This field will be wiped when updating a Service to type ExternalName.\n\nThis field may hold a maximum of two entries (dual-stack families, in either order).  These families must correspond to the values of the clusterIPs field, if specified. Both clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "ipFamilyPolicy": {
          "description": "IPFamilyPolicy represents the dual-stack-ness requested or required by this Service. If there is no value provided, then this field will be set to SingleStack. Services can be \"SingleStack\" (a single IP family), \"PreferDualStack\" (two IP families on dual-stack configured clusters or a single IP family on single-stack clusters), or \"RequireDualStack\" (two IP families on dual-stack configured clusters, otherwise fail). The ipFamilies and clusterIPs fields depend on the value of this field. This field will be wiped when updating a service to type ExternalName.",
          "type": "string"
        },
        "loadBalancerClass": {
          "description": "loadBalancerClass is the class of the load balancer implementation this Service belongs to. If specified, the value of this field must be a label-style identifier, with an optional prefix, e.g. \"internal-vip\" or \"example.com/internal-vip\". Unprefixed names are reserved for end-users. This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load balancer implementation is used, today this is typically done through the cloud provider integration, but should apply for any default implementation. If set, it is assumed that a load balancer implementation is watching for Services with a matching class. Any default load balancer implementation (e.g. cloud providers) should ignore Services that set this field. This field can only be set when creating or updating a Service to type 'LoadBalancer'. Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.",
          "type": "string"
        },
        "loadBalancerIP": {
          "description": "Only applies to Service Type: LoadBalancer. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature. Deprecated: This field was under-specified and its meaning varies across implementations. Using it is non-portable and it may not support dual-stack. Users are encouraged to use implementation-specific annotations when available.",
          "type": "string"
        },
        "loadBalancerSourceRanges": {
          "description": "If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature.\" More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "ports": {
          "description": "The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ServicePort"
          },
          "x-kubernetes-list-map-keys": [
            "port",
            "protocol"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "port",
          "x-kubernetes-patch-strategy": "merge"
        },
        "publishNotReadyAddresses": {
          "description": "publishNotReadyAddresses indicates that any agent which deals with endpoints for this Service should disregard any indications of ready/not-ready. The primary use case for setting this field is for a StatefulSet's Headless Service to propagate SRV DNS records for its Pods for the purpose of peer discovery. The Kubernetes controllers that generate Endpoints and EndpointSlice resources for Services interpret this to mean that all endpoints are considered \"ready\" even if the Pods themselves are not. Agents which consume only Kubernetes generated endpoints through the Endpoints or EndpointSlice resources can safely assume this behavior.",
          "type": "boolean"
        },
        "selector": {
          "description": "Route service traffic to pods with label keys and values matching this selector. If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-kubernetes-map-type": "atomic"
        },
        "sessionAffinity": {
          "description": "Supports \"ClientIP\" and \"None\". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
          "type": "string"
        },
        "sessionAffinityConfig": {
          "description": "sessionAffinityConfig contains the configurations of session affinity.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SessionAffinityConfig"
        },
        "trafficDistribution": {
          "description": "TrafficDistribution offers a way to express preferences for how traffic is distributed to Service endpoints. Implementations can use this field as a hint, but are not required to guarantee strict adherence. If the field is not set, the implementation will apply its default routing strategy. If set to \"PreferClose\", implementations should prioritize endpoints that are in the same zone.",
          "type": "string"
        },
        "type": {
          "description": "type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \"ClusterIP\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object or EndpointSlice objects. If clusterIP is \"None\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a virtual IP. \"NodePort\" builds on ClusterIP and allocates a port on every node which routes to the same endpoints as the clusterIP. \"LoadBalancer\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the same endpoints as the clusterIP. \"ExternalName\" aliases this service to the specified externalName. Several other fields do not apply to ExternalName services. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.Sysctl": {
      "description": "Sysctl defines a kernel parameter to be set",
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "description": "Name of a property to set",
          "type": "string"
        },
        "value": {
          "description": "Value of a property to set",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.Toleration": {
      "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
      "type": "object",
      "properties": {
        "effect": {
          "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
          "type": "string"
        },
        "key": {
          "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
          "type": "string"
        },
        "operator": {
          "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
          "type": "string"
        },
        "tolerationSeconds": {
          "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.TopologySpreadConstraint": {
      "description": "TopologySpreadConstraint specifies how to spread matching pods among the given topology.",
      "type": "object",
      "required": [
        "maxSkew",
        "topologyKey",
        "whenUnsatisfiable"
      ],
      "properties": {
        "labelSelector": {
          "description": "LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "matchLabelKeys": {
          "description": "MatchLabelKeys is a set of pod label keys to select the pods over which spreading will be calculated. The keys are used to lookup values from the incoming pod labels, those key-value labels are ANDed with labelSelector to select the group of existing pods over which spreading will be calculated for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. MatchLabelKeys cannot be set when LabelSelector isn't set. Keys that don't exist in the incoming pod labels will be ignored. A null or empty list means only match against labelSelector.\n\nThis is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "maxSkew": {
          "description": "MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. The global minimum is the minimum number of matching pods in an eligible domain or zero if the number of eligible domains is less than MinDomains. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 2/2/1: In this case, the global minimum is 1. | zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2; scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed.",
          "type": "integer",
          "format": "int32"
        },
        "minDomains": {
          "description": "MinDomains indicates a minimum number of eligible domains. When the number of eligible domains with matching topology keys is less than minDomains, Pod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed. And when the number of eligible domains with matching topology keys equals or greater than minDomains, this value has no effect on scheduling. As a result, when the number of eligible domains is less than minDomains, scheduler won't schedule more than maxSkew Pods to those domains. If value is nil, the constraint behaves as if MinDomains is equal to 1. Valid values are integers greater than 0. When value is not nil, WhenUnsatisfiable must be DoNotSchedule.\n\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same labelSelector spread as 2/2/2: | zone1 | zone2 | zone3 | |  P P  |  P P  |  P P  | The number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0. In this situation, new pod with the same labelSelector cannot be scheduled, because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones, it will violate MaxSkew.",
          "type": "integer",
          "format": "int32"
        },
        "nodeAffinityPolicy": {
          "description": "NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew. Options are: - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations. - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\n\nIf this value is nil, the behavior is equivalent to the Honor policy.",
          "type": "string"
        },
        "nodeTaintsPolicy": {
          "description": "NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew. Options are: - Honor: nodes without taints, along with tainted nodes for which the incoming pod has a toleration, are included. - Ignore: node taints are ignored. All nodes are included.\n\nIf this value is nil, the behavior is equivalent to the Ignore policy.",
          "type": "string"
        },
        "topologyKey": {
          "description": "TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a \"bucket\", and try to put balanced number of pods into each bucket. We define a domain as a particular instance of a topology. Also, we define an eligible domain as a domain whose nodes meet the requirements of nodeAffinityPolicy and nodeTaintsPolicy. e.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology. And, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology. It's a required field.",
          "type": "string"
        },
        "whenUnsatisfiable": {
          "description": "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod if and only if every possible node assignment for that pod would violate \"MaxSkew\" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.Volume": {
      "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "awsElasticBlockStore": {
          "description": "awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Deprecated: AWSElasticBlockStore is deprecated. All operations for the in-tree awsElasticBlockStore type are redirected to the ebs.csi.aws.com CSI driver. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
          "$ref": "#/definitions/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource"
        },
        "azureDisk": {
          "description": "azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod. Deprecated: AzureDisk is deprecated. All operations for the in-tree azureDisk type are redirected to the disk.csi.azure.com CSI driver.",
          "$ref": "#/definitions/io.k8s.api.core.v1.AzureDiskVolumeSource"
        },
        "azureFile": {
          "description": "azureFile represents an Azure File Service mount on the host and bind mount to the pod. Deprecated: AzureFile is deprecated. All operations for the in-tree azureFile type are redirected to the file.csi.azure.com CSI driver.",
          "$ref": "#/definitions/io.k8s.api.core.v1.AzureFileVolumeSource"
        },
        "cephfs": {
          "description": "cephFS represents a Ceph FS mount on the host that shares a pod's lifetime. Deprecated: CephFS is deprecated and the in-tree cephfs type is no longer supported.",
          "$ref": "#/definitions/io.k8s.api.core.v1.CephFSVolumeSource"
        },
        "cinder": {
          "description": "cinder represents a cinder volume attached and mounted on kubelets host machine. Deprecated: Cinder is deprecated. All operations for the in-tree cinder type are redirected to the cinder.csi.openstack.org CSI driver. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
          "$ref": "#/definitions/io.k8s.api.core.v1.CinderVolumeSource"
        },
        "configMap": {
          "description": "configMap represents a configMap that should populate this volume",
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapVolumeSource"
        },
        "csi": {
          "description": "csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers.",
          "$ref": "#/definitions/io.k8s.api.core.v1.CSIVolumeSource"
        },
        "downwardAPI": {
          "description": "downwardAPI represents downward API about the pod that should populate this volume",
          "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeSource"
        },
        "emptyDir": {
          "description": "emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
          "$ref": "#/definitions/io.k8s.api.core.v1.EmptyDirVolumeSource"
        },
        "ephemeral": {
          "description": "ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.\n\nUse this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity\n   tracking are needed,\nc) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through\n   a PersistentVolumeClaim (see EphemeralVolumeSource for more\n   information on the connection between this volume type\n   and PersistentVolumeClaim).\n\nUse PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.\n\nA pod can use both types of ephemeral volumes and persistent volumes at the same time.",
          "$ref": "#/definitions/io.k8s.api.core.v1.EphemeralVolumeSource"
        },
        "fc": {
          "description": "fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
          "$ref": "#/definitions/io.k8s.api.core.v1.FCVolumeSource"
        },
        "flexVolume": {
          "description": "flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin. Deprecated: FlexVolume is deprecated. Consider using a CSIDriver instead.",
          "$ref": "#/definitions/io.k8s.api.core.v1.FlexVolumeSource"
        },
        "flocker": {
          "description": "flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running. Deprecated: Flocker is deprecated and the in-tree flocker type is no longer supported.",
          "$ref": "#/definitions/io.k8s.api.core.v1.FlockerVolumeSource"
        },
        "gcePersistentDisk": {
          "description": "gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Deprecated: GCEPersistentDisk is deprecated. All operations for the in-tree gcePersistentDisk type are redirected to the pd.csi.storage.gke.io CSI driver. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
          "$ref": "#/definitions/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource"
        },
        "gitRepo": {
          "description": "gitRepo represents a git repository at a particular revision. Deprecated: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
          "$ref": "#/definitions/io.k8s.api.core.v1.GitRepoVolumeSource"
        },
        "glusterfs": {
          "description": "glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. Deprecated: Glusterfs is deprecated and the in-tree glusterfs type is no longer supported.",
          "$ref": "#/definitions/io.k8s.api.core.v1.GlusterfsVolumeSource"
        },
        "hostPath": {
          "description": "hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
          "$ref": "#/definitions/io.k8s.api.core.v1.HostPathVolumeSource"
        },
        "image": {
          "description": "image represents an OCI object (a container image or artifact) pulled and mounted on the kubelet's host machine. The volume is resolved at pod startup depending on which PullPolicy value is provided:\n\n- Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails. - Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present. - IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.\n\nThe volume gets re-resolved if the pod gets deleted and recreated, which means that new remote content will become available on pod recreation. A failure to resolve or pull the image during pod startup will block containers from starting and may add significant latency. Failures will be retried using normal volume backoff and will be reported on the pod reason and message. The types of objects that may be mounted by this volume are defined by the container runtime implementation on a host machine and at minimum must include all valid types supported by the container image field. The OCI object gets mounted in a single directory (spec.containers[*].volumeMounts.mountPath) by merging the manifest layers in the same way as for container images. The volume will be mounted read-only (ro) and non-executable files (noexec). Sub path mounts for containers are not supported (spec.containers[*].volumeMounts.subpath) before 1.33. The field spec.securityContext.fsGroupChangePolicy has no effect on this volume type.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ImageVolumeSource"
        },
        "iscsi": {
          "description": "iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes/#iscsi",
          "$ref": "#/definitions/io.k8s.api.core.v1.ISCSIVolumeSource"
        },
        "name": {
          "description": "name of the volume. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "nfs": {
          "description": "nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
          "$ref": "#/definitions/io.k8s.api.core.v1.NFSVolumeSource"
        },
        "persistentVolumeClaim": {
          "description": "persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource"
        },
        "photonPersistentDisk": {
          "description": "photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine. Deprecated: PhotonPersistentDisk is deprecated and the in-tree photonPersistentDisk type is no longer supported.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource"
        },
        "portworxVolume": {
          "description": "portworxVolume represents a portworx volume attached and mounted on kubelets host machine. Deprecated: PortworxVolume is deprecated. All operations for the in-tree portworxVolume type are redirected to the pxd.portworx.com CSI driver when the CSIMigrationPortworx feature-gate is on.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PortworxVolumeSource"
        },
        "projected": {
          "description": "projected items for all in one resources secrets, configmaps, and downward API",
          "$ref": "#/definitions/io.k8s.api.core.v1.ProjectedVolumeSource"
        },
        "quobyte": {
          "description": "quobyte represents a Quobyte mount on the host that shares a pod's lifetime. Deprecated: Quobyte is deprecated and the in-tree quobyte type is no longer supported.",
          "$ref": "#/definitions/io.k8s.api.core.v1.QuobyteVolumeSource"
        },
        "rbd": {
          "description": "rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. Deprecated: RBD is deprecated and the in-tree rbd type is no longer supported.",
          "$ref": "#/definitions/io.k8s.api.core.v1.RBDVolumeSource"
        },
        "scaleIO": {
          "description": "scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes. Deprecated: ScaleIO is deprecated and the in-tree scaleIO type is no longer supported.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ScaleIOVolumeSource"
        },
        "secret": {
          "description": "secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretVolumeSource"
        },
        "storageos": {
          "description": "storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes. Deprecated: StorageOS is deprecated and the in-tree storageos type is no longer supported.",
          "$ref": "#/definitions/io.k8s.api.core.v1.StorageOSVolumeSource"
        },
        "vsphereVolume": {
          "description": "vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine. Deprecated: VsphereVolume is deprecated. All operations for the in-tree vsphereVolume type are redirected to the csi.vsphere.vmware.com CSI driver.",
          "$ref": "#/definitions/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.VolumeMount": {
      "description": "VolumeMount describes a mounting of a Volume within a container.",
      "type": "object",
      "required": [
        "name",
        "mountPath"
      ],
      "properties": {
        "mountPath": {
          "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
          "type": "string"
        },
        "mountPropagation": {
          "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10. When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified (which defaults to None).",
          "type": "string"
        },
        "name": {
          "description": "This must match the Name of a Volume.",
          "type": "string"
        },
        "readOnly": {
          "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
          "type": "boolean"
        },
        "recursiveReadOnly": {
          "description": "RecursiveReadOnly specifies whether read-only mounts should be handled recursively.\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made recursively read-only.  If this field is set to IfPossible, the mount is made recursively read-only, if it is supported by the container runtime.  If this field is set to Enabled, the mount is made recursively read-only if it is supported by the container runtime, otherwise the pod will not be started and an error will be generated to indicate the reason.\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to None (or be unspecified, which defaults to None).\n\nIf this field is not specified, it is treated as an equivalent of Disabled.",
          "type": "string"
        },
        "subPath": {
          "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
          "type": "string"
        },
        "subPathExpr": {
          "description": "Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.core.v1.WindowsSecurityContextOptions": {
      "description": "WindowsSecurityContextOptions contain Windows-specific options and credentials.",
      "type": "object",
      "properties": {
        "gmsaCredentialSpec": {
          "description": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.",
          "type": "string"
        },
        "gmsaCredentialSpecName": {
          "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
          "type": "string"
        },
        "hostProcess": {
          "description": "HostProcess determines if a container should be run as a 'Host Process' container. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers). In addition, if HostProcess is true then HostNetwork must also be set to true.",
          "type": "boolean"
        },
        "runAsUserName": {
          "description": "The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.networking.v1.IngressRule": {
      "description": "IngressRule represents the rules mapping the paths under a specified host to the related backend services. Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue.",
      "type": "object",
      "properties": {
        "host": {
          "description": "host is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the \"host\" part of the URI as defined in RFC 3986: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to\n   the IP in the Spec of the parent Ingress.\n2. The `:` delimiter is not respected because ports are not allowed.\n\t  Currently the port of an Ingress is implicitly :80 for http and\n\t  :443 for https.\nBoth these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue.\n\nhost can be \"precise\" which is a domain name without the terminating dot of a network host (e.g. \"foo.bar.com\") or \"wildcard\", which is a domain name prefixed with a single wildcard label (e.g. \"*.foo.com\"). The wildcard character '*' must appear by itself as the first DNS label and matches only a single label. You cannot have a wildcard label by itself (e.g. Host == \"*\"). Requests will be matched against the Host field in the following way: 1. If host is precise, the request matches this rule if the http host header is equal to Host. 2. If host is a wildcard, then the request matches this rule if the http host header is to equal to the suffix (removing the first label) of the wildcard rule.",
          "type": "string"
        },
        "http": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.HTTPIngressRuleValue"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.api.networking.v1.IngressTLS": {
      "description": "IngressTLS describes the transport layer security associated with an ingress.",
      "type": "object",
      "properties": {
        "hosts": {
          "description": "hosts is a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "secretName": {
          "description": "secretName is the name of the secret used to terminate TLS traffic on port 443. Field is left optional to allow TLS routing based on SNI hostname alone. If the SNI host in a listener conflicts with the \"Host\" header field used by an IngressRule, the SNI host is used for termination and value of the \"Host\" header is used for routing.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON": {
      "description": "JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil."
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1": {
      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector": {
      "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
      "type": "object",
      "properties": {
        "matchExpressions": {
          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "matchLabels": {
          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        }
      },
      "x-kubernetes-map-type": "atomic",
      "additionalProperties": false
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement": {
      "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      "type": "object",
      "required": [
        "key",
        "operator"
      ],
      "properties": {
        "key": {
          "description": "key is the label key that the selector applies to.",
          "type": "string",
          "default": ""
        },
        "operator": {
          "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
          "type": "string",
          "default": ""
        },
        "values": {
          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          },
          "x-kubernetes-list-type": "atomic"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry": {
      "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
          "type": "string"
        },
        "fieldsType": {
          "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
          "type": "string"
        },
        "fieldsV1": {
          "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1"
        },
        "manager": {
          "description": "Manager is an identifier of the workflow managing these fields.",
          "type": "string"
        },
        "operation": {
          "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
          "type": "string"
        },
        "subresource": {
          "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
          "type": "string"
        },
        "time": {
          "description": "Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "creationTimestamp": {
          "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "type": "integer",
          "format": "int64"
        },
        "deletionTimestamp": {
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          },
          "x-kubernetes-list-type": "set",
          "x-kubernetes-patch-strategy": "merge"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
          "type": "string"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "type": "integer",
          "format": "int64"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
          "type": "string"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
          },
          "x-kubernetes-list-map-keys": [
            "uid"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "uid",
          "x-kubernetes-patch-strategy": "merge"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "selfLink": {
          "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
          "type": "string"
        },
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference": {
      "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
      "type": "object",
      "required": [
        "apiVersion",
        "kind",
        "name",
        "uid"
      ],
      "properties": {
        "apiVersion": {
          "description": "API version of the referent.",
          "type": "string",
          "default": ""
        },
        "blockOwnerDeletion": {
          "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
          "type": "boolean"
        },
        "controller": {
          "description": "If true, this reference points to the managing controller.",
          "type": "boolean"
        },
        "kind": {
          "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "default": ""
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
          "type": "string",
          "default": ""
        },
        "uid": {
          "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
          "type": "string",
          "default": ""
        }
      },
      "x-kubernetes-map-type": "atomic",
      "additionalProperties": false
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Time": {
      "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
      "type": "string",
      "format": "date-time"
    },
    "io.k8s.apimachinery.pkg.util.intstr.IntOrString": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "integer"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.api.resource.Quantity": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "number"
        }
      ]
    }
  }
}
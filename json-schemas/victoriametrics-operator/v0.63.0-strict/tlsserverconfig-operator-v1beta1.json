{
  "description": "TLSServerConfig defines TLS configuration for the application's server",
  "type": "object",
  "properties": {
    "cert_file": {
      "description": "CertFile defines path to the pre-mounted file with certificate mutually exclusive with CertSecretRef",
      "type": [
        "string",
        "null"
      ]
    },
    "cert_secret_ref": {
      "description": "CertSecretRef defines reference for secret with certificate content under given key mutually exclusive with CertFile",
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.SecretKeySelector"
    },
    "cipher_suites": {
      "description": "CipherSuites defines list of supported cipher suites for TLS versions up to TLS 1.2 https://golang.org/pkg/crypto/tls/#pkg-constants",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ],
        "default": ""
      }
    },
    "client_auth_type": {
      "description": "Cert defines reference for secret with CA content under given key mutually exclusive with CertFile ClientAuthType defines server policy for client authentication If you want to enable client authentication (aka mTLS), you need to use RequireAndVerifyClientCert Note, mTLS is supported only at enterprise version of VictoriaMetrics components",
      "type": [
        "string",
        "null"
      ]
    },
    "client_ca_file": {
      "description": "ClientCAFile defines path to the pre-mounted file with CA mutually exclusive with ClientCASecretRef",
      "type": [
        "string",
        "null"
      ]
    },
    "client_ca_secret_ref": {
      "description": "ClientCASecretRef defines reference for secret with CA content under given key mutually exclusive with ClientCAFile",
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.SecretKeySelector"
    },
    "curve_preferences": {
      "description": "CurvePreferences defines elliptic curves that will be used in an ECDHE handshake, in preference order. https://golang.org/pkg/crypto/tls/#CurveID",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ],
        "default": ""
      }
    },
    "key_file": {
      "description": "KeyFile defines path to the pre-mounted file with certificate key mutually exclusive with KeySecretRef",
      "type": [
        "string",
        "null"
      ]
    },
    "key_secret_ref": {
      "description": "Key defines reference for secret with certificate key content under given key mutually exclusive with KeyFile",
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.SecretKeySelector"
    },
    "max_version": {
      "description": "MaxVersion maximum TLS version that is acceptable.",
      "type": [
        "string",
        "null"
      ]
    },
    "min_version": {
      "description": "MinVersion minimum TLS version that is acceptable.",
      "type": [
        "string",
        "null"
      ]
    },
    "prefer_server_cipher_suites": {
      "description": "PreferServerCipherSuites controls whether the server selects the client's most preferred ciphersuite",
      "type": [
        "boolean",
        "null"
      ]
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}
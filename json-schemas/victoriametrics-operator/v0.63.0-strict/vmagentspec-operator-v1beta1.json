{
  "description": "VMAgentSpec defines the desired state of VMAgent",
  "type": "object",
  "required": [
    "remoteWrite"
  ],
  "properties": {
    "aPIServerConfig": {
      "description": "APIServerConfig allows specifying a host and auth methods to access apiserver. If left empty, VMAgent is assumed to run inside of the cluster and will discover API servers automatically and use the pod's CA certificate and bearer token file at /var/run/secrets/kubernetes.io/serviceaccount/. aPIServerConfig is deprecated use apiServerConfig instead",
      "$ref": "_definitions.json#/definitions/com.victoriametrics.operator.api.operator.v1beta1.APIServerConfig"
    },
    "additionalScrapeConfigs": {
      "description": "AdditionalScrapeConfigs As scrape configs are appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility to break upgrades of VMAgent. It is advised to review VMAgent release notes to ensure that no incompatible scrape configs are going to break VMAgent after the upgrade.",
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.SecretKeySelector"
    },
    "affinity": {
      "description": "Affinity If specified, the pod's scheduling constraints.",
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.Affinity"
    },
    "apiServerConfig": {
      "description": "APIServerConfig allows specifying a host and auth methods to access apiserver. If left empty, VMAgent is assumed to run inside of the cluster and will discover API servers automatically and use the pod's CA certificate and bearer token file at /var/run/secrets/kubernetes.io/serviceaccount/.",
      "$ref": "_definitions.json#/definitions/com.victoriametrics.operator.api.operator.v1beta1.APIServerConfig"
    },
    "arbitraryFSAccessThroughSMs": {
      "description": "ArbitraryFSAccessThroughSMs configures whether configuration based on EndpointAuth can access arbitrary files on the file system of the VMAgent container e.g. bearer token files, basic auth, tls certs",
      "default": {},
      "$ref": "_definitions.json#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ArbitraryFSAccessThroughSMsConfig"
    },
    "claimTemplates": {
      "description": "ClaimTemplates allows adding additional VolumeClaimTemplates for VMAgent in StatefulMode",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "default": {},
        "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.PersistentVolumeClaim"
      }
    },
    "configMaps": {
      "description": "ConfigMaps is a list of ConfigMaps in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/configs/CONFIGMAP_NAME folder",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ],
        "default": ""
      }
    },
    "configReloadAuthKeySecret": {
      "description": "ConfigReloadAuthKeySecret defines optional secret reference authKey for /-/reload API requests. Given secret reference will be added to the application and vm-config-reloader as volume available since v0.57.0 version",
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.SecretKeySelector"
    },
    "configReloaderExtraArgs": {
      "description": "ConfigReloaderExtraArgs that will be passed to  VMAuths config-reloader container for example resyncInterval: \"30s\"",
      "type": [
        "object",
        "null"
      ],
      "additionalProperties": {
        "type": [
          "string",
          "null"
        ],
        "default": ""
      }
    },
    "configReloaderImageTag": {
      "description": "ConfigReloaderImageTag defines image:tag for config-reloader container",
      "type": [
        "string",
        "null"
      ]
    },
    "configReloaderResources": {
      "description": "ConfigReloaderResources config-reloader container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
      "default": {},
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.ResourceRequirements"
    },
    "containers": {
      "description": "Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "default": {},
        "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.Container"
      }
    },
    "daemonSetMode": {
      "description": "DaemonSetMode enables DaemonSet deployment mode instead of Deployment. Supports only VMPodScrape (available from v0.55.0). Cannot be used with statefulMode",
      "type": [
        "boolean",
        "null"
      ]
    },
    "disableAutomountServiceAccountToken": {
      "description": "DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0). Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access. For example, vmagent and vm-config-reloader requires k8s API access. Operator creates volumes with name: \"kube-api-access\", which can be used as volumeMount for extraContainers if needed. And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.",
      "type": [
        "boolean",
        "null"
      ]
    },
    "disableSelfServiceScrape": {
      "description": "DisableSelfServiceScrape controls creation of VMServiceScrape by operator for the application. Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable",
      "type": [
        "boolean",
        "null"
      ]
    },
    "dnsConfig": {
      "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.PodDNSConfig"
    },
    "dnsPolicy": {
      "description": "DNSPolicy sets DNS policy for the pod",
      "type": [
        "string",
        "null"
      ]
    },
    "enableKubernetesAPISelectors": {
      "description": "EnableKubernetesAPISelectors instructs vmagent to use CRD scrape objects spec.selectors for Kubernetes API list and watch requests. https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#list-and-watch-filtering It could be useful to reduce Kubernetes API server resource usage for serving less than 100 CRD scrape objects in total.",
      "type": [
        "boolean",
        "null"
      ]
    },
    "enforcedNamespaceLabel": {
      "description": "EnforcedNamespaceLabel enforces adding a namespace label of origin for each alert and metric that is user created. The label value will always be the namespace of the object that is being created.",
      "type": [
        "string",
        "null"
      ]
    },
    "externalLabels": {
      "description": "ExternalLabels The labels to add to any time series scraped by vmagent. it doesn't affect metrics ingested directly by push API's",
      "type": [
        "object",
        "null"
      ],
      "additionalProperties": {
        "type": [
          "string",
          "null"
        ],
        "default": ""
      }
    },
    "extraArgs": {
      "description": "ExtraArgs that will be passed to the application container for example remoteWrite.tmpDataPath: /tmp",
      "type": [
        "object",
        "null"
      ],
      "additionalProperties": {
        "type": [
          "string",
          "null"
        ],
        "default": ""
      }
    },
    "extraEnvs": {
      "description": "ExtraEnvs that will be passed to the application container",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "default": {},
        "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.EnvVar"
      }
    },
    "extraEnvsFrom": {
      "description": "ExtraEnvsFrom defines source of env variables for the application container could either be secret or configmap",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "default": {},
        "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.EnvFromSource"
      }
    },
    "globalScrapeMetricRelabelConfigs": {
      "description": "GlobalScrapeMetricRelabelConfigs is a global metric relabel configuration, which is applied to each scrape job.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "_definitions.json#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
      }
    },
    "globalScrapeRelabelConfigs": {
      "description": "GlobalScrapeRelabelConfigs is a global relabel configuration, which is applied to each samples of each scrape job during service discovery.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "_definitions.json#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
      }
    },
    "hostAliases": {
      "description": "HostAliases provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "default": {},
        "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.HostAlias"
      }
    },
    "hostNetwork": {
      "description": "HostNetwork controls whether the pod may use the node network namespace",
      "type": [
        "boolean",
        "null"
      ]
    },
    "host_aliases": {
      "description": "HostAliasesUnderScore provides mapping for ip and hostname, that would be propagated to pod, cannot be used with HostNetwork. Has Priority over hostAliases field",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "default": {},
        "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.HostAlias"
      }
    },
    "ignoreNamespaceSelectors": {
      "description": "IgnoreNamespaceSelectors if set to true will ignore NamespaceSelector settings from scrape objects, and they will only discover endpoints within their current namespace.  Defaults to false.",
      "type": [
        "boolean",
        "null"
      ]
    },
    "image": {
      "description": "Image - docker image settings if no specified operator uses default version from operator config",
      "default": {},
      "$ref": "_definitions.json#/definitions/com.victoriametrics.operator.api.operator.v1beta1.Image"
    },
    "imagePullSecrets": {
      "description": "ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "default": {},
        "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.LocalObjectReference"
      }
    },
    "ingestOnlyMode": {
      "description": "IngestOnlyMode switches vmagent into unmanaged mode it disables any config generation for scraping Currently it prevents vmagent from managing tls and auth options for remote write",
      "type": [
        "boolean",
        "null"
      ]
    },
    "initContainers": {
      "description": "InitContainers allows adding initContainers to the pod definition. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "default": {},
        "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.Container"
      }
    },
    "inlineRelabelConfig": {
      "description": "InlineRelabelConfig - defines GlobalRelabelConfig for vmagent, can be defined directly at CRD.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "_definitions.json#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
      }
    },
    "inlineScrapeConfig": {
      "description": "InlineScrapeConfig As scrape configs are appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility to break upgrades of VMAgent. It is advised to review VMAgent release notes to ensure that no incompatible scrape configs are going to break VMAgent after the upgrade. it should be defined as single yaml file. inlineScrapeConfig: |\n    - job_name: \"prometheus\"\n      static_configs:\n      - targets: [\"localhost:9090\"]",
      "type": [
        "string",
        "null"
      ]
    },
    "insertPorts": {
      "description": "InsertPorts - additional listen ports for data ingestion.",
      "$ref": "_definitions.json#/definitions/com.victoriametrics.operator.api.operator.v1beta1.InsertPorts"
    },
    "license": {
      "description": "License allows to configure license key to be used for enterprise features. Using license key is supported starting from VictoriaMetrics v1.94.0. See [here](https://docs.victoriametrics.com/victoriametrics/enterprise/)",
      "$ref": "_definitions.json#/definitions/com.victoriametrics.operator.api.operator.v1beta1.License"
    },
    "livenessProbe": {
      "description": "LivenessProbe that will be added CRD pod",
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.Probe"
    },
    "logFormat": {
      "description": "LogFormat for VMAgent to be configured with.",
      "type": [
        "string",
        "null"
      ]
    },
    "logLevel": {
      "description": "LogLevel for VMAgent to be configured with. INFO, WARN, ERROR, FATAL, PANIC",
      "type": [
        "string",
        "null"
      ]
    },
    "managedMetadata": {
      "description": "ManagedMetadata defines metadata that will be added to the all objects created by operator for the given CustomResource",
      "$ref": "_definitions.json#/definitions/com.victoriametrics.operator.api.operator.v1beta1.ManagedObjectsMetadata"
    },
    "maxScrapeInterval": {
      "description": "MaxScrapeInterval allows limiting maximum scrape interval for VMServiceScrape, VMPodScrape and other scrapes If interval is higher than defined limit, `maxScrapeInterval` will be used.",
      "type": [
        "string",
        "null"
      ]
    },
    "minReadySeconds": {
      "description": "MinReadySeconds defines a minimum number of seconds to wait before starting update next pod if previous in healthy state Has no effect for VLogs and VMSingle",
      "type": [
        "integer",
        "null"
      ],
      "format": "int32"
    },
    "minScrapeInterval": {
      "description": "MinScrapeInterval allows limiting minimal scrape interval for VMServiceScrape, VMPodScrape and other scrapes If interval is lower than defined limit, `minScrapeInterval` will be used.",
      "type": [
        "string",
        "null"
      ]
    },
    "nodeScrapeNamespaceSelector": {
      "description": "NodeScrapeNamespaceSelector defines Namespaces to be selected for VMNodeScrape discovery. Works in combination with Selector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
    },
    "nodeScrapeRelabelTemplate": {
      "description": "NodeScrapeRelabelTemplate defines relabel config, that will be added to each VMNodeScrape. it's useful for adding specific labels to all targets",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "_definitions.json#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
      }
    },
    "nodeScrapeSelector": {
      "description": "NodeScrapeSelector defines VMNodeScrape to be selected for scraping. Works in combination with NamespaceSelector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
    },
    "nodeSelector": {
      "description": "NodeSelector Define which Nodes the Pods are scheduled on.",
      "type": [
        "object",
        "null"
      ],
      "additionalProperties": {
        "type": [
          "string",
          "null"
        ],
        "default": ""
      }
    },
    "overrideHonorLabels": {
      "description": "OverrideHonorLabels if set to true overrides all user configured honor_labels. If HonorLabels is set in scrape objects  to true, this overrides honor_labels to false.",
      "type": [
        "boolean",
        "null"
      ]
    },
    "overrideHonorTimestamps": {
      "description": "OverrideHonorTimestamps allows to globally enforce honoring timestamps in all scrape configs.",
      "type": [
        "boolean",
        "null"
      ]
    },
    "paused": {
      "description": "Paused If set to true all actions on the underlying managed objects are not going to be performed, except for delete actions.",
      "type": [
        "boolean",
        "null"
      ]
    },
    "persistentVolumeClaimRetentionPolicy": {
      "description": "PersistentVolumeClaimRetentionPolicy allows configuration of PVC retention policy",
      "$ref": "_definitions.json#/definitions/io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy"
    },
    "podDisruptionBudget": {
      "description": "PodDisruptionBudget created by operator",
      "$ref": "_definitions.json#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedPodDisruptionBudgetSpec"
    },
    "podMetadata": {
      "description": "PodMetadata configures Labels and Annotations which are propagated to the vmagent pods.",
      "$ref": "_definitions.json#/definitions/com.victoriametrics.operator.api.operator.v1beta1.EmbeddedObjectMetadata"
    },
    "podScrapeNamespaceSelector": {
      "description": "PodScrapeNamespaceSelector defines Namespaces to be selected for VMPodScrape discovery. Works in combination with Selector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
    },
    "podScrapeRelabelTemplate": {
      "description": "PodScrapeRelabelTemplate defines relabel config, that will be added to each VMPodScrape. it's useful for adding specific labels to all targets",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "_definitions.json#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
      }
    },
    "podScrapeSelector": {
      "description": "PodScrapeSelector defines PodScrapes to be selected for target discovery. Works in combination with NamespaceSelector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
    },
    "port": {
      "description": "Port listen address",
      "type": [
        "string",
        "null"
      ]
    },
    "priorityClassName": {
      "description": "PriorityClassName class assigned to the Pods",
      "type": [
        "string",
        "null"
      ]
    },
    "probeNamespaceSelector": {
      "description": "ProbeNamespaceSelector defines Namespaces to be selected for VMProbe discovery. Works in combination with Selector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
    },
    "probeScrapeRelabelTemplate": {
      "description": "ProbeScrapeRelabelTemplate defines relabel config, that will be added to each VMProbeScrape. it's useful for adding specific labels to all targets",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "_definitions.json#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
      }
    },
    "probeSelector": {
      "description": "ProbeSelector defines VMProbe to be selected for target probing. Works in combination with NamespaceSelector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
    },
    "readinessGates": {
      "description": "ReadinessGates defines pod readiness gates",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "default": {},
        "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.PodReadinessGate"
      }
    },
    "readinessProbe": {
      "description": "ReadinessProbe that will be added CRD pod",
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.Probe"
    },
    "relabelConfig": {
      "description": "RelabelConfig ConfigMap with global relabel config -remoteWrite.relabelConfig This relabeling is applied to all the collected metrics before sending them to remote storage.",
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector"
    },
    "remoteWrite": {
      "description": "RemoteWrite list of victoria metrics /some other remote write system for vm it must looks like: http://victoria-metrics-single:8428/api/v1/write or for cluster different url https://docs.victoriametrics.com/victoriametrics/vmagent/#splitting-data-streams-among-multiple-systems",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "default": {},
        "$ref": "_definitions.json#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMAgentRemoteWriteSpec"
      }
    },
    "remoteWriteSettings": {
      "description": "RemoteWriteSettings defines global settings for all remoteWrite urls.",
      "$ref": "_definitions.json#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMAgentRemoteWriteSettings"
    },
    "replicaCount": {
      "description": "ReplicaCount is the expected size of the Application.",
      "type": [
        "integer",
        "null"
      ],
      "format": "int32"
    },
    "resources": {
      "description": "Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used",
      "default": {},
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.ResourceRequirements"
    },
    "revisionHistoryLimitCount": {
      "description": "The number of old ReplicaSets to retain to allow rollback in deployment or maximum number of revisions that will be maintained in the Deployment revision history. Has no effect at StatefulSets Defaults to 10.",
      "type": [
        "integer",
        "null"
      ],
      "format": "int32"
    },
    "rollingUpdate": {
      "description": "RollingUpdate - overrides deployment update params.",
      "$ref": "_definitions.json#/definitions/io.k8s.api.apps.v1.RollingUpdateDeployment"
    },
    "runtimeClassName": {
      "description": "RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/",
      "type": [
        "string",
        "null"
      ]
    },
    "schedulerName": {
      "description": "SchedulerName - defines kubernetes scheduler name",
      "type": [
        "string",
        "null"
      ]
    },
    "scrapeConfigNamespaceSelector": {
      "description": "ScrapeConfigNamespaceSelector defines Namespaces to be selected for VMScrapeConfig discovery. Works in combination with Selector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
    },
    "scrapeConfigRelabelTemplate": {
      "description": "ScrapeConfigRelabelTemplate defines relabel config, that will be added to each VMScrapeConfig. it's useful for adding specific labels to all targets",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "_definitions.json#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
      }
    },
    "scrapeConfigSelector": {
      "description": "ScrapeConfigSelector defines VMScrapeConfig to be selected for target discovery. Works in combination with NamespaceSelector.",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
    },
    "scrapeInterval": {
      "description": "ScrapeInterval defines how often scrape targets by default",
      "type": [
        "string",
        "null"
      ]
    },
    "scrapeTimeout": {
      "description": "ScrapeTimeout defines global timeout for targets scrape",
      "type": [
        "string",
        "null"
      ]
    },
    "secrets": {
      "description": "Secrets is a list of Secrets in the same namespace as the Application object, which shall be mounted into the Application container at /etc/vm/secrets/SECRET_NAME folder",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ],
        "default": ""
      }
    },
    "securityContext": {
      "description": "SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.",
      "$ref": "_definitions.json#/definitions/com.victoriametrics.operator.api.operator.v1beta1.SecurityContext"
    },
    "selectAllByDefault": {
      "description": "SelectAllByDefault changes default behavior for empty CRD selectors, such ServiceScrapeSelector. with selectAllByDefault: true and empty serviceScrapeSelector and ServiceScrapeNamespaceSelector Operator selects all exist serviceScrapes with selectAllByDefault: false - selects nothing",
      "type": [
        "boolean",
        "null"
      ]
    },
    "serviceAccountName": {
      "description": "ServiceAccountName is the name of the ServiceAccount to use to run the pods",
      "type": [
        "string",
        "null"
      ]
    },
    "serviceScrapeNamespaceSelector": {
      "description": "ServiceScrapeNamespaceSelector Namespaces to be selected for VMServiceScrape discovery. Works in combination with Selector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
    },
    "serviceScrapeRelabelTemplate": {
      "description": "ServiceScrapeRelabelTemplate defines relabel config, that will be added to each VMServiceScrape. it's useful for adding specific labels to all targets",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "_definitions.json#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
      }
    },
    "serviceScrapeSelector": {
      "description": "ServiceScrapeSelector defines ServiceScrapes to be selected for target discovery. Works in combination with NamespaceSelector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
    },
    "serviceScrapeSpec": {
      "description": "ServiceScrapeSpec that will be added to vmagent VMServiceScrape spec",
      "$ref": "_definitions.json#/definitions/com.victoriametrics.operator.api.operator.v1beta1.VMServiceScrapeSpec"
    },
    "serviceSpec": {
      "description": "ServiceSpec that will be added to vmagent service spec",
      "$ref": "_definitions.json#/definitions/com.victoriametrics.operator.api.operator.v1beta1.AdditionalServiceSpec"
    },
    "shardCount": {
      "description": "ShardCount - numbers of shards of VMAgent in this case operator will use 1 deployment/sts per shard with replicas count according to spec.replicas, see [here](https://docs.victoriametrics.com/victoriametrics/vmagent/#scraping-big-number-of-targets)",
      "type": [
        "integer",
        "null"
      ],
      "format": "int32"
    },
    "startupProbe": {
      "description": "StartupProbe that will be added to CRD pod",
      "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.Probe"
    },
    "statefulMode": {
      "description": "StatefulMode enables StatefulSet for `VMAgent` instead of Deployment it allows using persistent storage for vmagent's persistentQueue",
      "type": [
        "boolean",
        "null"
      ]
    },
    "statefulRollingUpdateStrategy": {
      "description": "StatefulRollingUpdateStrategy allows configuration for strategyType set it to RollingUpdate for disabling operator statefulSet rollingUpdate",
      "type": [
        "string",
        "null"
      ]
    },
    "statefulStorage": {
      "description": "StatefulStorage configures storage for StatefulSet",
      "$ref": "_definitions.json#/definitions/com.victoriametrics.operator.api.operator.v1beta1.StorageSpec"
    },
    "staticScrapeNamespaceSelector": {
      "description": "StaticScrapeNamespaceSelector defines Namespaces to be selected for VMStaticScrape discovery. Works in combination with NamespaceSelector. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces. If both nil - behaviour controlled by selectAllByDefault",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
    },
    "staticScrapeRelabelTemplate": {
      "description": "StaticScrapeRelabelTemplate defines relabel config, that will be added to each VMStaticScrape. it's useful for adding specific labels to all targets",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "_definitions.json#/definitions/com.victoriametrics.operator.api.operator.v1beta1.RelabelConfig"
      }
    },
    "staticScrapeSelector": {
      "description": "StaticScrapeSelector defines VMStaticScrape to be selected for target discovery. Works in combination with NamespaceSelector. If both nil - match everything. NamespaceSelector nil - only objects at VMAgent namespace. Selector nil - only objects at NamespaceSelector namespaces.",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
    },
    "streamAggrConfig": {
      "description": "StreamAggrConfig defines global stream aggregation configuration for VMAgent",
      "$ref": "_definitions.json#/definitions/com.victoriametrics.operator.api.operator.v1beta1.StreamAggrConfig"
    },
    "terminationGracePeriodSeconds": {
      "description": "TerminationGracePeriodSeconds period for container graceful termination",
      "type": [
        "integer",
        "null"
      ],
      "format": "int64"
    },
    "tolerations": {
      "description": "Tolerations If specified, the pod's tolerations.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "default": {},
        "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.Toleration"
      }
    },
    "topologySpreadConstraints": {
      "description": "TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "default": {},
        "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
      }
    },
    "updateStrategy": {
      "description": "UpdateStrategy - overrides default update strategy. works only for deployments, statefulset always use OnDelete.",
      "type": [
        "string",
        "null"
      ]
    },
    "useDefaultResources": {
      "description": "UseDefaultResources controls resource settings By default, operator sets built-in resource requirements",
      "type": [
        "boolean",
        "null"
      ]
    },
    "useStrictSecurity": {
      "description": "UseStrictSecurity enables strict security mode for component it restricts disk writes access uses non-root user out of the box drops not needed security permissions",
      "type": [
        "boolean",
        "null"
      ]
    },
    "useVMConfigReloader": {
      "description": "UseVMConfigReloader replaces prometheus-like config-reloader with vm one. It uses secrets watch instead of file watch which greatly increases speed of config updates",
      "type": [
        "boolean",
        "null"
      ]
    },
    "vmAgentExternalLabelName": {
      "description": "VMAgentExternalLabelName Name of vmAgent external label used to denote vmAgent instance name. Defaults to the value of `prometheus`. External label will _not_ be added when value is set to empty string (`\"\"`).",
      "type": [
        "string",
        "null"
      ]
    },
    "volumeMounts": {
      "description": "VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the Application container",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "default": {},
        "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.VolumeMount"
      }
    },
    "volumes": {
      "description": "Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition. Volumes specified will be appended to other volumes that are generated. / +optional",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "default": {},
        "$ref": "_definitions.json#/definitions/io.k8s.api.core.v1.Volume"
      }
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}
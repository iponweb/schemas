{
  "description": "Authenticate against Vault using a Kubernetes ServiceAccount token stored in a Secret.",
  "type": "object",
  "required": [
    "role"
  ],
  "properties": {
    "mountPath": {
      "description": "The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value \"/v1/auth/kubernetes\" will be used.",
      "type": [
        "string",
        "null"
      ]
    },
    "role": {
      "description": "A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.",
      "type": [
        "string",
        "null"
      ],
      "default": ""
    },
    "secretRef": {
      "description": "The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.",
      "default": {},
      "$ref": "_definitions.json#/definitions/io.cert-manager.pkg.apis.meta.v1.SecretKeySelector"
    },
    "serviceAccountRef": {
      "description": "A reference to a service account that will be used to request a bound token (also known as \"projected token\"). Compared to using \"secretRef\", using this field means that you don't rely on statically bound tokens. To use this field, you must configure an RBAC rule to let cert-manager request a token.",
      "$ref": "_definitions.json#/definitions/io.cert-manager.pkg.apis.certmanager.v1.ServiceAccountRef"
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}